<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Spring 2020 Master' inline='true' name='federated.1vja69t0dr9tay11rrm361qjxbwt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Spring 2020 Master' name='excel-direct.0aybqbh0nwu2fg113h6ve18fni3n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/christine.iyer/Downloads/Spring 2020 Master.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.500715' measure-ordering='alphabetic' measure-percentage='0.499285' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Master (SpringTravel2020)' inline='true' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SpringTravel2020' name='excel-direct.1rfn25x1en2ila1dgklmq06a0xxs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/christine.iyer/Desktop/SpringTravel2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1rfn25x1en2ila1dgklmq06a0xxs' name='Master' table='[Master$]' type='table'>
          <columns gridOrigin='A1:L113:no:A1:L113:0' header='yes' outcome='2'>
            <column datatype='date' name='DATE' ordinal='0' />
            <column datatype='string' name='REFERRAL' ordinal='1' />
            <column datatype='string' name='PROGRAM' ordinal='2' />
            <column datatype='string' name='LOCATION' ordinal='3' />
            <column datatype='string' name='TOWN' ordinal='4' />
            <column datatype='string' name='ST' ordinal='5' />
            <column datatype='string' name='ZIP' ordinal='6' />
            <column datatype='string' name='EPS' ordinal='7' />
            <column datatype='string' name='TYPE FAIR' ordinal='8' />
            <column datatype='string' name='STAFF' ordinal='9' />
            <column datatype='datetime' name='START' ordinal='10' />
            <column datatype='datetime' name='END' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REFERRAL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[REFERRAL]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>REFERRAL</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROGRAM</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PROGRAM]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>PROGRAM</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOWN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TOWN]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>TOWN</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ST</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ST]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>ST</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EPS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EPS]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>EPS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TYPE FAIR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TYPE FAIR]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>TYPE FAIR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STAFF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STAFF]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>STAFF</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>START</remote-name>
            <remote-type>7</remote-type>
            <local-name>[START]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>START</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>END</remote-name>
            <remote-type>7</remote-type>
            <local-name>[END]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>END</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Master]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L113:no:A1:L113:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[TOWN] + &quot;, &quot; + [ST]' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Program' datatype='string' name='[PROGRAM]' role='dimension' type='nominal' />
      <column caption='Referral' datatype='string' name='[REFERRAL]' role='dimension' type='nominal' />
      <column caption='Staff' datatype='string' name='[STAFF]' role='dimension' type='nominal' />
      <column caption='Start' datatype='datetime' name='[START]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ST]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Town' datatype='string' name='[TOWN]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Type Fair' datatype='string' name='[TYPE FAIR]' role='dimension' type='nominal' />
      <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[ST]' derivation='None' name='[none:ST:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='ST, Town'>
          <field>[ST]</field>
          <field>[TOWN]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.736755' measure-ordering='alphabetic' measure-percentage='0.263245' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ST:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet3 (Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM)' inline='true' name='federated.0ut04ph059wvwb105ih4j1khw9pv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM' name='google-sheets.1gdgep41x60ez8108yuwb198suaa'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM' googleSheetId='1fTrjbZ_t8wgCBAq4jq-y2fBgbEmma3U52y-okAhFM2g' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='christine.iyer@maine.edu' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.1gdgep41x60ez8108yuwb198suaa' name='Sheet3' table='[Sheet3$]' type='table'>
          <columns gridOrigin='A1:E96:no:A1:E96:0' header='yes' outcome='2'>
            <column datatype='date' name='Week of Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='string' name='Town' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Week of Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Week of Date]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Week of Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Town</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Town]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Town</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E96:no:A1:E96:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Town] + &quot;, &quot; + [State]' />
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Town]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
          <field>[Town]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.587748' measure-ordering='alphabetic' measure-percentage='0.412252' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FA21_Spring_Travel' inline='true' name='federated.0vcsg5o1whb9541dxy5bo0rm52k9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FA21_Spring_Travel' name='textscan.16zzh2r0t03twk18bgf03194oooi'>
            <connection class='textscan' directory='C:/Users/christine.iyer/Box/FY20_Spring_Travel' filename='FA21_Spring_Travel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.16zzh2r0t03twk18bgf03194oooi' name='FA21_Spring_Travel.csv' table='[FA21_Spring_Travel#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='City_State' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
            <column datatype='string' name='County_State' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City_State]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>City_State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County_State]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>County_State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City State' datatype='string' name='[City_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='County State' datatype='string' name='[County_State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.521523' measure-ordering='alphabetic' measure-percentage='0.478477' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='MKT_output' inline='true' name='federated.0ld2lnz1ff4gt611odja404yg1lv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MKT_output' name='textscan.1yochbe12eihkd1h7j9dx04u3gxo'>
            <connection class='textscan' directory='Z:/DAA/Marketing' filename='MKT_output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1yochbe12eihkd1h7j9dx04u3gxo' name='MKT_output.csv' table='[MKT_output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Code_Adnumber' ordinal='0' />
            <column datatype='string' name='Code_Audience' ordinal='1' />
            <column datatype='string' name='Code_Interactivity' ordinal='2' />
            <column datatype='string' name='Code_Medium' ordinal='3' />
            <column datatype='string' name='Code_Objective' ordinal='4' />
            <column datatype='string' name='Code_Product' ordinal='5' />
            <column datatype='string' name='Code_RecruitingPeriod' ordinal='6' />
            <column datatype='string' name='Code_Vendor' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='Master_Adname' ordinal='9' />
            <column datatype='string' name='Master_Adname_Type' ordinal='10' />
            <column datatype='string' name='Master_Vendor' ordinal='11' />
            <column datatype='integer' name='Master_Bounces' ordinal='12' />
            <column datatype='string' name='Master_Campaign' ordinal='13' />
            <column datatype='string' name='Master_Clickable_Completions' ordinal='14' />
            <column datatype='integer' name='Master_Clicks' ordinal='15' />
            <column datatype='string' name='Master_Clicks_Sponsored_InMail' ordinal='16' />
            <column datatype='string' name='Master_Clicks_To_Site' ordinal='17' />
            <column datatype='string' name='Master_Completions' ordinal='18' />
            <column datatype='string' name='Master_Component' ordinal='19' />
            <column datatype='real' name='Master_Cost' ordinal='20' />
            <column datatype='date' name='Master_Date' ordinal='21' />
            <column datatype='string' name='Master_Engagements' ordinal='22' />
            <column datatype='integer' name='Master_Exits' ordinal='23' />
            <column datatype='string' name='Master_Fiscal_Year' ordinal='24' />
            <column datatype='integer' name='Master_Impressions' ordinal='25' />
            <column datatype='string' name='Master_Landing_Page' ordinal='26' />
            <column datatype='string' name='Master_Opens' ordinal='27' />
            <column datatype='integer' name='Master_Pageviews' ordinal='28' />
            <column datatype='string' name='Master_Product' ordinal='29' />
            <column datatype='string' name='Master_Reach' ordinal='30' />
            <column datatype='string' name='Master_Sends' ordinal='31' />
            <column datatype='integer' name='Master_Session_Duration' ordinal='32' />
            <column datatype='integer' name='Master_Sessions' ordinal='33' />
            <column datatype='string' name='Master_Swipes' ordinal='34' />
            <column datatype='integer' name='Master_Time_On_Page' ordinal='35' />
            <column datatype='string' name='Master_Unique_Clicks' ordinal='36' />
            <column datatype='integer' name='Master_Unique_Pageviews' ordinal='37' />
            <column datatype='string' name='Master_Views' ordinal='38' />
            <column datatype='string' name='Region' ordinal='39' />
            <column datatype='string' name='Master_Results' ordinal='40' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Adnumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Adnumber]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Adnumber</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Audience</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Audience]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Audience</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Interactivity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Interactivity]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Interactivity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Medium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Medium]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Medium</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Objective</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Objective]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Objective</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Product]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Product</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_RecruitingPeriod</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_RecruitingPeriod]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_RecruitingPeriod</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Vendor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Vendor]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Vendor</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Adname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Adname]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Adname</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Adname_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Adname_Type]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Adname_Type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Vendor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Vendor]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Vendor</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Bounces</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Bounces]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Bounces</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Campaign</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Campaign]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Campaign</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clickable_Completions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Clickable_Completions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clickable_Completions</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clicks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Clicks]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clicks</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clicks_Sponsored_InMail</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Clicks_Sponsored_InMail]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clicks_Sponsored_InMail</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clicks_To_Site</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Clicks_To_Site]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clicks_To_Site</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Completions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Completions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Completions</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Component</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Component]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Component</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Master_Cost]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Cost</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Master_Date]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Engagements</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Engagements]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Engagements</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Exits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Exits]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Exits</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Fiscal_Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Fiscal_Year]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Fiscal_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Impressions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Impressions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Impressions</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Landing_Page</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Landing_Page]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Landing_Page</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Opens</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Opens]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Opens</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Pageviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Pageviews]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Pageviews</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Product]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Product</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Reach</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Reach]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Reach</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Sends</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Sends]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Sends</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Session_Duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Session_Duration]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Session_Duration</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Sessions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Sessions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Sessions</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Swipes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Swipes]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Swipes</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Time_On_Page</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Time_On_Page]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Time_On_Page</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Unique_Clicks</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Unique_Clicks]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Unique_Clicks</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Unique_Pageviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Unique_Pageviews]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Unique_Pageviews</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Views</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Views]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Views</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Results</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Results]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Results</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
      </column>
      <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
      </column>
      <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
      </column>
      <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
      </column>
      <column caption='Vendor_Medium' datatype='string' name='[Calculation_7344245108126945281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Code_Vendor]+&quot;_&quot;+[Code_Medium]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Code Adnumber' datatype='string' name='[Code_Adnumber]' role='dimension' type='nominal' />
      <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
      <column caption='Code Interactivity' datatype='string' name='[Code_Interactivity]' role='dimension' type='nominal' />
      <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
      <column caption='Code Objective' datatype='string' name='[Code_Objective]' role='dimension' type='nominal' />
      <column caption='Code Product' datatype='string' name='[Code_Product]' role='dimension' type='nominal' />
      <column caption='Code RecruitingPeriod' datatype='string' name='[Code_RecruitingPeriod]' role='dimension' type='nominal' />
      <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
      <column caption='Master Adname' datatype='string' name='[Master_Adname]' role='dimension' type='nominal' />
      <column caption='Master Adname Type' datatype='string' name='[Master_Adname_Type]' role='dimension' type='nominal' />
      <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
      <column caption='Master Campaign' datatype='string' name='[Master_Campaign]' role='dimension' type='nominal' />
      <column caption='Master Clickable Completions' datatype='string' name='[Master_Clickable_Completions]' role='dimension' type='nominal' />
      <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
      <column caption='Master Clicks Sponsored InMail' datatype='string' name='[Master_Clicks_Sponsored_InMail]' role='dimension' type='nominal' />
      <column caption='Master Clicks To Site' datatype='string' name='[Master_Clicks_To_Site]' role='dimension' type='nominal' />
      <column caption='Master Completions' datatype='string' name='[Master_Completions]' role='dimension' type='nominal' />
      <column caption='Master Component' datatype='string' name='[Master_Component]' role='dimension' type='nominal' />
      <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
      <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
      <column caption='Master Engagements' datatype='string' name='[Master_Engagements]' role='dimension' type='nominal' />
      <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
      <column caption='Master Fiscal Year' datatype='string' name='[Master_Fiscal_Year]' role='dimension' type='nominal' />
      <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
      <column caption='Master Landing Page' datatype='string' name='[Master_Landing_Page]' role='dimension' type='nominal' />
      <column caption='Master Opens' datatype='string' name='[Master_Opens]' role='dimension' type='nominal' />
      <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
      <column caption='Master Product' datatype='string' name='[Master_Product]' role='dimension' type='nominal' />
      <column caption='Master Reach' datatype='string' name='[Master_Reach]' role='dimension' type='nominal' />
      <column caption='Master Results' datatype='string' name='[Master_Results]' role='dimension' type='nominal' />
      <column caption='Master Sends' datatype='string' name='[Master_Sends]' role='dimension' type='nominal' />
      <column caption='Master Session Duration' datatype='integer' name='[Master_Session_Duration]' role='measure' type='quantitative' />
      <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
      <column caption='Master Swipes' datatype='string' name='[Master_Swipes]' role='dimension' type='nominal' />
      <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
      <column caption='Master Unique Clicks' datatype='string' name='[Master_Unique_Clicks]' role='dimension' type='nominal' />
      <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
      <column caption='Master Vendor' datatype='string' name='[Master_Vendor]' role='dimension' type='nominal' />
      <column caption='Master Views' datatype='string' name='[Master_Views]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.556291' measure-ordering='alphabetic' measure-percentage='0.443709' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='InquiriesApps_Spring19Travel' inline='true' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='InquiriesApps_Spring19Travel' name='textscan.1opvjlw1qr26gt1fatvh51qrbe19'>
            <connection class='textscan' directory='C:/Users/christine.iyer/Box/FY20_Spring_Travel' filename='InquiriesApps_Spring19Travel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1opvjlw1qr26gt1fatvh51qrbe19' name='InquiriesApps_Spring19Travel.csv' table='[InquiriesApps_Spring19Travel#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PeopleSoft ID' ordinal='0' />
            <column datatype='string' name='Contact ID' ordinal='1' />
            <column datatype='string' name='First Name' ordinal='2' />
            <column datatype='string' name='Last Name' ordinal='3' />
            <column datatype='string' name='Active' ordinal='4' />
            <column datatype='integer' name='PeopleSoftID' ordinal='5' />
            <column datatype='string' name='Email' ordinal='6' />
            <column datatype='string' name='Recruiting Category' ordinal='7' />
            <column datatype='string' name='Gender' ordinal='8' />
            <column datatype='date' name='Birthdate' ordinal='9' />
            <column datatype='integer' name='Age' ordinal='10' />
            <column datatype='string' name='Initial Referral Source' ordinal='11' />
            <column datatype='date' name='Initial Source Date' ordinal='12' />
            <column datatype='string' name='Anticipated Plan' ordinal='13' />
            <column datatype='date' name='Created Date' ordinal='14' />
            <column datatype='date' name='Last Modified Date' ordinal='15' />
            <column datatype='string' name='App Application Status' ordinal='16' />
            <column datatype='date' name='App Application Date' ordinal='17' />
            <column datatype='date' name='App Admit Date' ordinal='18' />
            <column datatype='real' name='High School GPA_App' ordinal='19' />
            <column datatype='integer' name='College GPA_App' ordinal='20' />
            <column datatype='date' name='App Deposit Date' ordinal='21' />
            <column datatype='string' name='Primary City' ordinal='22' />
            <column datatype='string' name='Primary State/Province' ordinal='23' />
            <column datatype='string' name='Primary Zip/Postal Code' ordinal='24' />
            <column datatype='string' name='Primary County' ordinal='25' />
            <column datatype='string' name='Primary Country' ordinal='26' />
            <column datatype='string' name='Student Stage' ordinal='27' />
            <column datatype='string' name='Student Type' ordinal='28' />
            <column datatype='string' name='Career' ordinal='29' />
            <column datatype='integer' name='Anticipated Start Year' ordinal='30' />
            <column datatype='string' name='Anticipated Start Term Year' ordinal='31' />
            <column datatype='string' name='Concentration' ordinal='32' />
            <column datatype='string' name='App Possible Concentration' ordinal='33' />
            <column datatype='string' name='App Possible Acad Major' ordinal='34' />
            <column datatype='string' name='App Possible Acad Major2' ordinal='35' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PeopleSoft ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PeopleSoft ID]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>PeopleSoft ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contact ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contact ID]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Contact ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[First Name]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>First Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Name]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Last Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PeopleSoftID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PeopleSoftID]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>PeopleSoftID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Email]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Email</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recruiting Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Recruiting Category]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Recruiting Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthdate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Birthdate]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Birthdate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Initial Referral Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Initial Referral Source]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Initial Referral Source</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Initial Source Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Initial Source Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Initial Source Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anticipated Plan</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Anticipated Plan]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Anticipated Plan</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Created Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Created Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Created Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Modified Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Last Modified Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Last Modified Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Application Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Application Status]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Application Status</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Application Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[App Application Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Application Date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Admit Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[App Admit Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Admit Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High School GPA_App</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High School GPA_App]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>High School GPA_App</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>College GPA_App</remote-name>
            <remote-type>20</remote-type>
            <local-name>[College GPA_App]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>College GPA_App</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Deposit Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[App Deposit Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Deposit Date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary City]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary City</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary State/Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary State/Province]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary State/Province</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary Zip/Postal Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary Zip/Postal Code]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary Zip/Postal Code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary County]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary County</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary Country]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary Country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Student Stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Student Stage]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Student Stage</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Student Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Student Type]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Student Type</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Career</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Career]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Career</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anticipated Start Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Anticipated Start Year]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Anticipated Start Year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anticipated Start Term Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Anticipated Start Term Year]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Anticipated Start Term Year</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Concentration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Concentration]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Concentration</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Possible Concentration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Possible Concentration]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Possible Concentration</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Possible Acad Major</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Possible Acad Major]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Possible Acad Major</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Possible Acad Major2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Possible Acad Major2]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Possible Acad Major2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='College GPA App' datatype='integer' name='[College GPA_App]' role='measure' type='quantitative' />
      <column caption='High School GPA App' datatype='real' name='[High School GPA_App]' role='measure' type='quantitative' />
      <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[PeopleSoft ID]' role='dimension' type='ordinal' />
      <column caption='People Soft ID' datatype='integer' name='[PeopleSoftID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
            <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Belknap, NH&quot;'>
            <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
            <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Bristol, MA&quot;'>
            <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
            <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Carroll, NH&quot;'>
            <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
            <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
            <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Essex, MA&quot;'>
            <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
            <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Grafton, NH&quot;'>
            <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Hampden, MA&quot;'>
            <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Hartford, CT&quot;'>
            <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
            <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
            <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
            <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
            <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
            <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;New Haven, CT&quot;'>
            <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;New London, CT&quot;'>
            <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
            <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Orange, VT&quot;'>
            <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
            <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Providence, RI&quot;'>
            <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
            <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Rutland, VT&quot;'>
            <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Strafford, NH&quot;'>
            <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
            <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
            <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Washington, RI&quot;'>
            <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Washington, VT&quot;'>
            <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Windham, CT&quot;'>
            <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Windham, VT&quot;'>
            <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Windsor, VT&quot;'>
            <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Worcester, MA&quot;'>
            <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Primary Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Primary County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Primary Zip/Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
          <bin default-name='false' value='&quot;In Market&quot;'>
            <value>#2017-03-01#</value>
            <value>#2017-03-02#</value>
            <value>#2017-03-03#</value>
            <value>#2017-03-04#</value>
            <value>#2017-03-05#</value>
            <value>#2017-03-06#</value>
            <value>#2017-03-07#</value>
            <value>#2017-03-08#</value>
            <value>#2017-03-09#</value>
            <value>#2017-03-10#</value>
            <value>#2017-03-11#</value>
            <value>#2017-03-12#</value>
            <value>#2017-03-13#</value>
            <value>#2017-03-14#</value>
            <value>#2017-03-15#</value>
            <value>#2017-03-16#</value>
            <value>#2017-03-17#</value>
            <value>#2017-03-18#</value>
            <value>#2017-03-19#</value>
            <value>#2017-03-20#</value>
            <value>#2017-03-21#</value>
            <value>#2017-03-22#</value>
            <value>#2017-03-23#</value>
            <value>#2017-03-24#</value>
            <value>#2017-03-25#</value>
            <value>#2017-03-27#</value>
            <value>#2017-03-28#</value>
            <value>#2017-03-29#</value>
            <value>#2017-03-30#</value>
            <value>#2017-03-31#</value>
            <value>#2017-04-01#</value>
            <value>#2017-04-02#</value>
            <value>#2017-04-03#</value>
            <value>#2017-04-04#</value>
            <value>#2017-04-05#</value>
            <value>#2017-04-06#</value>
            <value>#2017-04-07#</value>
            <value>#2017-04-09#</value>
            <value>#2017-04-10#</value>
            <value>#2017-04-11#</value>
            <value>#2017-04-12#</value>
            <value>#2017-04-13#</value>
            <value>#2017-04-14#</value>
            <value>#2017-04-15#</value>
            <value>#2017-04-16#</value>
            <value>#2017-04-17#</value>
            <value>#2017-04-18#</value>
            <value>#2017-04-19#</value>
            <value>#2017-04-20#</value>
            <value>#2017-04-21#</value>
            <value>#2017-04-22#</value>
            <value>#2017-04-24#</value>
            <value>#2017-04-25#</value>
            <value>#2017-04-26#</value>
            <value>#2017-04-27#</value>
            <value>#2017-04-28#</value>
            <value>#2017-04-30#</value>
            <value>#2017-05-01#</value>
            <value>#2017-05-02#</value>
            <value>#2017-05-03#</value>
            <value>#2017-05-04#</value>
            <value>#2017-05-05#</value>
            <value>#2017-05-06#</value>
            <value>#2017-05-07#</value>
            <value>#2017-05-08#</value>
            <value>#2017-05-09#</value>
            <value>#2017-05-10#</value>
            <value>#2017-05-11#</value>
            <value>#2017-05-15#</value>
            <value>#2017-05-16#</value>
            <value>#2017-05-17#</value>
            <value>#2017-05-18#</value>
            <value>#2017-05-19#</value>
            <value>#2017-05-21#</value>
            <value>#2017-05-22#</value>
            <value>#2017-05-23#</value>
            <value>#2017-05-24#</value>
            <value>#2017-05-26#</value>
            <value>#2017-05-27#</value>
            <value>#2017-05-28#</value>
            <value>#2017-05-30#</value>
            <value>#2017-05-31#</value>
            <value>#2017-06-02#</value>
            <value>#2017-06-05#</value>
            <value>#2017-06-06#</value>
            <value>#2017-06-07#</value>
            <value>#2017-06-08#</value>
            <value>#2017-06-09#</value>
            <value>#2017-06-10#</value>
            <value>#2017-06-12#</value>
            <value>#2017-06-13#</value>
            <value>#2017-06-14#</value>
            <value>#2017-06-15#</value>
            <value>#2018-03-01#</value>
            <value>#2018-03-02#</value>
            <value>#2018-03-03#</value>
            <value>#2018-03-04#</value>
            <value>#2018-03-05#</value>
            <value>#2018-03-06#</value>
            <value>#2018-03-07#</value>
            <value>#2018-03-08#</value>
            <value>#2018-03-10#</value>
            <value>#2018-03-11#</value>
            <value>#2018-03-12#</value>
            <value>#2018-03-13#</value>
            <value>#2018-03-14#</value>
            <value>#2018-03-15#</value>
            <value>#2018-03-16#</value>
            <value>#2018-03-17#</value>
            <value>#2018-03-18#</value>
            <value>#2018-03-19#</value>
            <value>#2018-03-20#</value>
            <value>#2018-03-21#</value>
            <value>#2018-03-22#</value>
            <value>#2018-03-23#</value>
            <value>#2018-03-24#</value>
            <value>#2018-03-25#</value>
            <value>#2018-03-26#</value>
            <value>#2018-03-27#</value>
            <value>#2018-03-28#</value>
            <value>#2018-03-29#</value>
            <value>#2018-03-30#</value>
            <value>#2018-03-31#</value>
            <value>#2018-04-01#</value>
            <value>#2018-04-02#</value>
            <value>#2018-04-03#</value>
            <value>#2018-04-04#</value>
            <value>#2018-04-05#</value>
            <value>#2018-04-06#</value>
            <value>#2018-04-07#</value>
            <value>#2018-04-08#</value>
            <value>#2018-04-09#</value>
            <value>#2018-04-10#</value>
            <value>#2018-04-11#</value>
            <value>#2018-04-12#</value>
            <value>#2018-04-13#</value>
            <value>#2018-04-14#</value>
            <value>#2018-04-15#</value>
            <value>#2018-04-16#</value>
            <value>#2018-04-17#</value>
            <value>#2018-04-18#</value>
            <value>#2018-04-19#</value>
            <value>#2018-04-20#</value>
            <value>#2018-04-21#</value>
            <value>#2018-04-22#</value>
            <value>#2018-04-23#</value>
            <value>#2018-04-24#</value>
            <value>#2018-04-25#</value>
            <value>#2018-04-26#</value>
            <value>#2018-04-27#</value>
            <value>#2018-04-28#</value>
            <value>#2018-04-29#</value>
            <value>#2018-04-30#</value>
            <value>#2018-05-01#</value>
            <value>#2018-05-02#</value>
            <value>#2018-05-03#</value>
            <value>#2018-05-04#</value>
            <value>#2018-05-05#</value>
            <value>#2018-05-07#</value>
            <value>#2018-05-08#</value>
            <value>#2018-05-09#</value>
            <value>#2018-05-10#</value>
            <value>#2018-05-11#</value>
            <value>#2018-05-12#</value>
            <value>#2018-05-14#</value>
            <value>#2018-05-15#</value>
            <value>#2018-05-16#</value>
            <value>#2018-05-17#</value>
            <value>#2018-05-18#</value>
            <value>#2018-05-19#</value>
            <value>#2018-05-20#</value>
            <value>#2018-05-21#</value>
            <value>#2018-05-22#</value>
            <value>#2018-05-23#</value>
            <value>#2018-05-24#</value>
            <value>#2018-05-25#</value>
            <value>#2018-05-27#</value>
            <value>#2018-05-29#</value>
            <value>#2018-05-30#</value>
            <value>#2018-05-31#</value>
            <value>#2018-06-01#</value>
            <value>#2018-06-04#</value>
            <value>#2018-06-05#</value>
            <value>#2018-06-06#</value>
            <value>#2018-06-07#</value>
            <value>#2018-06-08#</value>
            <value>#2018-06-10#</value>
            <value>#2018-06-11#</value>
            <value>#2018-06-12#</value>
            <value>#2018-06-13#</value>
            <value>#2018-06-14#</value>
            <value>#2018-06-15#</value>
            <value>#2019-03-11#</value>
            <value>#2019-03-12#</value>
            <value>#2019-03-13#</value>
            <value>#2019-03-14#</value>
            <value>#2019-03-15#</value>
            <value>#2019-03-16#</value>
            <value>#2019-03-17#</value>
            <value>#2019-03-18#</value>
            <value>#2019-03-19#</value>
            <value>#2019-03-20#</value>
            <value>#2019-03-21#</value>
            <value>#2019-03-22#</value>
            <value>#2019-03-23#</value>
            <value>#2019-03-24#</value>
            <value>#2019-03-25#</value>
            <value>#2019-03-26#</value>
            <value>#2019-03-27#</value>
            <value>#2019-03-28#</value>
            <value>#2019-03-29#</value>
            <value>#2019-03-30#</value>
            <value>#2019-03-31#</value>
            <value>#2019-04-01#</value>
            <value>#2019-04-02#</value>
            <value>#2019-04-03#</value>
            <value>#2019-04-04#</value>
            <value>#2019-04-05#</value>
            <value>#2019-04-06#</value>
            <value>#2019-04-07#</value>
            <value>#2019-04-08#</value>
            <value>#2019-04-09#</value>
            <value>#2019-04-10#</value>
            <value>#2019-04-11#</value>
            <value>#2019-04-12#</value>
            <value>#2019-04-13#</value>
            <value>#2019-04-14#</value>
            <value>#2019-04-15#</value>
            <value>#2019-04-16#</value>
            <value>#2019-04-17#</value>
            <value>#2019-04-18#</value>
            <value>#2019-04-19#</value>
            <value>#2019-04-20#</value>
            <value>#2019-04-21#</value>
            <value>#2019-04-22#</value>
            <value>#2019-04-23#</value>
            <value>#2019-04-24#</value>
            <value>#2019-04-25#</value>
            <value>#2019-04-26#</value>
            <value>#2019-04-27#</value>
            <value>#2019-04-28#</value>
            <value>#2019-04-29#</value>
            <value>#2019-04-30#</value>
            <value>#2019-05-01#</value>
            <value>#2019-05-02#</value>
            <value>#2019-05-03#</value>
            <value>#2019-05-04#</value>
            <value>#2019-05-05#</value>
            <value>#2019-05-06#</value>
            <value>#2019-05-07#</value>
            <value>#2019-05-08#</value>
            <value>#2019-05-09#</value>
            <value>#2019-05-10#</value>
            <value>#2019-05-11#</value>
            <value>#2019-05-12#</value>
            <value>#2019-05-13#</value>
            <value>#2019-05-14#</value>
            <value>#2019-05-15#</value>
            <value>#2019-05-16#</value>
            <value>#2019-05-17#</value>
            <value>#2019-05-18#</value>
            <value>#2019-05-19#</value>
            <value>#2019-05-20#</value>
            <value>#2019-05-21#</value>
            <value>#2019-05-22#</value>
            <value>#2019-05-23#</value>
            <value>#2019-05-24#</value>
            <value>#2019-05-25#</value>
            <value>#2019-05-26#</value>
            <value>#2019-05-27#</value>
            <value>#2019-05-28#</value>
            <value>#2019-05-29#</value>
            <value>#2019-05-30#</value>
            <value>#2019-05-31#</value>
            <value>#2019-06-01#</value>
            <value>#2019-06-02#</value>
            <value>#2019-06-03#</value>
            <value>#2019-06-04#</value>
            <value>#2019-06-05#</value>
            <value>#2019-06-06#</value>
            <value>#2019-06-07#</value>
            <value>#2019-06-08#</value>
            <value>#2019-06-09#</value>
            <value>#2019-06-10#</value>
            <value>#2019-06-11#</value>
            <value>#2019-06-12#</value>
            <value>#2019-06-13#</value>
            <value>#2019-06-14#</value>
            <value>#2019-06-15#</value>
          </bin>
          <bin default-name='false' value='&quot;Out of Market&quot;'>
            <value>%null%</value>
            <value>#2017-01-01#</value>
            <value>#2017-01-02#</value>
            <value>#2017-01-03#</value>
            <value>#2017-01-04#</value>
            <value>#2017-01-05#</value>
            <value>#2017-01-06#</value>
            <value>#2017-01-07#</value>
            <value>#2017-01-08#</value>
            <value>#2017-01-09#</value>
            <value>#2017-01-10#</value>
            <value>#2017-01-11#</value>
            <value>#2017-01-12#</value>
            <value>#2017-01-13#</value>
            <value>#2017-01-14#</value>
            <value>#2017-01-15#</value>
            <value>#2017-01-16#</value>
            <value>#2017-01-17#</value>
            <value>#2017-01-18#</value>
            <value>#2017-01-19#</value>
            <value>#2017-01-20#</value>
            <value>#2017-01-21#</value>
            <value>#2017-01-22#</value>
            <value>#2017-01-23#</value>
            <value>#2017-01-24#</value>
            <value>#2017-01-25#</value>
            <value>#2017-01-26#</value>
            <value>#2017-01-27#</value>
            <value>#2017-01-28#</value>
            <value>#2017-01-29#</value>
            <value>#2017-01-30#</value>
            <value>#2017-01-31#</value>
            <value>#2017-02-01#</value>
            <value>#2017-02-02#</value>
            <value>#2017-02-03#</value>
            <value>#2017-02-04#</value>
            <value>#2017-02-05#</value>
            <value>#2017-02-06#</value>
            <value>#2017-02-07#</value>
            <value>#2017-02-08#</value>
            <value>#2017-02-10#</value>
            <value>#2017-02-11#</value>
            <value>#2017-02-12#</value>
            <value>#2017-02-13#</value>
            <value>#2017-02-14#</value>
            <value>#2017-02-15#</value>
            <value>#2017-02-16#</value>
            <value>#2017-02-17#</value>
            <value>#2017-02-19#</value>
            <value>#2017-02-20#</value>
            <value>#2017-02-21#</value>
            <value>#2017-02-22#</value>
            <value>#2017-02-23#</value>
            <value>#2017-02-24#</value>
            <value>#2017-02-25#</value>
            <value>#2017-02-26#</value>
            <value>#2017-02-27#</value>
            <value>#2017-02-28#</value>
            <value>#2018-01-01#</value>
            <value>#2018-01-02#</value>
            <value>#2018-01-03#</value>
            <value>#2018-01-05#</value>
            <value>#2018-01-06#</value>
            <value>#2018-01-07#</value>
            <value>#2018-01-08#</value>
            <value>#2018-01-09#</value>
            <value>#2018-01-10#</value>
            <value>#2018-01-11#</value>
            <value>#2018-01-12#</value>
            <value>#2018-01-14#</value>
            <value>#2018-01-15#</value>
            <value>#2018-01-16#</value>
            <value>#2018-01-17#</value>
            <value>#2018-01-18#</value>
            <value>#2018-01-19#</value>
            <value>#2018-01-20#</value>
            <value>#2018-01-21#</value>
            <value>#2018-01-22#</value>
            <value>#2018-01-23#</value>
            <value>#2018-01-24#</value>
            <value>#2018-01-25#</value>
            <value>#2018-01-26#</value>
            <value>#2018-01-27#</value>
            <value>#2018-01-28#</value>
            <value>#2018-01-29#</value>
            <value>#2018-01-30#</value>
            <value>#2018-01-31#</value>
            <value>#2018-02-01#</value>
            <value>#2018-02-02#</value>
            <value>#2018-02-03#</value>
            <value>#2018-02-04#</value>
            <value>#2018-02-05#</value>
            <value>#2018-02-06#</value>
            <value>#2018-02-07#</value>
            <value>#2018-02-08#</value>
            <value>#2018-02-09#</value>
            <value>#2018-02-10#</value>
            <value>#2018-02-12#</value>
            <value>#2018-02-13#</value>
            <value>#2018-02-14#</value>
            <value>#2018-02-15#</value>
            <value>#2018-02-16#</value>
            <value>#2018-02-17#</value>
            <value>#2018-02-18#</value>
            <value>#2018-02-20#</value>
            <value>#2018-02-21#</value>
            <value>#2018-02-22#</value>
            <value>#2018-02-23#</value>
            <value>#2018-02-24#</value>
            <value>#2018-02-25#</value>
            <value>#2018-02-26#</value>
            <value>#2018-02-28#</value>
            <value>#2019-01-01#</value>
            <value>#2019-01-02#</value>
            <value>#2019-01-03#</value>
            <value>#2019-01-04#</value>
            <value>#2019-01-05#</value>
            <value>#2019-01-06#</value>
            <value>#2019-01-07#</value>
            <value>#2019-01-08#</value>
            <value>#2019-01-09#</value>
            <value>#2019-01-10#</value>
            <value>#2019-01-11#</value>
            <value>#2019-01-12#</value>
            <value>#2019-01-13#</value>
            <value>#2019-01-14#</value>
            <value>#2019-01-15#</value>
            <value>#2019-01-16#</value>
            <value>#2019-01-17#</value>
            <value>#2019-01-18#</value>
            <value>#2019-01-19#</value>
            <value>#2019-01-20#</value>
            <value>#2019-01-21#</value>
            <value>#2019-01-22#</value>
            <value>#2019-01-23#</value>
            <value>#2019-01-24#</value>
            <value>#2019-01-25#</value>
            <value>#2019-01-26#</value>
            <value>#2019-01-27#</value>
            <value>#2019-01-28#</value>
            <value>#2019-01-29#</value>
            <value>#2019-01-30#</value>
            <value>#2019-01-31#</value>
            <value>#2019-02-01#</value>
            <value>#2019-02-02#</value>
            <value>#2019-02-03#</value>
            <value>#2019-02-04#</value>
            <value>#2019-02-05#</value>
            <value>#2019-02-06#</value>
            <value>#2019-02-07#</value>
            <value>#2019-02-08#</value>
            <value>#2019-02-09#</value>
            <value>#2019-02-10#</value>
            <value>#2019-02-11#</value>
            <value>#2019-02-12#</value>
            <value>#2019-02-13#</value>
            <value>#2019-02-14#</value>
            <value>#2019-02-15#</value>
            <value>#2019-02-16#</value>
            <value>#2019-02-17#</value>
            <value>#2019-02-18#</value>
            <value>#2019-02-19#</value>
            <value>#2019-02-20#</value>
            <value>#2019-02-21#</value>
            <value>#2019-02-22#</value>
            <value>#2019-02-23#</value>
            <value>#2019-02-24#</value>
            <value>#2019-02-25#</value>
            <value>#2019-02-26#</value>
            <value>#2019-02-27#</value>
            <value>#2019-02-28#</value>
            <value>#2019-03-01#</value>
            <value>#2019-03-02#</value>
            <value>#2019-03-03#</value>
            <value>#2019-03-04#</value>
            <value>#2019-03-05#</value>
            <value>#2019-03-06#</value>
            <value>#2019-03-07#</value>
            <value>#2019-03-08#</value>
            <value>#2019-03-09#</value>
            <value>#2019-03-10#</value>
          </bin>
        </calculation>
      </column>
      <column caption='Target 2019' datatype='string' name='[Target]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Targeted&quot;'>
            <value>&quot;Barnstable, MA&quot;</value>
            <value>&quot;Berkshire, MA&quot;</value>
            <value>&quot;Bristol, MA&quot;</value>
            <value>&quot;Caledonia, VT&quot;</value>
            <value>&quot;Carroll, NH&quot;</value>
            <value>&quot;Cheshire, NH&quot;</value>
            <value>&quot;Chittenden, VT&quot;</value>
            <value>&quot;Essex, MA&quot;</value>
            <value>&quot;Fairfield, CT&quot;</value>
            <value>&quot;Grafton, NH&quot;</value>
            <value>&quot;Hampden, MA&quot;</value>
            <value>&quot;Hartford, CT&quot;</value>
            <value>&quot;Hillsborough, NH&quot;</value>
            <value>&quot;Litchfield, CT&quot;</value>
            <value>&quot;Merrimack, NH&quot;</value>
            <value>&quot;Middlesex, CT&quot;</value>
            <value>&quot;Middlesex, MA&quot;</value>
            <value>&quot;New Haven, CT&quot;</value>
            <value>&quot;New London, CT&quot;</value>
            <value>&quot;Norfold, MA&quot;</value>
            <value>&quot;Norfolk, MA&quot;</value>
            <value>&quot;Orange, VT&quot;</value>
            <value>&quot;Plymouth, MA&quot;</value>
            <value>&quot;Providence, RI&quot;</value>
            <value>&quot;Rockingham, NH&quot;</value>
            <value>&quot;Rutland, VT&quot;</value>
            <value>&quot;Strafford, NH&quot;</value>
            <value>&quot;Suffolk, MA&quot;</value>
            <value>&quot;Washington, RI&quot;</value>
            <value>&quot;Washington, VT&quot;</value>
            <value>&quot;Windham, CT&quot;</value>
            <value>&quot;Worcester, MA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Targets 2017 and 2018]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Target 17 18&quot;'>
            <value>&quot;Belknap, NH&quot;</value>
            <value>&quot;Caledonia, VT&quot;</value>
            <value>&quot;Chittenden, VT&quot;</value>
            <value>&quot;Essex, MA&quot;</value>
            <value>&quot;Fairfield, CT&quot;</value>
            <value>&quot;Hartford, CT&quot;</value>
            <value>&quot;Hillsborough, NH&quot;</value>
            <value>&quot;Middlesex, MA&quot;</value>
            <value>&quot;New Haven, CT&quot;</value>
            <value>&quot;Providence, RI&quot;</value>
            <value>&quot;Rockingham, NH&quot;</value>
            <value>&quot;Rutland, VT&quot;</value>
            <value>&quot;Strafford, NH&quot;</value>
            <value>&quot;Washington, RI&quot;</value>
            <value>&quot;Windham, VT&quot;</value>
            <value>&quot;Windsor, VT&quot;</value>
            <value>&quot;Worcester, MA&quot;</value>
          </bin>
        </calculation>
      </column>
      <group auto-hidden='true' hidden='true' name='[Primary City &amp; Primary State/Province]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Primary City]' />
          <groupfilter function='level-members' level='[Primary State/Province]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Primary State/Province, Primary City'>
          <field>[Primary State/Province]</field>
          <field>[Primary City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.655629' measure-ordering='alphabetic' measure-percentage='0.344371' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Primary City &amp; Primary State/Province (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;(Avon, Connecticut), (Berlin, Connecticut), (Bloomfield, Connecticut) and 14 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;(Bristol, Rhode Island)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;(New Milford, Connecticut), (New Preston Marble Dale, Connecticut), (Oakville, Connecticut) and 3 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnstable, MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belknap, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caledonia, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chittenden, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New London, CT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Strafford, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Windham, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Windsor, VT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hartford, CT&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Litchfield, CT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bristol, MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grafton, NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Essex, MA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plymouth, MA&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Hampden, MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington, RI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;(Little Compton, Rhode Island), (Middletown, Rhode Island), (Portsmouth, Rhode Island) and 1 more&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middlesex, MA&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Windham, CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk, MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hillsborough, NH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norfold, MA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockingham, NH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll, NH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheshire, NH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Merrimack, NH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sullivan, NH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Haven, CT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Middlesex, CT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairfield, CT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suffolk, MA&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Berkshire, MA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rutland, VT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Worcester, MA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master (SpringTravel2020)' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' />
          </datasources>
          <datasource-dependencies datasource='federated.08g9a9x1aemi0u14e13gp1drqfsj'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{F54879A6-D18A-4862-9AF5-3FF713E2C141}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='MKT_output' name='federated.0ld2lnz1ff4gt611odja404yg1lv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ld2lnz1ff4gt611odja404yg1lv'>
            <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
            </column>
            <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
            </column>
            <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
            </column>
            <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='Vendor_Medium' datatype='string' name='[Calculation_7344245108126945281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code_Vendor]+&quot;_&quot;+[Code_Medium]' />
            </column>
            <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
            <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
            <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
            <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
            <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
            <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
            <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
            <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
            <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
            <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
            <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
            <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
            <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='MY' name='[my:Master_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_7344245108126945281]' derivation='None' name='[none:Calculation_7344245108126945281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Audience]' derivation='None' name='[none:Code_Audience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Master_Cost]' derivation='Sum' name='[sum:Master_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Impressions]' derivation='Sum' name='[sum:Master_Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Unique_Pageviews]' derivation='Sum' name='[sum:Master_Unique_Pageviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4401424142514929662]' derivation='User' name='[usr:Calculation_-4401424142514929662:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3640878829637640192]' derivation='User' name='[usr:Calculation_3640878829637640192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[my:Master_Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201901' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201902' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201903' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201904' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201905' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201906' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Calculation_7344245108126945281:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;DBM_DISP&quot;</bucket>
              <bucket>&quot;FB_DISP&quot;</bucket>
              <bucket>&quot;IG_DISP&quot;</bucket>
              <bucket>&quot;IG_VID&quot;</bucket>
              <bucket>&quot;FB_VID&quot;</bucket>
              <bucket>&quot;FB_CAR&quot;</bucket>
              <bucket>&quot;IG_CAR&quot;</bucket>
              <bucket>&quot;SC_VID&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]'>
            <groupfilter function='member' level='[none:Code_Audience:nk]' member='&quot;TL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[my:Master_Date:ok]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Calculation_7344245108126945281:nk]</rows>
        <cols>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4DF4A259-E270-44C6-A46D-B80131021A1B}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2017-8 Targets&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Student Stage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Targets 2017 and 2018]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Target 17 18&quot;'>
                  <value>&quot;Belknap, NH&quot;</value>
                  <value>&quot;Caledonia, VT&quot;</value>
                  <value>&quot;Chittenden, VT&quot;</value>
                  <value>&quot;Essex, MA&quot;</value>
                  <value>&quot;Fairfield, CT&quot;</value>
                  <value>&quot;Hartford, CT&quot;</value>
                  <value>&quot;Hillsborough, NH&quot;</value>
                  <value>&quot;Middlesex, MA&quot;</value>
                  <value>&quot;New Haven, CT&quot;</value>
                  <value>&quot;Providence, RI&quot;</value>
                  <value>&quot;Rockingham, NH&quot;</value>
                  <value>&quot;Rutland, VT&quot;</value>
                  <value>&quot;Strafford, NH&quot;</value>
                  <value>&quot;Washington, RI&quot;</value>
                  <value>&quot;Windham, VT&quot;</value>
                  <value>&quot;Windsor, VT&quot;</value>
                  <value>&quot;Worcester, MA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Stage]' derivation='None' name='[none:Student Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Initial Source Date]' derivation='Year' name='[yr:Initial Source Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]'>
            <groupfilter function='level-members' level='[Primary City &amp; Primary State/Province (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]'>
            <groupfilter function='member' level='[Targets 2017 and 2018]' member='&quot;Target 17 18&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inquiry&quot;</bucket>
              <bucket>&quot;Applicant&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]'>
            <groupfilter function='member' level='[yr:Initial Source Date:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk])</cols>
      </table>
      <simple-id uuid='{C53E8EA0-4EB7-45C9-9140-DDB97592BBA1}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Master (SpringTravel2020)' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' />
          </datasources>
          <datasource-dependencies datasource='federated.08g9a9x1aemi0u14e13gp1drqfsj'>
            <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[TOWN] + &quot;, &quot; + [ST]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column datatype='string' name='[ST]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Town' datatype='string' name='[TOWN]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_7344245107383533568]' derivation='None' name='[none:Calculation_7344245107383533568:nk]' pivot='key' type='nominal' />
            <column-instance column='[ST]' derivation='None' name='[none:ST:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOWN]' derivation='None' name='[none:TOWN:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Day-Trunc' name='[tdy:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_7344245107383533568:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk] / ([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk] / ([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk] / ([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk] / [federated.08g9a9x1aemi0u14e13gp1drqfsj].[tdy:DATE:ok]))))</rows>
        <cols />
      </table>
      <simple-id uuid='{2B7547B5-6679-4045-8904-F3C6258EFC56}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3 (Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM)' name='federated.0ut04ph059wvwb105ih4j1khw9pv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ut04ph059wvwb105ih4j1khw9pv'>
            <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Town] + &quot;, &quot; + [State]' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Town]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_7344245107383533568]' derivation='None' name='[none:Calculation_7344245107383533568:nk]' pivot='key' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Town]' derivation='None' name='[none:Town:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk]'>
            <groupfilter function='level-members' level='[none:Town:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ut04ph059wvwb105ih4j1khw9pv].[none:State:nk] / ([federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk] / ([federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Calculation_7344245107383533568:nk] / [federated.0ut04ph059wvwb105ih4j1khw9pv].[none:County:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{47832B17-FB7A-43FC-BA29-2547A1FC750C}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master (SpringTravel2020)' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08g9a9x1aemi0u14e13gp1drqfsj'>
            <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[TOWN] + &quot;, &quot; + [ST]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[ST]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Town' datatype='string' name='[TOWN]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_7344245107383533568]' derivation='None' name='[none:Calculation_7344245107383533568:nk]' pivot='key' type='nominal' />
            <column-instance column='[ST]' derivation='None' name='[none:ST:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOWN]' derivation='None' name='[none:TOWN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]'>
            <groupfilter function='member' level='[none:Calculation_7344245107383533568:nk]' member='&quot;Billerica, MA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]'>
            <groupfilter function='member' level='[none:ST:nk]' member='&quot;MA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</column>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Longitude (generated)]' field-type='quantitative' max='-6566847.4076472074' min='-8922108.4452079628' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Latitude (generated)]' field-type='quantitative' max='6397979.6724048089' min='4905089.0914401086' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[sum:Number of Records:qk]' />
              <color column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' />
              <lod column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Latitude (generated)]</rows>
        <cols>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C756684B-5E7F-42C0-8771-D7E925051DF0}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FA21_SpringTravelAgenda&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FA21_Spring_Travel' name='federated.0vcsg5o1whb9541dxy5bo0rm52k9' />
          </datasources>
          <datasource-dependencies datasource='federated.0vcsg5o1whb9541dxy5bo0rm52k9'>
            <column caption='County State' datatype='string' name='[County_State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[County_State]' derivation='None' name='[none:County_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:State:nk] / ([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[twk:Date:ok] / [federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:County_State:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{DECAE40E-732F-46DE-950E-DE6370B0BBF1}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]</run>
            <run>&gt;  Spring Search Ads</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='MKT_output' name='federated.0ld2lnz1ff4gt611odja404yg1lv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ld2lnz1ff4gt611odja404yg1lv'>
            <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
            </column>
            <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
            </column>
            <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
            </column>
            <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
            <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
            <column caption='Code RecruitingPeriod' datatype='string' name='[Code_RecruitingPeriod]' role='dimension' type='nominal' />
            <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
            <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
            <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
            <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
            <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
            <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
            <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
            <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
            <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
            <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
            <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='Month' name='[mn:Master_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Code_Audience]' derivation='None' name='[none:Code_Audience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Medium]' derivation='None' name='[none:Code_Medium:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_RecruitingPeriod]' derivation='None' name='[none:Code_RecruitingPeriod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Vendor]' derivation='None' name='[none:Code_Vendor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Master_Cost]' derivation='Sum' name='[sum:Master_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Impressions]' derivation='Sum' name='[sum:Master_Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Unique_Pageviews]' derivation='Sum' name='[sum:Master_Unique_Pageviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4401424142514929662]' derivation='User' name='[usr:Calculation_-4401424142514929662:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3640878829637640192]' derivation='User' name='[usr:Calculation_3640878829637640192:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='Year' name='[yr:Master_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[mn:Master_Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]'>
            <groupfilter function='member' level='[none:Code_Audience:nk]' member='&quot;TL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]'>
            <groupfilter function='level-members' level='[none:Code_RecruitingPeriod:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]'>
            <groupfilter function='member' level='[yr:Master_Date:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[mn:Master_Date:ok]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk] / ([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk] / [federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]))</rows>
        <cols>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E64C22A0-36D5-468C-9991-105C8C6B86DB}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
                <bin default-name='false' value='&quot;In Market&quot;'>
                  <value>#2017-03-01#</value>
                  <value>#2017-03-02#</value>
                  <value>#2017-03-03#</value>
                  <value>#2017-03-04#</value>
                  <value>#2017-03-05#</value>
                  <value>#2017-03-06#</value>
                  <value>#2017-03-07#</value>
                  <value>#2017-03-08#</value>
                  <value>#2017-03-09#</value>
                  <value>#2017-03-10#</value>
                  <value>#2017-03-11#</value>
                  <value>#2017-03-12#</value>
                  <value>#2017-03-13#</value>
                  <value>#2017-03-14#</value>
                  <value>#2017-03-15#</value>
                  <value>#2017-03-16#</value>
                  <value>#2017-03-17#</value>
                  <value>#2017-03-18#</value>
                  <value>#2017-03-19#</value>
                  <value>#2017-03-20#</value>
                  <value>#2017-03-21#</value>
                  <value>#2017-03-22#</value>
                  <value>#2017-03-23#</value>
                  <value>#2017-03-24#</value>
                  <value>#2017-03-25#</value>
                  <value>#2017-03-27#</value>
                  <value>#2017-03-28#</value>
                  <value>#2017-03-29#</value>
                  <value>#2017-03-30#</value>
                  <value>#2017-03-31#</value>
                  <value>#2017-04-01#</value>
                  <value>#2017-04-02#</value>
                  <value>#2017-04-03#</value>
                  <value>#2017-04-04#</value>
                  <value>#2017-04-05#</value>
                  <value>#2017-04-06#</value>
                  <value>#2017-04-07#</value>
                  <value>#2017-04-09#</value>
                  <value>#2017-04-10#</value>
                  <value>#2017-04-11#</value>
                  <value>#2017-04-12#</value>
                  <value>#2017-04-13#</value>
                  <value>#2017-04-14#</value>
                  <value>#2017-04-15#</value>
                  <value>#2017-04-16#</value>
                  <value>#2017-04-17#</value>
                  <value>#2017-04-18#</value>
                  <value>#2017-04-19#</value>
                  <value>#2017-04-20#</value>
                  <value>#2017-04-21#</value>
                  <value>#2017-04-22#</value>
                  <value>#2017-04-24#</value>
                  <value>#2017-04-25#</value>
                  <value>#2017-04-26#</value>
                  <value>#2017-04-27#</value>
                  <value>#2017-04-28#</value>
                  <value>#2017-04-30#</value>
                  <value>#2017-05-01#</value>
                  <value>#2017-05-02#</value>
                  <value>#2017-05-03#</value>
                  <value>#2017-05-04#</value>
                  <value>#2017-05-05#</value>
                  <value>#2017-05-06#</value>
                  <value>#2017-05-07#</value>
                  <value>#2017-05-08#</value>
                  <value>#2017-05-09#</value>
                  <value>#2017-05-10#</value>
                  <value>#2017-05-11#</value>
                  <value>#2017-05-15#</value>
                  <value>#2017-05-16#</value>
                  <value>#2017-05-17#</value>
                  <value>#2017-05-18#</value>
                  <value>#2017-05-19#</value>
                  <value>#2017-05-21#</value>
                  <value>#2017-05-22#</value>
                  <value>#2017-05-23#</value>
                  <value>#2017-05-24#</value>
                  <value>#2017-05-26#</value>
                  <value>#2017-05-27#</value>
                  <value>#2017-05-28#</value>
                  <value>#2017-05-30#</value>
                  <value>#2017-05-31#</value>
                  <value>#2017-06-02#</value>
                  <value>#2017-06-05#</value>
                  <value>#2017-06-06#</value>
                  <value>#2017-06-07#</value>
                  <value>#2017-06-08#</value>
                  <value>#2017-06-09#</value>
                  <value>#2017-06-10#</value>
                  <value>#2017-06-12#</value>
                  <value>#2017-06-13#</value>
                  <value>#2017-06-14#</value>
                  <value>#2017-06-15#</value>
                  <value>#2018-03-01#</value>
                  <value>#2018-03-02#</value>
                  <value>#2018-03-03#</value>
                  <value>#2018-03-04#</value>
                  <value>#2018-03-05#</value>
                  <value>#2018-03-06#</value>
                  <value>#2018-03-07#</value>
                  <value>#2018-03-08#</value>
                  <value>#2018-03-10#</value>
                  <value>#2018-03-11#</value>
                  <value>#2018-03-12#</value>
                  <value>#2018-03-13#</value>
                  <value>#2018-03-14#</value>
                  <value>#2018-03-15#</value>
                  <value>#2018-03-16#</value>
                  <value>#2018-03-17#</value>
                  <value>#2018-03-18#</value>
                  <value>#2018-03-19#</value>
                  <value>#2018-03-20#</value>
                  <value>#2018-03-21#</value>
                  <value>#2018-03-22#</value>
                  <value>#2018-03-23#</value>
                  <value>#2018-03-24#</value>
                  <value>#2018-03-25#</value>
                  <value>#2018-03-26#</value>
                  <value>#2018-03-27#</value>
                  <value>#2018-03-28#</value>
                  <value>#2018-03-29#</value>
                  <value>#2018-03-30#</value>
                  <value>#2018-03-31#</value>
                  <value>#2018-04-01#</value>
                  <value>#2018-04-02#</value>
                  <value>#2018-04-03#</value>
                  <value>#2018-04-04#</value>
                  <value>#2018-04-05#</value>
                  <value>#2018-04-06#</value>
                  <value>#2018-04-07#</value>
                  <value>#2018-04-08#</value>
                  <value>#2018-04-09#</value>
                  <value>#2018-04-10#</value>
                  <value>#2018-04-11#</value>
                  <value>#2018-04-12#</value>
                  <value>#2018-04-13#</value>
                  <value>#2018-04-14#</value>
                  <value>#2018-04-15#</value>
                  <value>#2018-04-16#</value>
                  <value>#2018-04-17#</value>
                  <value>#2018-04-18#</value>
                  <value>#2018-04-19#</value>
                  <value>#2018-04-20#</value>
                  <value>#2018-04-21#</value>
                  <value>#2018-04-22#</value>
                  <value>#2018-04-23#</value>
                  <value>#2018-04-24#</value>
                  <value>#2018-04-25#</value>
                  <value>#2018-04-26#</value>
                  <value>#2018-04-27#</value>
                  <value>#2018-04-28#</value>
                  <value>#2018-04-29#</value>
                  <value>#2018-04-30#</value>
                  <value>#2018-05-01#</value>
                  <value>#2018-05-02#</value>
                  <value>#2018-05-03#</value>
                  <value>#2018-05-04#</value>
                  <value>#2018-05-05#</value>
                  <value>#2018-05-07#</value>
                  <value>#2018-05-08#</value>
                  <value>#2018-05-09#</value>
                  <value>#2018-05-10#</value>
                  <value>#2018-05-11#</value>
                  <value>#2018-05-12#</value>
                  <value>#2018-05-14#</value>
                  <value>#2018-05-15#</value>
                  <value>#2018-05-16#</value>
                  <value>#2018-05-17#</value>
                  <value>#2018-05-18#</value>
                  <value>#2018-05-19#</value>
                  <value>#2018-05-20#</value>
                  <value>#2018-05-21#</value>
                  <value>#2018-05-22#</value>
                  <value>#2018-05-23#</value>
                  <value>#2018-05-24#</value>
                  <value>#2018-05-25#</value>
                  <value>#2018-05-27#</value>
                  <value>#2018-05-29#</value>
                  <value>#2018-05-30#</value>
                  <value>#2018-05-31#</value>
                  <value>#2018-06-01#</value>
                  <value>#2018-06-04#</value>
                  <value>#2018-06-05#</value>
                  <value>#2018-06-06#</value>
                  <value>#2018-06-07#</value>
                  <value>#2018-06-08#</value>
                  <value>#2018-06-10#</value>
                  <value>#2018-06-11#</value>
                  <value>#2018-06-12#</value>
                  <value>#2018-06-13#</value>
                  <value>#2018-06-14#</value>
                  <value>#2018-06-15#</value>
                  <value>#2019-03-11#</value>
                  <value>#2019-03-12#</value>
                  <value>#2019-03-13#</value>
                  <value>#2019-03-14#</value>
                  <value>#2019-03-15#</value>
                  <value>#2019-03-16#</value>
                  <value>#2019-03-17#</value>
                  <value>#2019-03-18#</value>
                  <value>#2019-03-19#</value>
                  <value>#2019-03-20#</value>
                  <value>#2019-03-21#</value>
                  <value>#2019-03-22#</value>
                  <value>#2019-03-23#</value>
                  <value>#2019-03-24#</value>
                  <value>#2019-03-25#</value>
                  <value>#2019-03-26#</value>
                  <value>#2019-03-27#</value>
                  <value>#2019-03-28#</value>
                  <value>#2019-03-29#</value>
                  <value>#2019-03-30#</value>
                  <value>#2019-03-31#</value>
                  <value>#2019-04-01#</value>
                  <value>#2019-04-02#</value>
                  <value>#2019-04-03#</value>
                  <value>#2019-04-04#</value>
                  <value>#2019-04-05#</value>
                  <value>#2019-04-06#</value>
                  <value>#2019-04-07#</value>
                  <value>#2019-04-08#</value>
                  <value>#2019-04-09#</value>
                  <value>#2019-04-10#</value>
                  <value>#2019-04-11#</value>
                  <value>#2019-04-12#</value>
                  <value>#2019-04-13#</value>
                  <value>#2019-04-14#</value>
                  <value>#2019-04-15#</value>
                  <value>#2019-04-16#</value>
                  <value>#2019-04-17#</value>
                  <value>#2019-04-18#</value>
                  <value>#2019-04-19#</value>
                  <value>#2019-04-20#</value>
                  <value>#2019-04-21#</value>
                  <value>#2019-04-22#</value>
                  <value>#2019-04-23#</value>
                  <value>#2019-04-24#</value>
                  <value>#2019-04-25#</value>
                  <value>#2019-04-26#</value>
                  <value>#2019-04-27#</value>
                  <value>#2019-04-28#</value>
                  <value>#2019-04-29#</value>
                  <value>#2019-04-30#</value>
                  <value>#2019-05-01#</value>
                  <value>#2019-05-02#</value>
                  <value>#2019-05-03#</value>
                  <value>#2019-05-04#</value>
                  <value>#2019-05-05#</value>
                  <value>#2019-05-06#</value>
                  <value>#2019-05-07#</value>
                  <value>#2019-05-08#</value>
                  <value>#2019-05-09#</value>
                  <value>#2019-05-10#</value>
                  <value>#2019-05-11#</value>
                  <value>#2019-05-12#</value>
                  <value>#2019-05-13#</value>
                  <value>#2019-05-14#</value>
                  <value>#2019-05-15#</value>
                  <value>#2019-05-16#</value>
                  <value>#2019-05-17#</value>
                  <value>#2019-05-18#</value>
                  <value>#2019-05-19#</value>
                  <value>#2019-05-20#</value>
                  <value>#2019-05-21#</value>
                  <value>#2019-05-22#</value>
                  <value>#2019-05-23#</value>
                  <value>#2019-05-24#</value>
                  <value>#2019-05-25#</value>
                  <value>#2019-05-26#</value>
                  <value>#2019-05-27#</value>
                  <value>#2019-05-28#</value>
                  <value>#2019-05-29#</value>
                  <value>#2019-05-30#</value>
                  <value>#2019-05-31#</value>
                  <value>#2019-06-01#</value>
                  <value>#2019-06-02#</value>
                  <value>#2019-06-03#</value>
                  <value>#2019-06-04#</value>
                  <value>#2019-06-05#</value>
                  <value>#2019-06-06#</value>
                  <value>#2019-06-07#</value>
                  <value>#2019-06-08#</value>
                  <value>#2019-06-09#</value>
                  <value>#2019-06-10#</value>
                  <value>#2019-06-11#</value>
                  <value>#2019-06-12#</value>
                  <value>#2019-06-13#</value>
                  <value>#2019-06-14#</value>
                  <value>#2019-06-15#</value>
                </bin>
                <bin default-name='false' value='&quot;Out of Market&quot;'>
                  <value>%null%</value>
                  <value>#2017-01-01#</value>
                  <value>#2017-01-02#</value>
                  <value>#2017-01-03#</value>
                  <value>#2017-01-04#</value>
                  <value>#2017-01-05#</value>
                  <value>#2017-01-06#</value>
                  <value>#2017-01-07#</value>
                  <value>#2017-01-08#</value>
                  <value>#2017-01-09#</value>
                  <value>#2017-01-10#</value>
                  <value>#2017-01-11#</value>
                  <value>#2017-01-12#</value>
                  <value>#2017-01-13#</value>
                  <value>#2017-01-14#</value>
                  <value>#2017-01-15#</value>
                  <value>#2017-01-16#</value>
                  <value>#2017-01-17#</value>
                  <value>#2017-01-18#</value>
                  <value>#2017-01-19#</value>
                  <value>#2017-01-20#</value>
                  <value>#2017-01-21#</value>
                  <value>#2017-01-22#</value>
                  <value>#2017-01-23#</value>
                  <value>#2017-01-24#</value>
                  <value>#2017-01-25#</value>
                  <value>#2017-01-26#</value>
                  <value>#2017-01-27#</value>
                  <value>#2017-01-28#</value>
                  <value>#2017-01-29#</value>
                  <value>#2017-01-30#</value>
                  <value>#2017-01-31#</value>
                  <value>#2017-02-01#</value>
                  <value>#2017-02-02#</value>
                  <value>#2017-02-03#</value>
                  <value>#2017-02-04#</value>
                  <value>#2017-02-05#</value>
                  <value>#2017-02-06#</value>
                  <value>#2017-02-07#</value>
                  <value>#2017-02-08#</value>
                  <value>#2017-02-10#</value>
                  <value>#2017-02-11#</value>
                  <value>#2017-02-12#</value>
                  <value>#2017-02-13#</value>
                  <value>#2017-02-14#</value>
                  <value>#2017-02-15#</value>
                  <value>#2017-02-16#</value>
                  <value>#2017-02-17#</value>
                  <value>#2017-02-19#</value>
                  <value>#2017-02-20#</value>
                  <value>#2017-02-21#</value>
                  <value>#2017-02-22#</value>
                  <value>#2017-02-23#</value>
                  <value>#2017-02-24#</value>
                  <value>#2017-02-25#</value>
                  <value>#2017-02-26#</value>
                  <value>#2017-02-27#</value>
                  <value>#2017-02-28#</value>
                  <value>#2018-01-01#</value>
                  <value>#2018-01-02#</value>
                  <value>#2018-01-03#</value>
                  <value>#2018-01-05#</value>
                  <value>#2018-01-06#</value>
                  <value>#2018-01-07#</value>
                  <value>#2018-01-08#</value>
                  <value>#2018-01-09#</value>
                  <value>#2018-01-10#</value>
                  <value>#2018-01-11#</value>
                  <value>#2018-01-12#</value>
                  <value>#2018-01-14#</value>
                  <value>#2018-01-15#</value>
                  <value>#2018-01-16#</value>
                  <value>#2018-01-17#</value>
                  <value>#2018-01-18#</value>
                  <value>#2018-01-19#</value>
                  <value>#2018-01-20#</value>
                  <value>#2018-01-21#</value>
                  <value>#2018-01-22#</value>
                  <value>#2018-01-23#</value>
                  <value>#2018-01-24#</value>
                  <value>#2018-01-25#</value>
                  <value>#2018-01-26#</value>
                  <value>#2018-01-27#</value>
                  <value>#2018-01-28#</value>
                  <value>#2018-01-29#</value>
                  <value>#2018-01-30#</value>
                  <value>#2018-01-31#</value>
                  <value>#2018-02-01#</value>
                  <value>#2018-02-02#</value>
                  <value>#2018-02-03#</value>
                  <value>#2018-02-04#</value>
                  <value>#2018-02-05#</value>
                  <value>#2018-02-06#</value>
                  <value>#2018-02-07#</value>
                  <value>#2018-02-08#</value>
                  <value>#2018-02-09#</value>
                  <value>#2018-02-10#</value>
                  <value>#2018-02-12#</value>
                  <value>#2018-02-13#</value>
                  <value>#2018-02-14#</value>
                  <value>#2018-02-15#</value>
                  <value>#2018-02-16#</value>
                  <value>#2018-02-17#</value>
                  <value>#2018-02-18#</value>
                  <value>#2018-02-20#</value>
                  <value>#2018-02-21#</value>
                  <value>#2018-02-22#</value>
                  <value>#2018-02-23#</value>
                  <value>#2018-02-24#</value>
                  <value>#2018-02-25#</value>
                  <value>#2018-02-26#</value>
                  <value>#2018-02-28#</value>
                  <value>#2019-01-01#</value>
                  <value>#2019-01-02#</value>
                  <value>#2019-01-03#</value>
                  <value>#2019-01-04#</value>
                  <value>#2019-01-05#</value>
                  <value>#2019-01-06#</value>
                  <value>#2019-01-07#</value>
                  <value>#2019-01-08#</value>
                  <value>#2019-01-09#</value>
                  <value>#2019-01-10#</value>
                  <value>#2019-01-11#</value>
                  <value>#2019-01-12#</value>
                  <value>#2019-01-13#</value>
                  <value>#2019-01-14#</value>
                  <value>#2019-01-15#</value>
                  <value>#2019-01-16#</value>
                  <value>#2019-01-17#</value>
                  <value>#2019-01-18#</value>
                  <value>#2019-01-19#</value>
                  <value>#2019-01-20#</value>
                  <value>#2019-01-21#</value>
                  <value>#2019-01-22#</value>
                  <value>#2019-01-23#</value>
                  <value>#2019-01-24#</value>
                  <value>#2019-01-25#</value>
                  <value>#2019-01-26#</value>
                  <value>#2019-01-27#</value>
                  <value>#2019-01-28#</value>
                  <value>#2019-01-29#</value>
                  <value>#2019-01-30#</value>
                  <value>#2019-01-31#</value>
                  <value>#2019-02-01#</value>
                  <value>#2019-02-02#</value>
                  <value>#2019-02-03#</value>
                  <value>#2019-02-04#</value>
                  <value>#2019-02-05#</value>
                  <value>#2019-02-06#</value>
                  <value>#2019-02-07#</value>
                  <value>#2019-02-08#</value>
                  <value>#2019-02-09#</value>
                  <value>#2019-02-10#</value>
                  <value>#2019-02-11#</value>
                  <value>#2019-02-12#</value>
                  <value>#2019-02-13#</value>
                  <value>#2019-02-14#</value>
                  <value>#2019-02-15#</value>
                  <value>#2019-02-16#</value>
                  <value>#2019-02-17#</value>
                  <value>#2019-02-18#</value>
                  <value>#2019-02-19#</value>
                  <value>#2019-02-20#</value>
                  <value>#2019-02-21#</value>
                  <value>#2019-02-22#</value>
                  <value>#2019-02-23#</value>
                  <value>#2019-02-24#</value>
                  <value>#2019-02-25#</value>
                  <value>#2019-02-26#</value>
                  <value>#2019-02-27#</value>
                  <value>#2019-02-28#</value>
                  <value>#2019-03-01#</value>
                  <value>#2019-03-02#</value>
                  <value>#2019-03-03#</value>
                  <value>#2019-03-04#</value>
                  <value>#2019-03-05#</value>
                  <value>#2019-03-06#</value>
                  <value>#2019-03-07#</value>
                  <value>#2019-03-08#</value>
                  <value>#2019-03-09#</value>
                  <value>#2019-03-10#</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary City]' derivation='None' name='[none:Primary City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]'>
            <groupfilter function='member' level='[Run Time]' member='&quot;In Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Vermont&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]' field-type='quantitative' max='-7641859.2513578646' min='-8498897.885974668' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]' field-type='quantitative' max='5755923.5537957689' min='5250472.6637748862' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]</rows>
        <cols>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{24FA6E1F-1983-4676-AC8C-EAF9EFB00AFA}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2019 Targeted Areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
                <bin default-name='false' value='&quot;In Market&quot;'>
                  <value>#2017-03-01#</value>
                  <value>#2017-03-02#</value>
                  <value>#2017-03-03#</value>
                  <value>#2017-03-04#</value>
                  <value>#2017-03-05#</value>
                  <value>#2017-03-06#</value>
                  <value>#2017-03-07#</value>
                  <value>#2017-03-08#</value>
                  <value>#2017-03-09#</value>
                  <value>#2017-03-10#</value>
                  <value>#2017-03-11#</value>
                  <value>#2017-03-12#</value>
                  <value>#2017-03-13#</value>
                  <value>#2017-03-14#</value>
                  <value>#2017-03-15#</value>
                  <value>#2017-03-16#</value>
                  <value>#2017-03-17#</value>
                  <value>#2017-03-18#</value>
                  <value>#2017-03-19#</value>
                  <value>#2017-03-20#</value>
                  <value>#2017-03-21#</value>
                  <value>#2017-03-22#</value>
                  <value>#2017-03-23#</value>
                  <value>#2017-03-24#</value>
                  <value>#2017-03-25#</value>
                  <value>#2017-03-27#</value>
                  <value>#2017-03-28#</value>
                  <value>#2017-03-29#</value>
                  <value>#2017-03-30#</value>
                  <value>#2017-03-31#</value>
                  <value>#2017-04-01#</value>
                  <value>#2017-04-02#</value>
                  <value>#2017-04-03#</value>
                  <value>#2017-04-04#</value>
                  <value>#2017-04-05#</value>
                  <value>#2017-04-06#</value>
                  <value>#2017-04-07#</value>
                  <value>#2017-04-09#</value>
                  <value>#2017-04-10#</value>
                  <value>#2017-04-11#</value>
                  <value>#2017-04-12#</value>
                  <value>#2017-04-13#</value>
                  <value>#2017-04-14#</value>
                  <value>#2017-04-15#</value>
                  <value>#2017-04-16#</value>
                  <value>#2017-04-17#</value>
                  <value>#2017-04-18#</value>
                  <value>#2017-04-19#</value>
                  <value>#2017-04-20#</value>
                  <value>#2017-04-21#</value>
                  <value>#2017-04-22#</value>
                  <value>#2017-04-24#</value>
                  <value>#2017-04-25#</value>
                  <value>#2017-04-26#</value>
                  <value>#2017-04-27#</value>
                  <value>#2017-04-28#</value>
                  <value>#2017-04-30#</value>
                  <value>#2017-05-01#</value>
                  <value>#2017-05-02#</value>
                  <value>#2017-05-03#</value>
                  <value>#2017-05-04#</value>
                  <value>#2017-05-05#</value>
                  <value>#2017-05-06#</value>
                  <value>#2017-05-07#</value>
                  <value>#2017-05-08#</value>
                  <value>#2017-05-09#</value>
                  <value>#2017-05-10#</value>
                  <value>#2017-05-11#</value>
                  <value>#2017-05-15#</value>
                  <value>#2017-05-16#</value>
                  <value>#2017-05-17#</value>
                  <value>#2017-05-18#</value>
                  <value>#2017-05-19#</value>
                  <value>#2017-05-21#</value>
                  <value>#2017-05-22#</value>
                  <value>#2017-05-23#</value>
                  <value>#2017-05-24#</value>
                  <value>#2017-05-26#</value>
                  <value>#2017-05-27#</value>
                  <value>#2017-05-28#</value>
                  <value>#2017-05-30#</value>
                  <value>#2017-05-31#</value>
                  <value>#2017-06-02#</value>
                  <value>#2017-06-05#</value>
                  <value>#2017-06-06#</value>
                  <value>#2017-06-07#</value>
                  <value>#2017-06-08#</value>
                  <value>#2017-06-09#</value>
                  <value>#2017-06-10#</value>
                  <value>#2017-06-12#</value>
                  <value>#2017-06-13#</value>
                  <value>#2017-06-14#</value>
                  <value>#2017-06-15#</value>
                  <value>#2018-03-01#</value>
                  <value>#2018-03-02#</value>
                  <value>#2018-03-03#</value>
                  <value>#2018-03-04#</value>
                  <value>#2018-03-05#</value>
                  <value>#2018-03-06#</value>
                  <value>#2018-03-07#</value>
                  <value>#2018-03-08#</value>
                  <value>#2018-03-10#</value>
                  <value>#2018-03-11#</value>
                  <value>#2018-03-12#</value>
                  <value>#2018-03-13#</value>
                  <value>#2018-03-14#</value>
                  <value>#2018-03-15#</value>
                  <value>#2018-03-16#</value>
                  <value>#2018-03-17#</value>
                  <value>#2018-03-18#</value>
                  <value>#2018-03-19#</value>
                  <value>#2018-03-20#</value>
                  <value>#2018-03-21#</value>
                  <value>#2018-03-22#</value>
                  <value>#2018-03-23#</value>
                  <value>#2018-03-24#</value>
                  <value>#2018-03-25#</value>
                  <value>#2018-03-26#</value>
                  <value>#2018-03-27#</value>
                  <value>#2018-03-28#</value>
                  <value>#2018-03-29#</value>
                  <value>#2018-03-30#</value>
                  <value>#2018-03-31#</value>
                  <value>#2018-04-01#</value>
                  <value>#2018-04-02#</value>
                  <value>#2018-04-03#</value>
                  <value>#2018-04-04#</value>
                  <value>#2018-04-05#</value>
                  <value>#2018-04-06#</value>
                  <value>#2018-04-07#</value>
                  <value>#2018-04-08#</value>
                  <value>#2018-04-09#</value>
                  <value>#2018-04-10#</value>
                  <value>#2018-04-11#</value>
                  <value>#2018-04-12#</value>
                  <value>#2018-04-13#</value>
                  <value>#2018-04-14#</value>
                  <value>#2018-04-15#</value>
                  <value>#2018-04-16#</value>
                  <value>#2018-04-17#</value>
                  <value>#2018-04-18#</value>
                  <value>#2018-04-19#</value>
                  <value>#2018-04-20#</value>
                  <value>#2018-04-21#</value>
                  <value>#2018-04-22#</value>
                  <value>#2018-04-23#</value>
                  <value>#2018-04-24#</value>
                  <value>#2018-04-25#</value>
                  <value>#2018-04-26#</value>
                  <value>#2018-04-27#</value>
                  <value>#2018-04-28#</value>
                  <value>#2018-04-29#</value>
                  <value>#2018-04-30#</value>
                  <value>#2018-05-01#</value>
                  <value>#2018-05-02#</value>
                  <value>#2018-05-03#</value>
                  <value>#2018-05-04#</value>
                  <value>#2018-05-05#</value>
                  <value>#2018-05-07#</value>
                  <value>#2018-05-08#</value>
                  <value>#2018-05-09#</value>
                  <value>#2018-05-10#</value>
                  <value>#2018-05-11#</value>
                  <value>#2018-05-12#</value>
                  <value>#2018-05-14#</value>
                  <value>#2018-05-15#</value>
                  <value>#2018-05-16#</value>
                  <value>#2018-05-17#</value>
                  <value>#2018-05-18#</value>
                  <value>#2018-05-19#</value>
                  <value>#2018-05-20#</value>
                  <value>#2018-05-21#</value>
                  <value>#2018-05-22#</value>
                  <value>#2018-05-23#</value>
                  <value>#2018-05-24#</value>
                  <value>#2018-05-25#</value>
                  <value>#2018-05-27#</value>
                  <value>#2018-05-29#</value>
                  <value>#2018-05-30#</value>
                  <value>#2018-05-31#</value>
                  <value>#2018-06-01#</value>
                  <value>#2018-06-04#</value>
                  <value>#2018-06-05#</value>
                  <value>#2018-06-06#</value>
                  <value>#2018-06-07#</value>
                  <value>#2018-06-08#</value>
                  <value>#2018-06-10#</value>
                  <value>#2018-06-11#</value>
                  <value>#2018-06-12#</value>
                  <value>#2018-06-13#</value>
                  <value>#2018-06-14#</value>
                  <value>#2018-06-15#</value>
                  <value>#2019-03-11#</value>
                  <value>#2019-03-12#</value>
                  <value>#2019-03-13#</value>
                  <value>#2019-03-14#</value>
                  <value>#2019-03-15#</value>
                  <value>#2019-03-16#</value>
                  <value>#2019-03-17#</value>
                  <value>#2019-03-18#</value>
                  <value>#2019-03-19#</value>
                  <value>#2019-03-20#</value>
                  <value>#2019-03-21#</value>
                  <value>#2019-03-22#</value>
                  <value>#2019-03-23#</value>
                  <value>#2019-03-24#</value>
                  <value>#2019-03-25#</value>
                  <value>#2019-03-26#</value>
                  <value>#2019-03-27#</value>
                  <value>#2019-03-28#</value>
                  <value>#2019-03-29#</value>
                  <value>#2019-03-30#</value>
                  <value>#2019-03-31#</value>
                  <value>#2019-04-01#</value>
                  <value>#2019-04-02#</value>
                  <value>#2019-04-03#</value>
                  <value>#2019-04-04#</value>
                  <value>#2019-04-05#</value>
                  <value>#2019-04-06#</value>
                  <value>#2019-04-07#</value>
                  <value>#2019-04-08#</value>
                  <value>#2019-04-09#</value>
                  <value>#2019-04-10#</value>
                  <value>#2019-04-11#</value>
                  <value>#2019-04-12#</value>
                  <value>#2019-04-13#</value>
                  <value>#2019-04-14#</value>
                  <value>#2019-04-15#</value>
                  <value>#2019-04-16#</value>
                  <value>#2019-04-17#</value>
                  <value>#2019-04-18#</value>
                  <value>#2019-04-19#</value>
                  <value>#2019-04-20#</value>
                  <value>#2019-04-21#</value>
                  <value>#2019-04-22#</value>
                  <value>#2019-04-23#</value>
                  <value>#2019-04-24#</value>
                  <value>#2019-04-25#</value>
                  <value>#2019-04-26#</value>
                  <value>#2019-04-27#</value>
                  <value>#2019-04-28#</value>
                  <value>#2019-04-29#</value>
                  <value>#2019-04-30#</value>
                  <value>#2019-05-01#</value>
                  <value>#2019-05-02#</value>
                  <value>#2019-05-03#</value>
                  <value>#2019-05-04#</value>
                  <value>#2019-05-05#</value>
                  <value>#2019-05-06#</value>
                  <value>#2019-05-07#</value>
                  <value>#2019-05-08#</value>
                  <value>#2019-05-09#</value>
                  <value>#2019-05-10#</value>
                  <value>#2019-05-11#</value>
                  <value>#2019-05-12#</value>
                  <value>#2019-05-13#</value>
                  <value>#2019-05-14#</value>
                  <value>#2019-05-15#</value>
                  <value>#2019-05-16#</value>
                  <value>#2019-05-17#</value>
                  <value>#2019-05-18#</value>
                  <value>#2019-05-19#</value>
                  <value>#2019-05-20#</value>
                  <value>#2019-05-21#</value>
                  <value>#2019-05-22#</value>
                  <value>#2019-05-23#</value>
                  <value>#2019-05-24#</value>
                  <value>#2019-05-25#</value>
                  <value>#2019-05-26#</value>
                  <value>#2019-05-27#</value>
                  <value>#2019-05-28#</value>
                  <value>#2019-05-29#</value>
                  <value>#2019-05-30#</value>
                  <value>#2019-05-31#</value>
                  <value>#2019-06-01#</value>
                  <value>#2019-06-02#</value>
                  <value>#2019-06-03#</value>
                  <value>#2019-06-04#</value>
                  <value>#2019-06-05#</value>
                  <value>#2019-06-06#</value>
                  <value>#2019-06-07#</value>
                  <value>#2019-06-08#</value>
                  <value>#2019-06-09#</value>
                  <value>#2019-06-10#</value>
                  <value>#2019-06-11#</value>
                  <value>#2019-06-12#</value>
                  <value>#2019-06-13#</value>
                  <value>#2019-06-14#</value>
                  <value>#2019-06-15#</value>
                </bin>
                <bin default-name='false' value='&quot;Out of Market&quot;'>
                  <value>%null%</value>
                  <value>#2017-01-01#</value>
                  <value>#2017-01-02#</value>
                  <value>#2017-01-03#</value>
                  <value>#2017-01-04#</value>
                  <value>#2017-01-05#</value>
                  <value>#2017-01-06#</value>
                  <value>#2017-01-07#</value>
                  <value>#2017-01-08#</value>
                  <value>#2017-01-09#</value>
                  <value>#2017-01-10#</value>
                  <value>#2017-01-11#</value>
                  <value>#2017-01-12#</value>
                  <value>#2017-01-13#</value>
                  <value>#2017-01-14#</value>
                  <value>#2017-01-15#</value>
                  <value>#2017-01-16#</value>
                  <value>#2017-01-17#</value>
                  <value>#2017-01-18#</value>
                  <value>#2017-01-19#</value>
                  <value>#2017-01-20#</value>
                  <value>#2017-01-21#</value>
                  <value>#2017-01-22#</value>
                  <value>#2017-01-23#</value>
                  <value>#2017-01-24#</value>
                  <value>#2017-01-25#</value>
                  <value>#2017-01-26#</value>
                  <value>#2017-01-27#</value>
                  <value>#2017-01-28#</value>
                  <value>#2017-01-29#</value>
                  <value>#2017-01-30#</value>
                  <value>#2017-01-31#</value>
                  <value>#2017-02-01#</value>
                  <value>#2017-02-02#</value>
                  <value>#2017-02-03#</value>
                  <value>#2017-02-04#</value>
                  <value>#2017-02-05#</value>
                  <value>#2017-02-06#</value>
                  <value>#2017-02-07#</value>
                  <value>#2017-02-08#</value>
                  <value>#2017-02-10#</value>
                  <value>#2017-02-11#</value>
                  <value>#2017-02-12#</value>
                  <value>#2017-02-13#</value>
                  <value>#2017-02-14#</value>
                  <value>#2017-02-15#</value>
                  <value>#2017-02-16#</value>
                  <value>#2017-02-17#</value>
                  <value>#2017-02-19#</value>
                  <value>#2017-02-20#</value>
                  <value>#2017-02-21#</value>
                  <value>#2017-02-22#</value>
                  <value>#2017-02-23#</value>
                  <value>#2017-02-24#</value>
                  <value>#2017-02-25#</value>
                  <value>#2017-02-26#</value>
                  <value>#2017-02-27#</value>
                  <value>#2017-02-28#</value>
                  <value>#2018-01-01#</value>
                  <value>#2018-01-02#</value>
                  <value>#2018-01-03#</value>
                  <value>#2018-01-05#</value>
                  <value>#2018-01-06#</value>
                  <value>#2018-01-07#</value>
                  <value>#2018-01-08#</value>
                  <value>#2018-01-09#</value>
                  <value>#2018-01-10#</value>
                  <value>#2018-01-11#</value>
                  <value>#2018-01-12#</value>
                  <value>#2018-01-14#</value>
                  <value>#2018-01-15#</value>
                  <value>#2018-01-16#</value>
                  <value>#2018-01-17#</value>
                  <value>#2018-01-18#</value>
                  <value>#2018-01-19#</value>
                  <value>#2018-01-20#</value>
                  <value>#2018-01-21#</value>
                  <value>#2018-01-22#</value>
                  <value>#2018-01-23#</value>
                  <value>#2018-01-24#</value>
                  <value>#2018-01-25#</value>
                  <value>#2018-01-26#</value>
                  <value>#2018-01-27#</value>
                  <value>#2018-01-28#</value>
                  <value>#2018-01-29#</value>
                  <value>#2018-01-30#</value>
                  <value>#2018-01-31#</value>
                  <value>#2018-02-01#</value>
                  <value>#2018-02-02#</value>
                  <value>#2018-02-03#</value>
                  <value>#2018-02-04#</value>
                  <value>#2018-02-05#</value>
                  <value>#2018-02-06#</value>
                  <value>#2018-02-07#</value>
                  <value>#2018-02-08#</value>
                  <value>#2018-02-09#</value>
                  <value>#2018-02-10#</value>
                  <value>#2018-02-12#</value>
                  <value>#2018-02-13#</value>
                  <value>#2018-02-14#</value>
                  <value>#2018-02-15#</value>
                  <value>#2018-02-16#</value>
                  <value>#2018-02-17#</value>
                  <value>#2018-02-18#</value>
                  <value>#2018-02-20#</value>
                  <value>#2018-02-21#</value>
                  <value>#2018-02-22#</value>
                  <value>#2018-02-23#</value>
                  <value>#2018-02-24#</value>
                  <value>#2018-02-25#</value>
                  <value>#2018-02-26#</value>
                  <value>#2018-02-28#</value>
                  <value>#2019-01-01#</value>
                  <value>#2019-01-02#</value>
                  <value>#2019-01-03#</value>
                  <value>#2019-01-04#</value>
                  <value>#2019-01-05#</value>
                  <value>#2019-01-06#</value>
                  <value>#2019-01-07#</value>
                  <value>#2019-01-08#</value>
                  <value>#2019-01-09#</value>
                  <value>#2019-01-10#</value>
                  <value>#2019-01-11#</value>
                  <value>#2019-01-12#</value>
                  <value>#2019-01-13#</value>
                  <value>#2019-01-14#</value>
                  <value>#2019-01-15#</value>
                  <value>#2019-01-16#</value>
                  <value>#2019-01-17#</value>
                  <value>#2019-01-18#</value>
                  <value>#2019-01-19#</value>
                  <value>#2019-01-20#</value>
                  <value>#2019-01-21#</value>
                  <value>#2019-01-22#</value>
                  <value>#2019-01-23#</value>
                  <value>#2019-01-24#</value>
                  <value>#2019-01-25#</value>
                  <value>#2019-01-26#</value>
                  <value>#2019-01-27#</value>
                  <value>#2019-01-28#</value>
                  <value>#2019-01-29#</value>
                  <value>#2019-01-30#</value>
                  <value>#2019-01-31#</value>
                  <value>#2019-02-01#</value>
                  <value>#2019-02-02#</value>
                  <value>#2019-02-03#</value>
                  <value>#2019-02-04#</value>
                  <value>#2019-02-05#</value>
                  <value>#2019-02-06#</value>
                  <value>#2019-02-07#</value>
                  <value>#2019-02-08#</value>
                  <value>#2019-02-09#</value>
                  <value>#2019-02-10#</value>
                  <value>#2019-02-11#</value>
                  <value>#2019-02-12#</value>
                  <value>#2019-02-13#</value>
                  <value>#2019-02-14#</value>
                  <value>#2019-02-15#</value>
                  <value>#2019-02-16#</value>
                  <value>#2019-02-17#</value>
                  <value>#2019-02-18#</value>
                  <value>#2019-02-19#</value>
                  <value>#2019-02-20#</value>
                  <value>#2019-02-21#</value>
                  <value>#2019-02-22#</value>
                  <value>#2019-02-23#</value>
                  <value>#2019-02-24#</value>
                  <value>#2019-02-25#</value>
                  <value>#2019-02-26#</value>
                  <value>#2019-02-27#</value>
                  <value>#2019-02-28#</value>
                  <value>#2019-03-01#</value>
                  <value>#2019-03-02#</value>
                  <value>#2019-03-03#</value>
                  <value>#2019-03-04#</value>
                  <value>#2019-03-05#</value>
                  <value>#2019-03-06#</value>
                  <value>#2019-03-07#</value>
                  <value>#2019-03-08#</value>
                  <value>#2019-03-09#</value>
                  <value>#2019-03-10#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Student Stage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Student Type]' role='dimension' type='nominal' />
            <column caption='Target 2019' datatype='string' name='[Target]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Targeted&quot;'>
                  <value>&quot;Barnstable, MA&quot;</value>
                  <value>&quot;Berkshire, MA&quot;</value>
                  <value>&quot;Bristol, MA&quot;</value>
                  <value>&quot;Caledonia, VT&quot;</value>
                  <value>&quot;Carroll, NH&quot;</value>
                  <value>&quot;Cheshire, NH&quot;</value>
                  <value>&quot;Chittenden, VT&quot;</value>
                  <value>&quot;Essex, MA&quot;</value>
                  <value>&quot;Fairfield, CT&quot;</value>
                  <value>&quot;Grafton, NH&quot;</value>
                  <value>&quot;Hampden, MA&quot;</value>
                  <value>&quot;Hartford, CT&quot;</value>
                  <value>&quot;Hillsborough, NH&quot;</value>
                  <value>&quot;Litchfield, CT&quot;</value>
                  <value>&quot;Merrimack, NH&quot;</value>
                  <value>&quot;Middlesex, CT&quot;</value>
                  <value>&quot;Middlesex, MA&quot;</value>
                  <value>&quot;New Haven, CT&quot;</value>
                  <value>&quot;New London, CT&quot;</value>
                  <value>&quot;Norfold, MA&quot;</value>
                  <value>&quot;Norfolk, MA&quot;</value>
                  <value>&quot;Orange, VT&quot;</value>
                  <value>&quot;Plymouth, MA&quot;</value>
                  <value>&quot;Providence, RI&quot;</value>
                  <value>&quot;Rockingham, NH&quot;</value>
                  <value>&quot;Rutland, VT&quot;</value>
                  <value>&quot;Strafford, NH&quot;</value>
                  <value>&quot;Suffolk, MA&quot;</value>
                  <value>&quot;Washington, RI&quot;</value>
                  <value>&quot;Washington, VT&quot;</value>
                  <value>&quot;Windham, CT&quot;</value>
                  <value>&quot;Worcester, MA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Stage]' derivation='None' name='[none:Student Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Type]' derivation='None' name='[none:Student Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Initial Source Date]' derivation='Year' name='[yr:Initial Source Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]'>
            <groupfilter function='level-members' level='[Primary City &amp; Primary State/Province (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]'>
            <groupfilter function='member' level='[Run Time]' member='&quot;In Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Target]' member='&quot;Berkshire, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Bristol, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Carroll, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Cheshire, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Essex, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Fairfield, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Grafton, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Hampden, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Hillsborough, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Litchfield, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Merrimack, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Middlesex, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Middlesex, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;New Haven, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Norfold, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Norfolk, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Plymouth, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Providence, RI&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Rockingham, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Rutland, VT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Suffolk, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Sullivan, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Targeted&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Washington, RI&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Windham, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Worcester, MA&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Vermont&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Inquiry&quot;</bucket>
              <bucket>&quot;Applicant&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]'>
            <groupfilter function='member' level='[none:Student Type:nk]' member='&quot;First-Year Student&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols total='true'>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok])</cols>
      </table>
      <simple-id uuid='{277D6E04-1833-4F47-A6B0-01F7307AFBEA}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2019 Targeted Areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
                <bin default-name='false' value='&quot;In Market&quot;'>
                  <value>#2017-03-01#</value>
                  <value>#2017-03-02#</value>
                  <value>#2017-03-03#</value>
                  <value>#2017-03-04#</value>
                  <value>#2017-03-05#</value>
                  <value>#2017-03-06#</value>
                  <value>#2017-03-07#</value>
                  <value>#2017-03-08#</value>
                  <value>#2017-03-09#</value>
                  <value>#2017-03-10#</value>
                  <value>#2017-03-11#</value>
                  <value>#2017-03-12#</value>
                  <value>#2017-03-13#</value>
                  <value>#2017-03-14#</value>
                  <value>#2017-03-15#</value>
                  <value>#2017-03-16#</value>
                  <value>#2017-03-17#</value>
                  <value>#2017-03-18#</value>
                  <value>#2017-03-19#</value>
                  <value>#2017-03-20#</value>
                  <value>#2017-03-21#</value>
                  <value>#2017-03-22#</value>
                  <value>#2017-03-23#</value>
                  <value>#2017-03-24#</value>
                  <value>#2017-03-25#</value>
                  <value>#2017-03-27#</value>
                  <value>#2017-03-28#</value>
                  <value>#2017-03-29#</value>
                  <value>#2017-03-30#</value>
                  <value>#2017-03-31#</value>
                  <value>#2017-04-01#</value>
                  <value>#2017-04-02#</value>
                  <value>#2017-04-03#</value>
                  <value>#2017-04-04#</value>
                  <value>#2017-04-05#</value>
                  <value>#2017-04-06#</value>
                  <value>#2017-04-07#</value>
                  <value>#2017-04-09#</value>
                  <value>#2017-04-10#</value>
                  <value>#2017-04-11#</value>
                  <value>#2017-04-12#</value>
                  <value>#2017-04-13#</value>
                  <value>#2017-04-14#</value>
                  <value>#2017-04-15#</value>
                  <value>#2017-04-16#</value>
                  <value>#2017-04-17#</value>
                  <value>#2017-04-18#</value>
                  <value>#2017-04-19#</value>
                  <value>#2017-04-20#</value>
                  <value>#2017-04-21#</value>
                  <value>#2017-04-22#</value>
                  <value>#2017-04-24#</value>
                  <value>#2017-04-25#</value>
                  <value>#2017-04-26#</value>
                  <value>#2017-04-27#</value>
                  <value>#2017-04-28#</value>
                  <value>#2017-04-30#</value>
                  <value>#2017-05-01#</value>
                  <value>#2017-05-02#</value>
                  <value>#2017-05-03#</value>
                  <value>#2017-05-04#</value>
                  <value>#2017-05-05#</value>
                  <value>#2017-05-06#</value>
                  <value>#2017-05-07#</value>
                  <value>#2017-05-08#</value>
                  <value>#2017-05-09#</value>
                  <value>#2017-05-10#</value>
                  <value>#2017-05-11#</value>
                  <value>#2017-05-15#</value>
                  <value>#2017-05-16#</value>
                  <value>#2017-05-17#</value>
                  <value>#2017-05-18#</value>
                  <value>#2017-05-19#</value>
                  <value>#2017-05-21#</value>
                  <value>#2017-05-22#</value>
                  <value>#2017-05-23#</value>
                  <value>#2017-05-24#</value>
                  <value>#2017-05-26#</value>
                  <value>#2017-05-27#</value>
                  <value>#2017-05-28#</value>
                  <value>#2017-05-30#</value>
                  <value>#2017-05-31#</value>
                  <value>#2017-06-02#</value>
                  <value>#2017-06-05#</value>
                  <value>#2017-06-06#</value>
                  <value>#2017-06-07#</value>
                  <value>#2017-06-08#</value>
                  <value>#2017-06-09#</value>
                  <value>#2017-06-10#</value>
                  <value>#2017-06-12#</value>
                  <value>#2017-06-13#</value>
                  <value>#2017-06-14#</value>
                  <value>#2017-06-15#</value>
                  <value>#2018-03-01#</value>
                  <value>#2018-03-02#</value>
                  <value>#2018-03-03#</value>
                  <value>#2018-03-04#</value>
                  <value>#2018-03-05#</value>
                  <value>#2018-03-06#</value>
                  <value>#2018-03-07#</value>
                  <value>#2018-03-08#</value>
                  <value>#2018-03-10#</value>
                  <value>#2018-03-11#</value>
                  <value>#2018-03-12#</value>
                  <value>#2018-03-13#</value>
                  <value>#2018-03-14#</value>
                  <value>#2018-03-15#</value>
                  <value>#2018-03-16#</value>
                  <value>#2018-03-17#</value>
                  <value>#2018-03-18#</value>
                  <value>#2018-03-19#</value>
                  <value>#2018-03-20#</value>
                  <value>#2018-03-21#</value>
                  <value>#2018-03-22#</value>
                  <value>#2018-03-23#</value>
                  <value>#2018-03-24#</value>
                  <value>#2018-03-25#</value>
                  <value>#2018-03-26#</value>
                  <value>#2018-03-27#</value>
                  <value>#2018-03-28#</value>
                  <value>#2018-03-29#</value>
                  <value>#2018-03-30#</value>
                  <value>#2018-03-31#</value>
                  <value>#2018-04-01#</value>
                  <value>#2018-04-02#</value>
                  <value>#2018-04-03#</value>
                  <value>#2018-04-04#</value>
                  <value>#2018-04-05#</value>
                  <value>#2018-04-06#</value>
                  <value>#2018-04-07#</value>
                  <value>#2018-04-08#</value>
                  <value>#2018-04-09#</value>
                  <value>#2018-04-10#</value>
                  <value>#2018-04-11#</value>
                  <value>#2018-04-12#</value>
                  <value>#2018-04-13#</value>
                  <value>#2018-04-14#</value>
                  <value>#2018-04-15#</value>
                  <value>#2018-04-16#</value>
                  <value>#2018-04-17#</value>
                  <value>#2018-04-18#</value>
                  <value>#2018-04-19#</value>
                  <value>#2018-04-20#</value>
                  <value>#2018-04-21#</value>
                  <value>#2018-04-22#</value>
                  <value>#2018-04-23#</value>
                  <value>#2018-04-24#</value>
                  <value>#2018-04-25#</value>
                  <value>#2018-04-26#</value>
                  <value>#2018-04-27#</value>
                  <value>#2018-04-28#</value>
                  <value>#2018-04-29#</value>
                  <value>#2018-04-30#</value>
                  <value>#2018-05-01#</value>
                  <value>#2018-05-02#</value>
                  <value>#2018-05-03#</value>
                  <value>#2018-05-04#</value>
                  <value>#2018-05-05#</value>
                  <value>#2018-05-07#</value>
                  <value>#2018-05-08#</value>
                  <value>#2018-05-09#</value>
                  <value>#2018-05-10#</value>
                  <value>#2018-05-11#</value>
                  <value>#2018-05-12#</value>
                  <value>#2018-05-14#</value>
                  <value>#2018-05-15#</value>
                  <value>#2018-05-16#</value>
                  <value>#2018-05-17#</value>
                  <value>#2018-05-18#</value>
                  <value>#2018-05-19#</value>
                  <value>#2018-05-20#</value>
                  <value>#2018-05-21#</value>
                  <value>#2018-05-22#</value>
                  <value>#2018-05-23#</value>
                  <value>#2018-05-24#</value>
                  <value>#2018-05-25#</value>
                  <value>#2018-05-27#</value>
                  <value>#2018-05-29#</value>
                  <value>#2018-05-30#</value>
                  <value>#2018-05-31#</value>
                  <value>#2018-06-01#</value>
                  <value>#2018-06-04#</value>
                  <value>#2018-06-05#</value>
                  <value>#2018-06-06#</value>
                  <value>#2018-06-07#</value>
                  <value>#2018-06-08#</value>
                  <value>#2018-06-10#</value>
                  <value>#2018-06-11#</value>
                  <value>#2018-06-12#</value>
                  <value>#2018-06-13#</value>
                  <value>#2018-06-14#</value>
                  <value>#2018-06-15#</value>
                  <value>#2019-03-11#</value>
                  <value>#2019-03-12#</value>
                  <value>#2019-03-13#</value>
                  <value>#2019-03-14#</value>
                  <value>#2019-03-15#</value>
                  <value>#2019-03-16#</value>
                  <value>#2019-03-17#</value>
                  <value>#2019-03-18#</value>
                  <value>#2019-03-19#</value>
                  <value>#2019-03-20#</value>
                  <value>#2019-03-21#</value>
                  <value>#2019-03-22#</value>
                  <value>#2019-03-23#</value>
                  <value>#2019-03-24#</value>
                  <value>#2019-03-25#</value>
                  <value>#2019-03-26#</value>
                  <value>#2019-03-27#</value>
                  <value>#2019-03-28#</value>
                  <value>#2019-03-29#</value>
                  <value>#2019-03-30#</value>
                  <value>#2019-03-31#</value>
                  <value>#2019-04-01#</value>
                  <value>#2019-04-02#</value>
                  <value>#2019-04-03#</value>
                  <value>#2019-04-04#</value>
                  <value>#2019-04-05#</value>
                  <value>#2019-04-06#</value>
                  <value>#2019-04-07#</value>
                  <value>#2019-04-08#</value>
                  <value>#2019-04-09#</value>
                  <value>#2019-04-10#</value>
                  <value>#2019-04-11#</value>
                  <value>#2019-04-12#</value>
                  <value>#2019-04-13#</value>
                  <value>#2019-04-14#</value>
                  <value>#2019-04-15#</value>
                  <value>#2019-04-16#</value>
                  <value>#2019-04-17#</value>
                  <value>#2019-04-18#</value>
                  <value>#2019-04-19#</value>
                  <value>#2019-04-20#</value>
                  <value>#2019-04-21#</value>
                  <value>#2019-04-22#</value>
                  <value>#2019-04-23#</value>
                  <value>#2019-04-24#</value>
                  <value>#2019-04-25#</value>
                  <value>#2019-04-26#</value>
                  <value>#2019-04-27#</value>
                  <value>#2019-04-28#</value>
                  <value>#2019-04-29#</value>
                  <value>#2019-04-30#</value>
                  <value>#2019-05-01#</value>
                  <value>#2019-05-02#</value>
                  <value>#2019-05-03#</value>
                  <value>#2019-05-04#</value>
                  <value>#2019-05-05#</value>
                  <value>#2019-05-06#</value>
                  <value>#2019-05-07#</value>
                  <value>#2019-05-08#</value>
                  <value>#2019-05-09#</value>
                  <value>#2019-05-10#</value>
                  <value>#2019-05-11#</value>
                  <value>#2019-05-12#</value>
                  <value>#2019-05-13#</value>
                  <value>#2019-05-14#</value>
                  <value>#2019-05-15#</value>
                  <value>#2019-05-16#</value>
                  <value>#2019-05-17#</value>
                  <value>#2019-05-18#</value>
                  <value>#2019-05-19#</value>
                  <value>#2019-05-20#</value>
                  <value>#2019-05-21#</value>
                  <value>#2019-05-22#</value>
                  <value>#2019-05-23#</value>
                  <value>#2019-05-24#</value>
                  <value>#2019-05-25#</value>
                  <value>#2019-05-26#</value>
                  <value>#2019-05-27#</value>
                  <value>#2019-05-28#</value>
                  <value>#2019-05-29#</value>
                  <value>#2019-05-30#</value>
                  <value>#2019-05-31#</value>
                  <value>#2019-06-01#</value>
                  <value>#2019-06-02#</value>
                  <value>#2019-06-03#</value>
                  <value>#2019-06-04#</value>
                  <value>#2019-06-05#</value>
                  <value>#2019-06-06#</value>
                  <value>#2019-06-07#</value>
                  <value>#2019-06-08#</value>
                  <value>#2019-06-09#</value>
                  <value>#2019-06-10#</value>
                  <value>#2019-06-11#</value>
                  <value>#2019-06-12#</value>
                  <value>#2019-06-13#</value>
                  <value>#2019-06-14#</value>
                  <value>#2019-06-15#</value>
                </bin>
                <bin default-name='false' value='&quot;Out of Market&quot;'>
                  <value>%null%</value>
                  <value>#2017-01-01#</value>
                  <value>#2017-01-02#</value>
                  <value>#2017-01-03#</value>
                  <value>#2017-01-04#</value>
                  <value>#2017-01-05#</value>
                  <value>#2017-01-06#</value>
                  <value>#2017-01-07#</value>
                  <value>#2017-01-08#</value>
                  <value>#2017-01-09#</value>
                  <value>#2017-01-10#</value>
                  <value>#2017-01-11#</value>
                  <value>#2017-01-12#</value>
                  <value>#2017-01-13#</value>
                  <value>#2017-01-14#</value>
                  <value>#2017-01-15#</value>
                  <value>#2017-01-16#</value>
                  <value>#2017-01-17#</value>
                  <value>#2017-01-18#</value>
                  <value>#2017-01-19#</value>
                  <value>#2017-01-20#</value>
                  <value>#2017-01-21#</value>
                  <value>#2017-01-22#</value>
                  <value>#2017-01-23#</value>
                  <value>#2017-01-24#</value>
                  <value>#2017-01-25#</value>
                  <value>#2017-01-26#</value>
                  <value>#2017-01-27#</value>
                  <value>#2017-01-28#</value>
                  <value>#2017-01-29#</value>
                  <value>#2017-01-30#</value>
                  <value>#2017-01-31#</value>
                  <value>#2017-02-01#</value>
                  <value>#2017-02-02#</value>
                  <value>#2017-02-03#</value>
                  <value>#2017-02-04#</value>
                  <value>#2017-02-05#</value>
                  <value>#2017-02-06#</value>
                  <value>#2017-02-07#</value>
                  <value>#2017-02-08#</value>
                  <value>#2017-02-10#</value>
                  <value>#2017-02-11#</value>
                  <value>#2017-02-12#</value>
                  <value>#2017-02-13#</value>
                  <value>#2017-02-14#</value>
                  <value>#2017-02-15#</value>
                  <value>#2017-02-16#</value>
                  <value>#2017-02-17#</value>
                  <value>#2017-02-19#</value>
                  <value>#2017-02-20#</value>
                  <value>#2017-02-21#</value>
                  <value>#2017-02-22#</value>
                  <value>#2017-02-23#</value>
                  <value>#2017-02-24#</value>
                  <value>#2017-02-25#</value>
                  <value>#2017-02-26#</value>
                  <value>#2017-02-27#</value>
                  <value>#2017-02-28#</value>
                  <value>#2018-01-01#</value>
                  <value>#2018-01-02#</value>
                  <value>#2018-01-03#</value>
                  <value>#2018-01-05#</value>
                  <value>#2018-01-06#</value>
                  <value>#2018-01-07#</value>
                  <value>#2018-01-08#</value>
                  <value>#2018-01-09#</value>
                  <value>#2018-01-10#</value>
                  <value>#2018-01-11#</value>
                  <value>#2018-01-12#</value>
                  <value>#2018-01-14#</value>
                  <value>#2018-01-15#</value>
                  <value>#2018-01-16#</value>
                  <value>#2018-01-17#</value>
                  <value>#2018-01-18#</value>
                  <value>#2018-01-19#</value>
                  <value>#2018-01-20#</value>
                  <value>#2018-01-21#</value>
                  <value>#2018-01-22#</value>
                  <value>#2018-01-23#</value>
                  <value>#2018-01-24#</value>
                  <value>#2018-01-25#</value>
                  <value>#2018-01-26#</value>
                  <value>#2018-01-27#</value>
                  <value>#2018-01-28#</value>
                  <value>#2018-01-29#</value>
                  <value>#2018-01-30#</value>
                  <value>#2018-01-31#</value>
                  <value>#2018-02-01#</value>
                  <value>#2018-02-02#</value>
                  <value>#2018-02-03#</value>
                  <value>#2018-02-04#</value>
                  <value>#2018-02-05#</value>
                  <value>#2018-02-06#</value>
                  <value>#2018-02-07#</value>
                  <value>#2018-02-08#</value>
                  <value>#2018-02-09#</value>
                  <value>#2018-02-10#</value>
                  <value>#2018-02-12#</value>
                  <value>#2018-02-13#</value>
                  <value>#2018-02-14#</value>
                  <value>#2018-02-15#</value>
                  <value>#2018-02-16#</value>
                  <value>#2018-02-17#</value>
                  <value>#2018-02-18#</value>
                  <value>#2018-02-20#</value>
                  <value>#2018-02-21#</value>
                  <value>#2018-02-22#</value>
                  <value>#2018-02-23#</value>
                  <value>#2018-02-24#</value>
                  <value>#2018-02-25#</value>
                  <value>#2018-02-26#</value>
                  <value>#2018-02-28#</value>
                  <value>#2019-01-01#</value>
                  <value>#2019-01-02#</value>
                  <value>#2019-01-03#</value>
                  <value>#2019-01-04#</value>
                  <value>#2019-01-05#</value>
                  <value>#2019-01-06#</value>
                  <value>#2019-01-07#</value>
                  <value>#2019-01-08#</value>
                  <value>#2019-01-09#</value>
                  <value>#2019-01-10#</value>
                  <value>#2019-01-11#</value>
                  <value>#2019-01-12#</value>
                  <value>#2019-01-13#</value>
                  <value>#2019-01-14#</value>
                  <value>#2019-01-15#</value>
                  <value>#2019-01-16#</value>
                  <value>#2019-01-17#</value>
                  <value>#2019-01-18#</value>
                  <value>#2019-01-19#</value>
                  <value>#2019-01-20#</value>
                  <value>#2019-01-21#</value>
                  <value>#2019-01-22#</value>
                  <value>#2019-01-23#</value>
                  <value>#2019-01-24#</value>
                  <value>#2019-01-25#</value>
                  <value>#2019-01-26#</value>
                  <value>#2019-01-27#</value>
                  <value>#2019-01-28#</value>
                  <value>#2019-01-29#</value>
                  <value>#2019-01-30#</value>
                  <value>#2019-01-31#</value>
                  <value>#2019-02-01#</value>
                  <value>#2019-02-02#</value>
                  <value>#2019-02-03#</value>
                  <value>#2019-02-04#</value>
                  <value>#2019-02-05#</value>
                  <value>#2019-02-06#</value>
                  <value>#2019-02-07#</value>
                  <value>#2019-02-08#</value>
                  <value>#2019-02-09#</value>
                  <value>#2019-02-10#</value>
                  <value>#2019-02-11#</value>
                  <value>#2019-02-12#</value>
                  <value>#2019-02-13#</value>
                  <value>#2019-02-14#</value>
                  <value>#2019-02-15#</value>
                  <value>#2019-02-16#</value>
                  <value>#2019-02-17#</value>
                  <value>#2019-02-18#</value>
                  <value>#2019-02-19#</value>
                  <value>#2019-02-20#</value>
                  <value>#2019-02-21#</value>
                  <value>#2019-02-22#</value>
                  <value>#2019-02-23#</value>
                  <value>#2019-02-24#</value>
                  <value>#2019-02-25#</value>
                  <value>#2019-02-26#</value>
                  <value>#2019-02-27#</value>
                  <value>#2019-02-28#</value>
                  <value>#2019-03-01#</value>
                  <value>#2019-03-02#</value>
                  <value>#2019-03-03#</value>
                  <value>#2019-03-04#</value>
                  <value>#2019-03-05#</value>
                  <value>#2019-03-06#</value>
                  <value>#2019-03-07#</value>
                  <value>#2019-03-08#</value>
                  <value>#2019-03-09#</value>
                  <value>#2019-03-10#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Student Stage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Student Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Targets 2017 and 2018]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Target 17 18&quot;'>
                  <value>&quot;Belknap, NH&quot;</value>
                  <value>&quot;Caledonia, VT&quot;</value>
                  <value>&quot;Chittenden, VT&quot;</value>
                  <value>&quot;Essex, MA&quot;</value>
                  <value>&quot;Fairfield, CT&quot;</value>
                  <value>&quot;Hartford, CT&quot;</value>
                  <value>&quot;Hillsborough, NH&quot;</value>
                  <value>&quot;Middlesex, MA&quot;</value>
                  <value>&quot;New Haven, CT&quot;</value>
                  <value>&quot;Providence, RI&quot;</value>
                  <value>&quot;Rockingham, NH&quot;</value>
                  <value>&quot;Rutland, VT&quot;</value>
                  <value>&quot;Strafford, NH&quot;</value>
                  <value>&quot;Washington, RI&quot;</value>
                  <value>&quot;Windham, VT&quot;</value>
                  <value>&quot;Windsor, VT&quot;</value>
                  <value>&quot;Worcester, MA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Stage]' derivation='None' name='[none:Student Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Type]' derivation='None' name='[none:Student Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Initial Source Date]' derivation='Year' name='[yr:Initial Source Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]'>
            <groupfilter function='member' level='[Run Time]' member='&quot;In Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Targets 2017 and 2018]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[Targets 2017 and 2018]' member='&quot;Target 17 18&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Vermont&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Inquiry&quot;</bucket>
              <bucket>&quot;Applicant&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]'>
            <groupfilter function='member' level='[none:Student Type:nk]' member='&quot;First-Year Student&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok])</cols>
      </table>
      <simple-id uuid='{A220E146-5882-4EB7-B3E4-F7BE2518B795}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Primary City]' derivation='None' name='[none:Primary City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]' field-type='quantitative' max='-7836607.7654421236' min='-8123358.3974150326' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]' field-type='quantitative' max='5601950.8977571242' min='5387513.7181666363' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]</rows>
        <cols>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE77527E-C962-40BF-9A0D-1B3F90BC7F75}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='76125' id='3' name='Sheet 2' w='44900' x='54100' y='4125' />
        <zone h='77500' id='4' name='Sheet 3' w='45200' x='2700' y='3500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='6' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='77500' id='4' is-fixed='true' name='Sheet 3' w='45200' x='2700' y='3500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76125' id='3' is-fixed='true' name='Sheet 2' w='44900' x='54100' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6ABF4024-E1F2-49EB-B1C7-F496CC3D4B9D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='167'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C9100ED-3EF5-4680-8D94-4ADA5F1F0FAF}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</field>
                    <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk]</field>
                    <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk]</field>
                    <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</field>
                    <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[tdy:DATE:ok]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</field>
                  <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</field>
                  <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk]</field>
                  <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[tdy:DATE:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Avon, CT&quot;</value>
                <value>&quot;CT&quot;</value>
                <value>&quot;Avon&quot;</value>
                <value>#2020-04-14 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:LOCATION:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBC1F472-BF09-4989-9ADA-77CE58925DDB}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Calculation_7344245107383533568:nk]</field>
            <field>[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:County:nk]</field>
            <field>[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:State:nk]</field>
            <field>[federated.0ut04ph059wvwb105ih4j1khw9pv].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5359DFE9-659A-406E-830E-0487D82B91AB}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3' />
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{610803FB-43D0-4072-B851-EC8ADFF12F8B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1EE4C55C-E72E-4EF2-A2D3-A38AB41E3D56}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:County_State:nk]</field>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:State:nk]</field>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B72AA71D-161F-4190-A67C-306636F21AED}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[mn:Master_Date:ok]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0339DF17-CA74-4ABB-A827-F7E7AD8915ED}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90A651FD-92A5-453D-89AE-37EE5E632722}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1341B3A9-A877-4043-BB68-42F055D1A00F}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C99DF2BF-4597-4523-9744-96EAC668405E}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BCDFA0E-0E35-4154-ADF3-E21B85B37183}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[my:Master_Date:ok]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Calculation_7344245108126945281:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk]</field>
            <field>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7707FF3-608A-4634-BBF5-7268CF397978}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]' type='filter' />
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]</field>
            <field>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{031A6622-FC1D-43C9-B698-D601029EE91D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      Mm9Eaw8B2c4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5AcV57g98ss76u6qtpboLuBRgNgw9GAJEDPueXO7s7O7exobmRuv0j6
      cHcKhcw3xeiDQt8Ud4pQnBQXmpm92dvVzuxwdyzNECDh0ehGe++7fFWX95VZlakPDYIEQIAG
      jUaDrF8EIlDVme+9zKx/vvf+VlBVVaVOnW8o4uMeQJ06j5O6ANT5RlMXgDrfaOoCUOcbTV0A
      6jxSQiuzhNLle76fu3mT4qc+16QSM1OzVO86rpQIsBxIAqCqKpsLY7z//jnWwil2Qn1TF4A6
      j5SJj37NlC+LLFWQpAqlUhlFVYn4fEi1Mj/59/8ny8EEVVkmFAxTUxXKpSLFYomaopJeu8m5
      8U0Air5h/vb8BseGDlFIJwEVqVKmIldRVRVJklABqVJBUWpIchWpvN2fVClTLJW3j7v1f0VV
      0T7Wu1PnG8N//D/+V1zHzrI5NsIr//m/Yml8ks6zx1mcXwD7ed547SVmphY4/eIg7713nXx8
      E8ehN3jG+Ekbos5AMRkiXlA52N9Dyj/F3/36KtWqyD//F9/hb//67/jX/8O/4d/97/8b3/+v
      vs3Pfn4Vi1rllT95mYvnRmlpaueZF/bxzm+uYtOVsR/+Z/UZoM4uobdy4rmzDO1rIJkrAWBu
      aKW3bz+vfustmiwCAFKtRjmXoVarsuIL3NGEsWWIf/Vfvsn62Af8P3/7HjMjVznw0p/zbHuF
      myvpe7qsijb+m//+vyM2eZWnXv8O3/2LPyI+fomNdBlVqycTT9QFoM7jRMSkUciWKii31vOR
      uatUWo7z4vGDaIU7j86GlkgJbl5++TmiPh/NLU0E11ZZDebpaLJCrUoxmyBTqAHg8DRi1Im0
      tbWwsbpJMZXC6G3G5enmz//yX3DmqU40P/rRj360uxdd55uEzmDC29JGU4Od5tZWLGYTbm8z
      jQ0Omts7ONDTwc2rV2joOoTXZePgsVOkFm5Sc/ZwcH87zY1ebC4vTS4LOoOBuZGLTKwk+c53
      /5TuvkHEzBrOwZc53ttCg0FmeiPH0SN9dHV147C7aPa68HT0ocYXGVtNcurFl3FJQa6OztPc
      049Qd4Wo802mvgSq80goFAqUy/eqP/cadS1QnUeCoigIgvD5Bz5m6gJQZ4+jEtuc4/LwLAWp
      xtm3voOtsM67F8fQ2pp561svkfbN8fuLC/zwX/4FmmKS9955n6wkcOSZlzi8r4kHiWF9CVRn
      zyOrRl556884u0/ktxcm+f1v3uX4y39Ce3WND4Zn2YhtMXNzghqwNvx70s4h/uzlIf7w7nnk
      z2m7LgB19jgCrV37qCZW+P8+XOG1k53ECzU8Titd7U0EkhKnnzuFRbf9U+468izhm7/jP739
      Lr1HjqL7nNbrAlBnj6MSmrvEj/9xmL/6N/8j/S02DBqRWk2hXJGxmI13HL108yKtJ97i+3/6
      KvOTY0jKg1uvC0CdvY1a49zv38XqdjF14zLz/gInB9v4/W9/w3tjAU7uc3P5o0tE4xGuXB1B
      52ojvTHJpRvTuL3NaD5nH163A9R5JORyOTQaDWaz+eEaUlVymSSFsgwImGwO7EYNqVQK0WDF
      ZtSSTCapqSBodLgbXBSzKcpVcLpc6LUPfsfXBaDOI2HHBOARU18C1flGUxeAOt9o6gJQ55Ej
      pYNcmVz+0udF/D6Kcu0LHx9cHuXv/+kcsvL5q/qif5zhtUzdElxnN1BRVRU5H2Z4fBNZytM+
      cJJuJ4yNTVCSqzT3ncJU9OHuPkItvkjG1EOlVMCh1FhcXEbKJbF5vFQ0jRxotzA/v8rBgf5P
      3C3UKtG4TF+blVRRpkEscHNqjmKxQvP+w3RZJCZXNikWJfqOnMRza0z1GaDOrqHIRbC0cObM
      EHF/DP/iPM2HnuHs4RaC6TKZZAypBpVckmypRjKZoFZTCG6s4uo6TGdHB7HNBSrpEFnVBJ9y
      cpBLWSpaK4M9DaxuxlHlMqrZy5mzL5BYW6RYLGBp3s/ZZ4+yvrLCx3NEfQaos3sIYLFa0eg0
      aABZUrCZDSiZT5YsqqpSrd0ZGm9paKXNa0dQVdodAqNLUXoPHuHTvnapwCL+UI5iViRZ1nCi
      /SAGgwFRENBoNICAwaBHEEQ0oghsL63qAlDnkSNo9FjNNQSNBrNBC4hYLEbamjq4euEPmMlD
      mxe3u4HRy+fRKEV6vCJYLIiigMVi3n7XCwItHe3MXFuiwX6nBTia1fHtP3kDkwCrE6OkZfAt
      TpDwLdLafwwdCebHruHTGzl47Bk0VT8WQVO3A9R5NHwpO8DWHOeibl493PTAw1RVZmb4GtrW
      AQY6vQ88Vs6EmYlIHDvQBUDGt0RE5+FAS8Mdx90hALlcjmKxSJ06D0ulUkEURXS6z3NHA5Qq
      lZqIQfd5W1KFQq6I0Wr9XBcHValRVUCn1WyfWauiIKLV3NlHfQao80h4UizB990DrM3dJJTc
      Tl/hbO7hcG/bjnVaTEeJFTR0t3lYmrxOLLe96ek48BRdXttnnKEQ3lglVdHQs68Lk06zY2PZ
      pkYilsLh8fA5riM7Qjy0QTiRQ9Sb6d3fg+FTnUr5FAXBgsuiv/1dtVJgbW0DT3sPilzB0+C6
      o71UIoHd7ebju1LMptFanejvupZEeJNIqkxbi4dgKIxyS1/evu8gLssXeFN/Dbnv43Z5W0jN
      32C9qKOx4bN+lF+M3/zNf2AtWbj9ObJ8k5/8+3/L352fAsDd1E5nZzuTH/wKf1b6zDZWJ64T
      KAg4TDoq1buT5311ZqfHyBRvOVlZzIgPmlZrMtdGxnak36n5RRobG/G6XWju6lSjN2K8S8DX
      Fmep6e2Y9DrMpjs3fwALU9N8+s5F1hbJ3hUJklybZMqfo8FholIT8XobiK75sTVupw7ZiyQS
      CX7605/y13/910xMTFAoFPjxj3/MT37yE6LR6I70cd8ZwOVtpbHBiaaxhUaXlZsf/paF0Bar
      MZF//YOn+b9+8i6WapHXf/iXnPvlb2hqsrFZaeT7z7h459oKtWKG5/7o29y4NsxaWc+f/fl/
      RleDnqbeY/zzNwP8v7Pb/bib2zFGF8hY+znZ1fAZI5HwJWTOvrIfURBAlbl+7h2yioje1sqz
      Q25+//YITq8WbcNBBhuLXBoLYdWXaOg/Q5cxydSCj4pc5cTzZwhOXyVWUGlqa2dxfIy1QIJj
      z5wiMLHAsZeGuP7+B0gaC4eOP83K9DBnz77C8LULtDd6mJwYoygpPP/0sXt+pF8OEa1Wi6jV
      IpaTnL82gVyR6Bl6FndxkaDpKTRbE8STBRzNnaxMTqN3pzEbtYSicYa6nVybWEaSZA6deH67
      SbXG7OhVQukKpVye0wN39jjjS/D8iy+jv714tuGw2vA2NWF6iCt5lCwvL3P69GlaWlo4f/48
      iUSCt956C4PBwPXr13nzzTcfOu74C6lBVUDUCCAYia1NU+AUJUngX/9P/zO+S39H8zPf5nu9
      Of6Xt9e4dv4cZeN+bHqVeNHIwKF+Tvzpd+lq2J7SBeGut42qcPPSBQaffxXj3ZmQAFAQhE8N
      Mxeg5BrkjeOdjAxfoSS56Bk4zrFjXkaGl1A1Bg6feI7e9go3htOs52cp1qzokAhvrpM3tfP6
      6X4EoFaI0z1wigargl9VkWJL6Hqe52z/9hJj+db2SFVVXK376TuY4dXnT37Ze3wv1RI+nw+d
      yYahvQGjTkO1WMAXTuC2q6hArVJh/7EXaHcZEUpxWvtOYCdLMKKyOr9IuQY6VSKSyGy3WUmT
      1Tbx2uv9rE8M39OlCjwBMep30N/fz9tvv41Go2FoaIhIJILT6UQURRTlcyJdviBfTACqMuev
      TfEv/9v/mtW5FQAc3mZsRi1mm4VUKE6+RUZRwOlyYup7jn821ESmJHBBI1Aoy6iq+pnSWi2n
      uL6Y4q/e6rlP7wZc+iKr0Szddi2yaEJO+5BlL4WijEYjAPfbxwuYLDYOdJ+iwwGVcoWb08tU
      5Co1WUaj1KhUa3x8L7XWBgorAardZmRVg1JTkCt5EqnCttFRkpBqCjpReLg3j8HO0NAQgiAQ
      mryOa+AkvZlFptKfPFSNyYbD9NnrcrvZQEvHIEea9ORlLfPhZRB1lHNJJLlKKpPFftc53S4D
      EysRjvc4KUoabJa9uez5NBMTE7zxxht4vV7eeecdLBYLuVwOvV6/YxknHpgZThAE7I3NuG0m
      XIYq44tbHDi4j56uTowGKx2tjdg97eT8U2wGI4QlJ//FX75FYOY6U6tRuvf3cqC3g5tXLmFr
      68dh1LA8cYnLs1HMao5kSUeztYq26RAHOzz3id4XaGzrILI0wVIgSVP7PppMFUYmF+k7cpwG
      qxFRY8BqNSAIIja7FZ3BjMmgBUFP1/52fAsTbMbytHX10GoXGR2bxOBsoqvZxdzEBDpXM3aT
      AUdTG3YlydjsOu7mFhyaCpNLIZrb22jyerFrJcYW/LQ2N92jTvuyOJ1OBEHA0mBnbWKMstZO
      a0sTTpsZvcmO1aDBbLWiFQUEAaw2OzqtiEarp31fL4nVKRb9CZpaWjDptdjdjbj0MmPjc7ha
      OmiwwuUbc/R0tgLgaGyjHFliasmPq7EZi1G3fb9cDnZapQAgSdIXV4PeB1EUOX/+PAsLC7S0
      tHDy5El++ctfMj8/z/PPP4/NZntoQXhoNWgptsavPxyhmMtx/I0/56nOz1rH19ltKoUcVa0R
      i+HxaHeeFDVo3Q6wS1R3UHv1JJDP59FoNJhMe3WLvU3dF2iXkOXtfdA3BVmWURTlliPa3uWB
      AlCtFEkXqrgb7Kg1mWgoRFVjpq3F+2CdeZ0HUigWMZtMCIJKsVDGZDZ/IQ1NrVohmchgc7sx
      ah/8w6pUymh1hrvsDCqVYp50rojF7qCcTVO9JZMWuwub2fDVL+oJ5b47uWLCx8/+w7/l3/3H
      d6ihMvbBP3BudIHxc7/gvfHA/U6r8wW4OfaxQU1mYmyaByn0YpvzRLMyoBJcnGAjlqVa+3wV
      oG9jhVzxTmtYJbvF9ZFJkqkksXiKfC7DzdFhIlspyl8i8mq3yGaz/OpXv+IXv/gF0WiURCLB
      L3/5S/7hH/6BdPreghhfhfvOAHqrl9deO8vfvO8DVHKZNG2HXqIzEedyqu4wt5PU5AJjN0Yo
      VKq0DpzCVQuzGkijdzjZmhmhZAtzbLCXG2NzWNoO0tlkYHhyEUHU0D90Cn1yjfWchMHShFdM
      shBMkc2XeKmt/45+wmuLdB19lm7XxxvjFlLpFPt7e7HdR+X6OBkfH+fZZ59Fo9Fw/fp1RFHk
      zTffJJVKMTo6yquvvvroDGFagwmT/tafVYGmtg7+cOE3zFaynPq2636n1fkilJJcvHgRqJHI
      iQiCBovVTKmWZGMliLUxj7G5j6e6G/CTQWkaosutp9S/H/fQc8QnrjF09mUalDRXp/10GXOY
      Gg9zpM3MyI0tXjl7lpWl2XvUyqUSeCxPzrbPZDLh8/lwu91ks1mamprY2NhAr9eTTCZ3pI8v
      qMxWmBwb56U/+yE/fGOQ89fndqTzbyymBs6cOcPZs8/T7DBR3FqnaOri5LFDaJUaot6Ex7mt
      4xaAaq12R0lQk0FDJleiXCwg6LRoNAa8bgeCADWpTFVRKBVL93Tb2OpkbclPTalRLO393P0n
      T57EYDAQCoWwWCycOXOGSqVCJBLBZvvq/mmf5r4CEFm6yTuXZrCIaX730U3e+PO/ZPXKr3ln
      TuKv/vTZHen8m0pz08eBHxoam72YXK0oiSUWNlM0Nbsw2VxYDNuPxtPWQ2xxlECigNPbjFGE
      zsHDZFYmGVvaYrC/C7PTg0kDoKN/XyPXrl6nLJjQawXGh69TvrVlaOgYwCsmuHLlKtH0toC4
      PY3oHtKo96hIJBJsbm4SDAZ56qmniEajBAIBQqEQx48f3xFrcN0OsEuUSqVdV4OqtQJbKZVG
      j3VX+4XtCjEajQaj8V7v1S+Kqqp3BNZ8/Fmj0aDT6eoC8CTxJJQL2kl2QgB2gydnR/SEs9d/
      CDuNLMt1Aajz2dSqMohaNKJArVZDFMUvPJ0rSg0EEVEQUGo1BFGzY27OqqpSlSVURDSiQLX2
      sW1AQKfXbcdjfM3Ym7ufrznXP/oVw1ObAFy9epHql3Bt35gdxxffjrCbHf2IxL3Knq+GqrA+
      M8KFK9cZuXmTYMDHyMgV/uZnf8/Y9Bxl+dGvlFVVxe/3884779z+vLKywocffnj7mEqlwi9/
      +UtSqdSO9FmfAR4DWkcn5oqfRKkDAFWpsjAzRjCRo6PvGLpsgIa+o/jH3sfYcxZ7OYjqaqXJ
      /tmOZYsTVwkking6BvAqW2i6nsJdi7IQhUZthrm1IHpnK6cOtjMycg25JmBu7OXUYPftNpRK
      hs2MwMsvnUFz603f2d1MVZ7iuZNDj/yeABSLRYLBIJFIBNi2BEcikdvhj6qqMjY2RjqdplQq
      4XI9vD2qPgM8Jvb372N1aR2Aci7E5IwPtVbjxuhNdHqFeDxOUbWQCqyzlYxj1N8Kkq+VuHn1
      IufOnWN+IwaoWKxWBLXK0uw89iYn60s+/BtBbA4rN0eGkWsKy6M3SUgyWquHF86+Qi0fuWM8
      crmM3mx5rMsci8XCs88+e3vf4HA4ePrpp2/HFCSTSXK5HPv379+xPuszwGPC5GzBsjpMIC+D
      otLWd5TTp/qQpSpqYYuRiXHc/aco+afI6txYjbec3zQmTpw+RrfXyvTwOZC3WAiovHT2Ra5c
      GEFra0fNXiKitXBswMKaq4XnX3oFXpRRqxUiBgMaUUS8y5tRb7EhpZcpVKqYNAqIevaaeeCd
      d95BVVU2NjYIBoP84Ac/2J2Y4Do7i8NuBwR6+3pYjs9jcrRi5zofng/S2HWAI/saqFa1tHms
      ZFMmEjbv7agtk9WOeCsg3+poQKe3Y2WaqzfyYLQgihq63GZ8YitGEQ50N3Ph/IeY7F5OHN2P
      zWIBwG63U0iE2MioDO5rQ9BZGRpo58blC2iNVo6fegarXsTlcuzafcnlciwsLLC5ucnk5CSt
      ra0sLy+zvr7O7OwsP/jBDxBFkQsXLtDX11e3A9R5GFSSkQAaZwsO486/B79KRFi5XCYcDqMo
      CjqdDpfLxdbWFqqqYjQaaWlpQRRFCoUCer3+ocItP2bPCoAsf16J4zp7mXpE2ENSKBR2LPXF
      XkCSpG9URNjHLgyFQuHzD36M7NkZ4OvG4/AFepw8Ka4Qe2yf/9mMXPwnroxvG46UYoif/t8/
      JbJDrjVj4ze/0nmKVMQXigEgl3MEI4kvfO7o5T9w4cIFLly4RqJQ+Ur930Gtwru/+SXrkQyg
      kgjO8vf/8B6lGtRKGX79j28TSe+UxezRoaoquVyO4eHtxF6yLPPrX/+aX/ziF0xPTyPLMh98
      8AHvvPMOhUJhR14oD8wLtFcIxXMoxSQtHZ0EFhZQdVrcnftIr09zc2KWgmqgwaxw49p11kMJ
      vE2NbMyMMjG/isHuRs2FuT4yRiRdorHRQzywyMjNaRSDk3RkhWggyGYsR3Ozl+XFeTweL8tL
      C9isZiaGr7C4GcXT3EwmtMLo2BQlwUQxOMt7l29SqGoohWa5ODxDVWPCVEtydWSCvKzF2+C4
      7abw6awQ4XiGZ599lu7uDsx6kaXJEeZWfBgdHiqJTUYnZigqetw2PXOTYyxthLG7PYQ2VjA7
      HPg2/Nidjk909kqNRCZFWRJpaXSxsbyGoNPT3tlBPraOaHSSLkOLx36f3Es7jyzLiOJ2Csgv
      SrFYZHh4mNXVVYaGhojH40iSxJtvvklTUxNXrlyhvb2dtrY2RkdH6e3tfWhN0BMxAwB0NBgI
      pIrESipNtzIZ640WXC47y5PTpBNhcoKVgYO96IQSG4E0Bw4dwmXRo9EZcLlcJANLxFJJ5lYy
      vHD2DG1uC6oqcujkczi1BXKlGpFIGIBoNEK5lCSe0zB4qA+tUuHm+DQWu5Wx6zdo2neAg4ef
      4szJQXoOHGbw6HFOHekltL6Jp7OPrpaG+/7Y5GyUixcvcuHyDTKlAoFwmt7+fuxGHb5NP81d
      vbR7naQ2Z/BlwaikGJv347HrGb56A8HsvMdgpTG5MFQzFMolioIRqxZQVYLBNN2HDiKlwih7
      fAlmsVh49dVXsdxS1UqSxMrKCj//+c9ZWVmhs7OTubk5JicnaW9v35E+9+wm+G7cbZ1MTY+i
      93SjTa2ClGXRn2TgQBfZSAZDSy8n9XFW5ifw7DvO6RefJuRfZTLqQF8I0rxvEKWSQZaLaA1W
      tKKIVi+iN9uwGHTo9LrbCRZVVUVFxWhp5pmTOnxLE8RaBtCYnPR076NnXz9aJD6ufogAqrp9
      3oGTzxGLhBkdm+TF559D/xn5TnX2Jp45duzW20vlmdMnCfvXCSWbOHr8GbZiYSangrSbyzR1
      HqTHqUFntKCV05Ry2e23qgp3SphAi8PI6tIs1paD5NdmUCmzuekjWZZIRuPEh47TZNrbaUo+
      TXt7Oz/84Q8pFou8//77NDc309PTg16vf/TZofcSRoMBg9WFXCrS1eShXAqh1erRSGlmZgoU
      ZJVSKsr8zAKyoqFTX2VueppMSaK5pxVNVWRhZppypYC310OjxccH587T0Xf09iZNpzegEQTM
      VDj/4UckCxLVUpLJyRmkWo1DBx0ITi2jY+MYHc2cOb4fMRPi0k0tp490UNwaZ3RWi0fMsB5O
      obV6EO8zv4pS+lZMsJ7DJwdYn5ylUKvSvL+bwPoC/lgOvb2R1v79rF4eJW800d47SCkW4Mzr
      LzMzOU+DoY1oSmBfpxcEAaNBj6ermeu/H+GNp8wshU1IsXW6Tr/FkXYrtewmU/4kTf0PLi30
      OKlUKsTjcTKZDJFIhGKxSD6fR1EUTCYTpVJpu/DdDmqX6lqgXWKntUAx3xo6bycu0958h30V
      LVAul2N+fp5arYbJZGJgYICVlRVkWWZgYACtVsvc3By1Wo2BgQEMhofPY1QXgF2irgbdm+zN
      18fXkL3+Q9hpqtUqWq22bgmus81O5bN/Uvj4evf6dT8xatCvE+PXfs/4wq0gj8oWP//ZL4hX
      wLe5TrX2yTJpZm72k5NUdftzIcaNed/ODKSU4u1/+h3p0rbfVWD5Jr/+wy0jVDbEz//xPcrK
      7i3bVFVlaWmJd99997YT3PT0NO+//z6ZTAZFUbh27RoXL16kUtkBAyJ1AXgsSFo3pcQqigqh
      pXUcXjuyckurKUAytMZHH37I/HoEVVWIbi7w4UcfsRZKgSKTK5ZRqhLz49e5PDJNpaqw5Vvk
      ww8/YjOWoVopMD58meGpZapSiQ1/EEWR2fQF7xyIUsXt1LHqT6GqMrFkEb2wbbALBqIMtJlY
      Cu9eGsxUKkU6neb48eOcO3eOUChEtVplcHCQc+fOcfnyZfR6PR6Ph48++mhH9lR1AXgsCLTZ
      NYTzEsGCSrtt27Dn961RKWeZWY5x+swZWt0WypkIKxGJF8+cwW39xP13a22SLcVBgxplZM7P
      wkqAg0efwmHUsD49Rs3WhC4+x3SsRjUV5sbwCFq7+56RGL09SPENpGwS1erGqBFAkYiny+w/
      dpz02sKu3ZWGhgZOnTpFPp/H6XTS0tLC0NAQmUwGt9uN2+0mlUoRj8d3JBwS6nuAx4anrY25
      +TE09hY0mbXb39dqBSy2ZvQaDVqNSLlSpqGhadtw96ny6NlUCtFgR2fv4oDXg6FVTyC0zpps
      wJDKIlqasXUcwusyoGJjbG2do6c+S22oxWuoMh+I4GnsJBdLU8mn2PBvkikViW1lyFVPYNuF
      X4qqqty4cYNsNssrr7yCIAhcuHABjUbD6dOnmZ2dRaPRIAjb2TR2gvoM8BgQBAGzw0MyHKKp
      yYMobNcBEwURvd5NKT7DuY8u4ItlsdndhFdHOH/xEtH0tgegKAi07u8n5VvB5/eTL0lsbqwS
      jiVRVIHuvi6Cayv4AwEKxRwr4SJ/dPYoI2NzZLdCxNK3ljXC9lg6+9tZmI3Q4jEhCgKJiI8j
      L/4xr776Kq8/s4/N4M6kIv88gsEg+Xyes2fPIooiy8vL6PV6nn32WQRBwOfz0dXVxf79+wkE
      diZFf90O8E1CrbE4N0d73yCWu8vI7zBfJSIsGo1y+fJlFEXB6/XS3d3N6OgoqqrS0dHBiRMn
      uHjxIrIsc+bMmR2pP1YXgDqPhCelSF59D7BLlMvlb5Ql+OMktnvdDlAXgF1CVdVvlAB8fL17
      /Zrrm+DdpppnftGPqkJgfoSFYAYUmaWFFXaikGouk+FL6UcKMX5/7jofZz7cXLjJjaltrVQ1
      7ee9i+Nfrr2HpFqt3t7gqqpKIBBgZmaGYrFIKBRiYmKCiYkJAoFA3Q7wRKI1kUoEAJl0vkIm
      HqcqlUkVi2gUmeXZCWaXN6mpEE8kyG758ccyVHJxbo7eJJouIhdSjN+8SSiRA7XKyuwEk3PL
      5DNx3v/tb7g2Mk4yXyET83FzbIpsSaaSSZDOpVleDdxZlE8uolULrG+VQZWJpItI2W2tz+pq
      iCZrhXB2d2ocF4tF/vCHP/C73/0OgFgsxvr6OrVajY8++gidTofFYiGfz7O4uLgjfdYFYNfR
      YBchVSyi2Jox1NIUcluYLE2szoyDow27mmZuLcza/BjL4RJeh4bh0UX6DvZhEGUmpxdp6Whj
      Y3acqG+RSM1Je5ML0WCjtaWNwcMD2Egxu5mlvdnG5Ngs2eg6V8aX8TR774lUc3b0kgusUU4E
      MHhvRVqpFdKylr59nWz5d6cqqNFo5I033qChoQGAxsZGXnjhBdxuNwaDAY/HQ29vL5Ik7ViF
      mLoAPAZ6Wo3MLQcxmd3YdRoCwRiuVg/pcpX2RjfNzU2USkVEo4tjR/sx1nJoXK3YrXacZpVw
      OI7fF8Do9GBv6sFFiuWlVfKSilarw2AyImVTbCVi+EMJGrwNgMihoWO4LIZ7BEDUWjAoBZbC
      WTqanAAUt4L4wkFGx+fZ2NxE2oUMNaIo3lNYe2JigtnZWV544QUEQbhdHM/pdDv/Iq0AACAA
      SURBVO5MnzvSSp0vhaW1h+jUNM5GJ+3NZsbWSjRbNXQ2OhkdHWFkahmvxwOiuP2ATB6MRT9j
      42Nsxmu0eS2ogohGI1DJ56hUVVSlSqUi47LA+NgMktmDTQsajQZRIwLC7QD97FaUwqfrAgsC
      zU1GApEK9lvlUoORBC+8/AZnX36Fw+1mEtmdcT77Mvj9fgqFAm+88QYGgwFVVZmdnWVwcHDH
      tEt1O8AucWdAjEqpUMJgMSOqNQolGYvZCKpCsVBAEXVYTEbkqoz+Vvo/pSqTL5YwmixoRYVC
      oYRGZ8Bk0FIsFlEFLWazEZQq+UIZk8UCNYlSWcJgMqMTVBRRixaZiYk5Bp46ikEjglJFUkS0
      goJUVTHoNchyFQEVjU6PKAjUqjKqsO2a8UX5KgExiUSCixcvks/n8Xq9dHZ2Mj09jSiKtLe3
      8/TTTzM/P18XgCeRekTY3mTPCkA8Ht8xh6e9wNfpWr4IkiQhCMKOJLB9lOxZAajzZPOkuEI8
      EZvgtZlhNre2PRjX11buiJr6PJKRAIncthdlxLdMXnr48Si5MP7UJw2V0lHCqS8eOLIyfYNz
      585x4fIwybtTI6o11lbWqSLj2ww9/GCB9ekRNuI5VBQCa6uUa7C8snzrr0VWloMPPP9xUq1W
      yWazwLZhLJFIkEwmd2w5+UQIQKIk45ubpKpCKBSgpqrk01ssr6xRlGrk02lkFTLxMPmKilTM
      U5S2w/yyiSiZ4vaPNRHxUZS3j1taWiFdqKBWS0TDYZZX1smmkyyvrJKvVCnmsoT8G2z4I9QU
      lUo+xdLSEvFMEaWYYCMYvdV/Fa3BjM2kJ5fLUcomiCSyyKUsK8vLJPP3JjFNlOGVV17hVK+L
      iQUfSk3Cv75CMJZCVRVCgRAKVaKROGpNJpXOUspm2doKsbLuR64plPMplpeWiCSyqEqNxFaY
      1ZUVUp/RX6mUY3FuCUVViQUDVBQ+5U5cIeDbemTP7mEoFAq3c4MCTE5OcvnyZd59910WFxe/
      QZZg0UBvu5kl37YOuCblWVzeRK+pMjo+S2RzlkhGYn7qMnPLUQIby2SKt6yXSoWZsRGuXLnC
      kj8OQDabw2iAmYl5pGKY6xObqPkwH47OI1aLLK748M9PsVVSyIZXWAomGRsbQ280ULyVlDUa
      jaGtpplcCpEJr7AaLbA8O8Lo9BoarcLc7BI6vY758ZsU7zKkVnNbXLlyheszAXo6mthcmqWk
      6gktThH99BSlqizPjJMsykTmx1mM5SnHA6xHM+SzWXQGIwuzU5TKZcYnp9DqNNwYHrnHdUHQ
      WujzqCyG87e/KyVDXLlyhStXRsnIe3N/otPpeO21127r/NfX13nrrbf44z/+4x2zBD8xznDe
      jn58N6ep1FSkfISFhU2aW53onS14Gpvx+WfRNz1NtbhBVhFpsd3SPoh6Dgz20dVoY2GsCGoJ
      39oGZQHiqSrHBh20dffS5U6xpTPS0WYj74+A1kx3dyfGvJapSJ59HS0sbGxi93bS3CDQ3TdA
      T2Oe2OKnlj4aCyeOH8dcS3J+dR1PJoNGb+buMgdaawNPHRkit7XOcihOwbeIYPGCUqOt9ol6
      L7Y5R8zdxRtHGgj6TRwY7McYXCOoVomFNwllZMLBOIPHjuL0tNDV1UPaF6IA2O+6f419Q0xd
      u3q71JLB2ciJEyeANFevRNiL6D8uDHiLgYEBfvazn2EymZCkHVjL8qTMAICgNdLTbGUjlERn
      8dLotdPV3U2z24nd1cD6/BqeVjfWSo6U0bUd27p9JjqDAaPRiE4rQrVAWbDT3dmGQfuAy1cr
      +Dc2mFrYxON2UlEEOtpaKCS3uO8WRKNFJwpgsNPmdtLW2U1bSxO6u9JxKlKJcCRCIp0DQaCr
      tRVbYxtdHZ2YDZ+MqbF7kGf6XUzMrnF3coZ0oUJPdxc2kx5UyKe3WF2eZws9VqVKOp3ljlME
      LQe6XSz7t2dRUdRiNBoxGg1PzI+gu7ubH/7whxw7doy+vr4dafOJ0ALl8/ntjMGKTCSeoanR
      QzmbJJrM4vK24LTqiW8lcDS4qRWzlEUTTst2/Gu5mAetCaNeQzGfQWeyk0+EyckiNosJu9VA
      SdJg1lUpyCIWg4ZSRSYwP0XV7qbB6aHZ46SUSxJNZGlobMGuq1FQDVh1CrmSglFTRRIMqNUy
      5lulRuVynmA4hsnuobHBfkc190w8TCJbQtQZaW1pRivUiISCVDVm2po9FHIFrA4LxVwJq9VE
      JpNDp9Ggs1kRpTISGihniaaKWK1W7FYD168P09G1j8aWNtRckMWIwrHDPYhAsZDDYLYhKFXi
      8QQN3iYKuQwOhwOokslUcDgsO/rMdkILFAwGuXjxIslkkr6+Pg4fPsylS5ew2+28/PLLO2Jj
      eCIE4HGwFQpha2rGuNdqhX4Gak0mGEvQ3tIMgFKrogoaNOLjC0Z5UtSgdQHYJb5pNcKeFEvw
      E7MJftKp1WrfKAH42PK91y3ge39+/xoSDIVuCUONcDBCTa7gD4agnCGYyFMpZIin8neco6ol
      YtHcjo+lWkiSyN+vJK3M3OQskgpQJhRMIJeyxJLbhqliNkEyt0PF2h4T9RngMbC6tkZrSwtQ
      ZX1tk8aWRrweNxSDrEaM2NxlQlk9boeBdDqLxmDGZi6wsZpAq2vEaneg0wgU8xkkRYPDbkWR
      JWqqilwTMOkFstk8BrMNk16kItcwGvSUymVMRgOVUoF8ScJosqDJRQmWVQRJxGq3o9d+WmUl
      E/Ovoti8HN6nZW01gtNgJRBXaWywk09GSIotNNgezTInFArx/vvvo9Vq2b9/Px6Ph+HhYSRJ
      4rXXXqOjo+OhvULrAvA4kAssLy8DVTIliWo5x+T8Os/su1N7H1mYZK2ix2m20N/rIBELYjTl
      yNbMHO0wML6cwKavoPMcxF5YZDWjZ9++/eSC88g6G5lklpOnDjO9FOD0iSOMjI7y7FMHGZlY
      wG43E8kpnOm14F9bQnUISKZmTh3qvmMM9sZu5ISPQkfP7e8SET9LokQ6FsXa2fLIblMsFuPU
      qVO0trZy7do1tra2+P73v08+n+fq1at0dHQ8dB/1JdDjQNRis9mw2azoHqBlsro9KKUCclUB
      VJo6ejl67AT6WoaIP0z/8VMcP3WKXMSHKmjpGxyis9FGvqbl+NBTHGkVCWTubDOdTtHRe5jD
      AwOYddt7kp6DR3lq8AACnxH2JeroaXWyHojd/kpvNGOz2bCYjY+06mRnZydjY2P87ne/o62t
      ja6uLt5++20uXbpEOr0z2erqAvA40Bhobm6mpaUJs/7+k3BNMDIwcJBqIUGhUqNSKhCPbFDB
      QoPHTmDdT9S/gsbqRaPVYtDrEUQNmlqFSDzJaqRMo0OkKpVIxsNspUuYDXoi0TDJ5BaF0r0b
      VLUmI93lGuFo7aKy5adyywJoc7ppaWnZLgO7s3fmDiYmJnjttdf4i7/4C9bW1jhw4ADf/va3
      GRwcpLOzc0f6qKtBd4lPB8TEtrbwejwIgkJ8K43LZSedzeO26oiVNLj0NQpVEbNGYmllA6un
      na4WG2vzK+QVLX39vZi0ENxYJi0bONjXjZRPIZobMGpBKmZYWl7H1baPNreVWGCdaE7B1eCg
      1ePEv7FCKlchVVY5M9RLHjMOvUIyL1HwzSG3HmGf2wRUSSWLuBrslDIxtko6Wl16shVosFso
      FzJImLBb9Pdc706oQbe2tm6nQT9w4ABer5crV66g0+l4/fXXb5dTfRjqArBL7JWIsFqlwPTk
      BDkJ9g08RZvbesffi8XijhivnhQ7QF0AdglZlveEAOwWT4oA1LVAu8ReDw3caT7ODXq3R+de
      o74JfgxsBdaYmJhgaT1I7XNqcBUySSq3lDNKVSK6lfjc9ku5JKWHSuZWI7i5SVGqglojEU+i
      IBHf2lYp1cpZkvndT5PyKKgLwGNgenGF9vZ21NQm05ux7SSyioLyqYSyiqJsB95sLJOTt8MB
      BVGDzWqBu47Z/qfc/pwILpMsqiiKiqpyx7F3n3v7+zuosj4zwdRyCFWRmJtdokaOmalNAKSk
      j8VQ5t4L22Hi8Tg//vGP+elPf8rY2Bjr6+v87Gc/4yc/+QlTU1M7sqSsL4EeBxo9brcbU9XL
      Qk4h6Z/n+lwATa3G4OmzlH0TrMVKeNr34wLkYpIrI8scG+rj5pyPM4cb+PvfTtPoEtE09HJq
      n5ELV2cwaiooTUPsF4tMXb+IvrhF/9k/Rb81y2IgiVTV88pLh3j/91cwW/SkcmW8LjOyvonX
      nj96xxDNnh6UzCZZ6ZO6YuVCllgsRiWZRtE1PvLbtLq6yvPPP09rayvnz59naGiI7u5uotEo
      4+PjHDly5KH7qAvA46AY593f/YqaoZGXzvQwf22Js2++gaUU4OLkJqKq4Y3XX0UAFq8tcvWD
      y7z25psYxMLtJnoOneCZw1ZGh32EV+Ice/1bNBfWObcpoDWYOfncM7SUZhjJVGhBg4hKPhog
      Ix2isfsQpw61cHF0irOnn2XkxvBnDnPwSA9jM+u3P5fyaSKRCHIqjdr0qG8S9PX18fbbb6PR
      aBgaGgLg3XffZXNzk29961s70kd9CfQ4MHt47bVXcesqZIoSdjNEEgUSoQhGlx1ttUimJJMv
      FNCZnbz4/DEW5u5frdFkFtiKZcnlsvfuKZQyG5ECz71wGq9dd0945oPQ2dpwVcNslbZPcjV1
      cvToUQ71dbMbYRITExO8+eabfP/732dtbQ1FUfjWt77F9773PUZHR3ekD82PfvSjH+1IS3W+
      MKIo4mrw0tbeRDS8xb4D/QTnbrKlujlxqJtmj4OZsZvIBidepxW7tw2PtkRR68BmMuCw2RC1
      RmwWPYKopbGjg+jSOJF4mqq5if0tTgxmG3qtgGhw0GgsMz63TnvPPhrcDRh1OmxWExqtDofd
      hiiKKPkoU5tp2hq3y48KogarzYrT46IqQXOzB61Gj8NpQRAEtAbr7Tyin4UkSYii+FDaL61W
      ywcffMDCwgJtbW3kcrnbn/fv309bW9tDO8PV7QBfA0rpENdvzlNF5Oip0zTZP6sc6oNQKWYz
      aCwODJqdcW6oR4TVuYNqdXeKTOwV8vk8Go0Gk8n0uIfyQOqb4F3im2YJlmUZRVHuyfe/16hv
      gncdlXhghUsXL3J9bJayrJDP5z/3LKWc4uqly2xE04Q35rh2fZLPN0WpBDc2uTvea2N+hJXg
      th5/Y22ZilRlcWV1+wy1zPLSxpe9qEeCoiisr6+zvLxMPB5HVVUikQjBYBDly+zmH0BdAHad
      ClMLYZ574QWO9HciZWP89ve/Y2p2kWIpTzKTx7+xTrlSYXVxjoWVDWS5wtTV8yQUK0oxyfXR
      GSw2K1TLrC3OseqPoQLZdIpkNEAsU6KcSzA7PcPiqv8eL/+cBOHVeSQVEvEo1VqNaOxWekS1
      SjSW3O2b8plks1mGh4cpFApIkkQwGOTatWtMTU19w1Ijfq0w0OXV8sG5j4hmJcw2Jy5XAx3t
      LeiVDBc+uoqss4JcxmBvQF/NsBZK43JaaenoptHbSFNzMx1tjfhmJ5GMDajJFRaDWRbHr7Ic
      LWDVSoxNL+Ntaf3seANBy4EeJ4trn+QELcT9XLhwgYuXrpG7X4jwLhOLxUgmk0QiERwOBwsL
      C7z++uu89NJLbG5u7kgf9T3AY2Df0WfpUWTGrl5GZ3gGk8mEy2GHUp72/YPsa/OSCCyxshKh
      Vs5ibnPQZzZRsjuxWsFsNmN3mNjIwYGjTWjcKjMrCYwOL/2D/ai5OPbGJho9DcRMn+2MZm/a
      R3BygmJ1+y1q8XRw5vSzqEqeK1eXdvN23Jf+/n76+vqIRCK8++672Gw2dDodoijuWIWY+gyw
      60jMjo+zuLRKBT1GvQYLElOLq5RlBUHcfiTFQgmr04XDauazn7UGj0fH9Ng0U1NLeNqbEcXt
      WmB6s4ls2M/s/CKh+HYd4ng8zadXDIKgpafdw2YgvhsX/ZXY2toik8lgMBjQaDS43W5WVlYI
      BAI7EgwDdTXorvFJQIxKuZAjWyhjtNixmY1UpSLpXBmn00qtJmI0aFFrMslUGq3BhEFvQItM
      TWvGoIFyuYzBYAS1SjqVBp0Jp92CVC6jMxgRBZVKqUA2X8FkNlPNhwkVzAz0NCMIUKmU0ekN
      CKpCJlfAbrNRrpQxm0yoqkKpJG3XG3sIdiIeIJvNcuXKFSRJ4rnnnqOhoYEPP/yQarXK2bNn
      d8TGUBeAXeJxRoR93O9OLRu+CE9KQMyeFYB6jbAnm0ql8tCuELvBnhWAOk82T4orxN7fBMsF
      1v2x7cAOpcLmRvCeXPkPh0pVltnNt4BSqzAzepULV0bIlu/UOValLH7//aO+klthCpUHG4Gq
      5Ty+cOyBx0Q21induuhkYJ3VlXnOnfuA9957n4tXRu+parMXUFWVQqGwXRf5G1MjTGcgsLaI
      oqqUEiEieRlBrRINBdhKZlFVhUKhQGpri3K1QjqewO8Pks/nCPgDFMoyqDVi4QCRrRSKuu2n
      ktwKE95KIpfznPvVb5nfDFDalVJBKpNXL2DqPMxzxw6hFQVyqS18vu2x1uQs/kASVIVkLEw4
      mqCmglItE/D7WFldoSgrSMUsfr+fXElCUapk00mCfj+5koyo1dPgsKMqMuGgn1A0fo+btLaW
      YCWQAxTmVnx09g7w6vNH0Ns6OPP8Scx7UEE+OzvLb3/7W37+85+zurr6TYkI09JqgVCxhhxL
      0Np8iMDyLGnFRH55hepTJ5i58j6OloMcsstc/HCOvv0mhqcrDHa6CCSLtOpzhMt6NOV1spVB
      4kvDWJu6SceiaI4MUq3VkCUZZVdWg2XSkpUhrw1BENADa+sRqiqMT6Q5cWS7HlYitIYvISFU
      MmSk/ZQ2Z9F52yhXJEDixtVh3O1tLK4GeO5kL5cujNB7sJPl8QTPHPQy489xYp+beKaAnN6k
      JBxhf6Pj9igcrftYnFpD9bagmprY2yv1bZaXl/nud79LoVDgo48+Yv/+/Q/d5hMgANBzsIvL
      sysYazWODpi4cn0JTA0oVRlZVrG42zh57BAoMVq7+xjoFQmpFfr3e5lYDRNIFjjxzDHEfJgR
      XwqN1cPRwQE2xCroLDR7vPT09bCzNVLuhwb10945apmwP0xZgEQWhg5vC4B/c5VQRsCgFWht
      zCFpmjl2oJ81JQ/lLaqWHgYO9lLNXKcgq7T19HPgQC/ZT0V3lXKpbb+ZXJRKQ+8dAqA12jHI
      OZaXa7Tu69+VK39Y+vr6btcIq1R2Jij/iRAA0dqBnHgbfesgRlGgvdFLwdGFV69gNWrRGQyI
      wmdmtgSg2WZgfmUDbSGC09NHrvxpXxcBna5K0BdB3+rFqH3U3ot6Ol0iI7OrtFh12FwCZa2H
      /m4LN6d8t49qcjeSNxro8VrQWu0kl8fwhewEIgkGOg4g5K7h8+uIFqv03GfMsVCcrgMDSJsV
      iqhUinkEvQW9VkAQtLQ0Wbg8G+XbB4ce8TXvDP39/Rw8eJDNzU3C4fCOtPnEaIHSsRBYPDgt
      epSahG99DVljpbuzhWKhgMNuR1UrZLMKDotAoqjQYNGRK0rYLQZ862vU9A4625vIZTM4HQ5K
      +RwaoxkqOdb9W7Tt68H6gFydO4aqENpcJSvr6O7uIBPZJFfT47CacTnN5PM1nA4jYd8GGUmg
      s6sLrZxlzR/D0eDG3dBArZRiMxCnqaMLh0lDvihjt5nJZNJYzUZy5Sp2o8jKqg+Lw4nV7mBp
      /AYHn34Rm35761etFIgmi7S0eLc3g7UKyZxMg9P6wOF/ER6FFigcDnPhwgXMZjOvv/76jsQa
      PDECUOdhUalUJAyGLxst9tV4UtSgT8QS6OvAXgiIEQRhx+rrfh4fB8TsVn9flboA7BLVavWx
      C8Bu8rHle6+HgtYF4LGgsLEwQ6KiY2Cgn1Iuhdvt2f5LrUokFqf1VsnTr0aNZDyH0+P8YoYe
      VSUe3cLZ3IgWlUw8SjqbIbK1XYTCYGlg8FAfur1vNfrS1AVg11FZHL1MrXGAviYNiqqwubGG
      2WRC1BnQa0VcLieytMXVK35OPXOIamqDmaSeY33tGA1ayqUSglaPUa9FlqtUZQlRa8Cg11KT
      JcpSnvW1EENuB5JUpqoIGI0G1GqVqlKjpoDJaLjDOS4XX6dsdNLm0DK/uMrQ06docvm5ulBj
      qK8L7WMoOZxIJPjDH/6Aoih0dnbeDoopFovYbDa+853v1GuEPXlIRAs6Xuzw3H54yYiPWRUy
      JZUXTh1hYmqW3lYDwZAP17oVQzlMIFTDZTXiVNP4EwUqxRKHnj7G5Lkr2Jrd5PIKp08PMHJ1
      HJPVQLqgo1qIMTq1iUYp4+waRPBPEdHZqCWTHHrhZZott8xfgoC3uYWVSIRWowHV0IhRpweD
      Hq2uhsHweDI82+12vve971EsFrl48SKnT5/m8OHDDA8P097eviPerV/DSe1J4M4H19DSzcmT
      T9Nk11C7ZczwtnfS2bGfo4P9dHd20NV/iIGe/7+982xu60oT9HNxA3IkAgkmiaRypChZpmWp
      JXucZrtqa6a6pr9sVVf/l93/sB+6tmdd7Zr1Vnu6Z3scFSlSNk1KpJgjSJAUCTCAyBm4dz9Q
      lkXbcssUxWDjqWIVcHlxzj3Aee+5540eZicCJDMZiqUC6UweZ/VB2s634bcoxJaX8B5r5fz5
      s3isRlZnJlnLZMmXiiQSKUTFztkL52ltqSFb3Gw1MTvcFOJrLEwG8R9u2qkv4keRZZnV1VWu
      X79OW1sbOp2ObDZLLBajpmZ7ivNVVoAdR8FtzDGxuE69VUQzPMv+LFIspCkUigiiSC6dplB0
      Y3VY8Te3UqXkQa/wtNucYlJYmVuh3mQjnslysMaOvWzj4pEqUnmIBzY72anlMsLj8EJBMmIz
      lBlazvGPp/dGKpN4PE5PTw/vvfceBoMBTdOYnJykubl529KtVFIj7hDfakMEPP564o8mmV9L
      4/N6MBn0mExmJFnGZLZg0BuwmJ1YpAzTj+L4Gg+gSywRTmkcO9rMUmCcSEbAX+1GryiYzAZk
      Wcbi9mPMrTITTtLQUE9VzQHkzBJT86t4qquxmI0YzSZkSUZRZIYe3Mfuq0MRBUDAYlLQW91U
      2R8LpSCi6I1YzT/ddlAsFtHpdEjS1u+xIyMjzM3NMTs7SyKRwO/3MzY2Rmtr6+PwzxenYgjb
      IfZKjbBvUNUS2VwRs+nlZG7bLxFhlUegHWLvZUiTUJSXNzlFUUQUxRdaAXaCvX11PyP2eq2s
      7UaW5X1RI6wiALtAdHmB5Wgao9VFnd+D+Ex1nkZiPY7J5Xi+H6qYJV4UsZu+nXT5TIKSaMKs
      lygVMqyvx4nG4hsRcKJCY2MjRmWvrU47R0UNugv0D41gsVhIPJpgdP77eXmWZoaZj2QAjan+
      AbLP23AqxPhiYtOhfHKV8cASACuBQVbyEhaLhfHxUSxmEzrdLli4nhNVVbl16xYffvghAMvL
      y3zwwQe8//77jI6O/lIiwn6GSAZqa2upUvIMR4vMD95BbbiKLzPEQNJFbKCXuLJA4ZWLjz9Q
      YvjrrwgnshiqGrnUCP/WOYfXUMTaeJpTXo2OnlH0agq56cqmrqxOH9nABCWtnuBKgfNXPCgC
      TE1PUOd/EXeLl08qlaK5uZn19Y34DavVym9/+1symQwdHR0cO3bshfuorAC7QWaNLz79T24N
      hDnS6EFTyxuB/pqKpjNw7NRJ2l69TIt/IzoMVUM2GNDpNMKzCxQ0jebTr/IPb7RDPk9wepH2
      t97ljdfOoUibf1JBMeNUcqyvh1ANG5N/v2Cz2aipqXli8TUajU/cIy5cuFCxBO9bTG6uXb2M
      Qy6SyZcQBB2lUoH1yDqqqiGgUSgWUb8JZM+s8Chn5VJ7G2ZJ970MFoquzHoy87hG2Hfj4gT8
      XhcPv7qPr2VvWHi3Sjwe5969e7z11ltUV2/P6lUxhO0Cqqri9lTjr3GzuLRCXWM9kwP3KSl2
      fNU11HjsBMcGKBpcOMx6rF4/5cgsM6Ekfr+fKrcDQTZjN4pogkT9gTpmBnqJFRV81dVEA/1E
      dU6c5o3NsMFsYjVe4kRzLbrHd01V1XA6XS9tjNtRI2xxcZFPPvmEoaEhSqUSwWCQ5eVl5ubm
      KBQKm1aHrVIxhP3M0DSV9Wgcl8vJbj7tVCLCKmyiXC7vmCXYbrNS3uVAlEpATIVNFAqFPeUK
      8bLZLzXCKgKw06hlsoUyBoNCMZtGFQ0YZB25XB5JghIyBvmHJ025VEAVZNRSAUXRP6NuwN+n
      kMshKnpEnUC5kKdQKpHOfGNt0OFwuZB+IeqRX8gw9xBalgd9I6CpBPo6eDC9jFbO8XBwlFIh
      R7bw7PSMidAUc+sFxkaGnpkD6XmIz48ytZoBYHZskOX1KMtLQe50fEVoeYXiHl2oYrEYH330
      EX/+858JhUIVQ9i+RDQjCVnK5Rx5ax3GbIR8TkExWCisPyKibyG90MPkShE1m+b0628irgcY
      DCxRziY4cL6FdDREd9ddChhof+0cUw+6WU8XcTYc4Zg9w2f9Sxi0LEazlUI+y8HjFzhYbXty
      Ce6DB5jsmwNvC9EMnD5Zi95nJ5aSOH7iKHv1oaWvr4/29nb0ej09PT28++67L9xmRQB2HIFa
      o47ZtRR6k5NSeo3E2hJGdxPl/Bh5UUWPjuOt7VRlxhmNptBCKdov/4rs4ggRwOSo5lTreRbG
      H5DJC1isFqLZNeam5jncaqfuaBtNzDBbquGwo8TcehL4VgAE2YlSGiUeXUV0eDbiAban6uhL
      5cSJE3zyySfodDpef/31bWmz8gi0C/gPepl6OILR4cVvEhkIJqnxPZWNTWAj4EMQ0AC1VKKs
      qmSzG8/pgiA8/gMttchcxsarF1uxShvn6wQBAeGxzl/4AXWowMFqE73Dc7g93l1Vl/4UhoaG
      ePfdd/n1r3/NxMTEtrRZWQF2AdFej0u/iNelx2iuQVoFuwQZSxV2WcRIa/gd4AAAD+dJREFU
      FbIEOr0Np2TEftBLX/c9LBYL/hodsqsKATDbqtBbPdiKD+gfiWJ3uxANJpyyhKzZcah6REXC
      ZikzN9qHUn+KGuuGYcpR24xxcQyv67GeXifj8eyu7eDv4XK56O7uRhRFnE7ntrRZMYTtELsb
      EaayHF7F4/M+sQS/bF5GRNg3BTI0TcNsNm9LWGRFAHaIXC73i7IDVEIiK2xir0+E7aZUKiGK
      4rZkcH6ZVARgp9G0DW9OQQBN5ZtN6tNrw7McvLZe7lR7XCRbQBA2Xmuatqm97cqysN/4ZY56
      Nykn6Oh8CJrGSMd/0DEaQivnuHevh3R8mXAs98yPRucHmVrdSmWUMl13uyhrGqh57nV2Mz7Y
      wyd//b98+O8f0zcW3PJwdpJ0Os3f/vY3Pv74YzKZzLa0WVkBdhrJhiQkUcs58tZ6jOk18nk9
      stGClomRUxyEAg+ZDmXIZXK0XbmKGJ+nf3SGXDpG0ystjPTeI5ws0nLyHG4xSc/AODq9jXPn
      W1kMTqIm45jqj3PA901JJAm/WSCcKePKhFDcNRw7fgCPw8ZKuYoTzb5d/Uqel46ODi5evEgk
      EqG7u5tr1669sDt0ZQXYcQSqFYGFWBrZXIUs5klFljC6aimmoyRyZfKZNPXH2nj9uIvgaopA
      IEzbpV9x4UQTaAWWwnEaDx2l2mFidGKKc+1XOFlvYToYZmU+gLXxJI1P1QMDOHCkjpnxR4RX
      1/D7fHta3fksvvGo9Xg8rKz8eBnY56UiALvAgWY3w30jmBw+/AaRwZkoNbXfTlhBlDDo9UiS
      hKaVKak6JFF47GJs4PI/XEOfDdM9MImmaegEHaIoomkaeoePOo/1e45yorURklMsx1Q8rv25
      IX/77bfp7e2ls7Nz29KtVARgF5DcB5FTCXweE95GH7GcjFsRkIw2zHoRvcmKIoKgmLDojTT4
      TXTdvsXkUhKjWGRiqJ/JR+v4fG6OHWqip+s2fYEIzY01WC3Wjbu7WuRB/+BTvQo0Os2oTi/6
      x9Ih602YDHs7b8/TRKNRfD4fgiBw7ty5bYkJrtgBfqYUUxFCGZEGr2NX+n8ZEWH5fJ65uTls
      NtsTQXhR9qwA7GQEVYXtJ5VKVewAL0IikXgSVvdzYC8UydtJ8vn8CwfF7wR7dgX4ubHXskO/
      bPaLK8S+2AR/dftjbty4yWeffsFiNEM02M9c7O9/bqb/IYkf/E+Zga6vSX/n6KOHX7GQfk7H
      +FKa/qGp5zv3O3zd8RkdHR3cuH6LpdjzJj7UiISCpJ6qOrowNUj02Xazn0Rkfpj/95+fc+f2
      TfonHwEF7vf0o+6gzGqaRjab5f79+0/e9/f3c/36dfL5PKVSiVu3bvH5559v2w1lzz4CPU1e
      tHDtV1dQ4wvcX1rlkJJjeuwhgVySM69cxJCP0D84huyope3MYRLhWYbGg8TXslw5e4q5yRFm
      QnEOn2qltmrD776Yz6NpZSYH7/MoWuD42TbKhTyqBpHFAEMTc1h9B2g9Us34WIBYNIKpupkz
      LTXMjA4wt7xGVvLSusXxXLl0iVJsgYfhCMV4kXIqgcHfTHl1luBygsbDJzBmIyi1TVjLcYJr
      JUylEooA8ZV5hifmSGVSnK87xfLcJFPza9QfPoFXjDG+lCYVj3PsbBs2McvQ4DCapYYzLT5G
      h4fICBZaz5zA8FTgr6oJHDp1gaMNTr76+mvAQz6/szV+M5kMXV1dLC0tcf78+SeFMY4cOUJX
      VxeyLFNbW4vJZOLu3bu8/fbbL9znvlgByCcZGRlmYHKRGo8TNA277wCXjruZXooxPDzJyVcv
      Uy+tMhJcYWx2jYuXf8Wh2ipykUWGg6u4bAo9Pf1s2lVoaWYXUhw7cRyb4dt7gSjrcXu9hEYG
      iBXzhNZztLW/RmF1iWgoQET0cPVyOy7LFquuF1KMj48zMD6Py2FlfmoUnasenxhjJqGn/dU2
      FgMjSAaV6cAK4YV5UDZqgOVKGUanVjjffomWuioorPNgeAGnw8xQfx+p2Cols5+Lx6sJhmME
      RkbxnzjPyZZaFscGiGNCSswxOBfdfE1qmcXgNONjwxis3q2N6wUxm8288847WCwbN6lwOMzJ
      kyfx+/2USiX8fj9TU1OMjo5uW42w/SEAooJFLhGOlampsiLoRJxOB3pFAU0jj4RFL+NyWUjG
      U4hmKwZJRBR1FHIZTA431bUHuPLq2c0D1llpv3Sa2FKAkZnQxjG1wNTUPHZXFR6HQq4IFrsD
      vSyiSDLpZI4qjxOdTrd133pRoaqqiuYTZznos2F0VtNY40ItZFAsdiRZj0EWkB0NFKMzrMQL
      VDsfR4yVcuiMdhRJh6jTQTGDYK7C4/PTfrENRRRwOJ0osgyCQKEkYDMbMBgMZDJ5vDU1NJ54
      hRO1ts3XJAhYrCaC00EaDzZubVwvAfVxqkdN04hEIvj9fvx+P/F4fFva3xcCoDfbaDx8ltdP
      19DbPwaispG2QyehKAqHa63c+OILbg/FaD3ZiCm7zBc3bhNYjuPwNSAlwwwNDxMMRZ64AMgG
      PUIpzejQKIsrcYxGPaKiR9KJyEKe8YlxVhN5REG3MZkAWZHxHmhk5n4ndzq/JpnfWtInvcmK
      x+PBabOgEwQUvYIAyFUHUVZHuH37NmVTDSa9Qo2xSExxY5QFZEWPTnFgVcN03O0kEIqjs/jx
      iRFGx8YILq5++90IEoqk42BTNd23b/Fl3xgNh5uZGxlgfHyCeLbIwuwU6cLGBNNJety+Ot75
      xzeYvN9NIqfueHnUYrHI6uoqqVSKSCRCQ0MDvb29DA8PY7FYSCaTyLKMoijbJgAVLdAOsde0
      QGopTyC4RHPLwZdyF9yKFiiRSDA4OEi5XMZoNNLa2sr8/DzxeJxTp06h0+kYGBigXC5z+vRp
      9PotPoI+RUUAdoi9JgAvm/2iBt0XWqCfA3t9Imw3lYiwCpvYDr+V/cS3qVv29rj3xSb4Z0Up
      Qd/ANJoGM3136A9GQC0w+HCEH9tSR2dGCT1l9IqvzBNJ/51NuKaxvAW/+UI6yqd/+3du3rrB
      l30TqMDQ0AD54s5mz9I0jbGxMe7cuUMikSCXy9HV1UVXVxe53PZYACsCsNNIFlLxEGh54kWJ
      3NoqxXyWVLEImRjdXXf4un+MgqqxOj/B7dt3WYwkKWWTzAfG6OjqIZkrgaYhihLLoTmGH3TT
      MzBJSdPIxZfp7LhNd/8Iq48C/OUvf+FmZw/pXJHgaB93v7xPIlckG11kbGyMjh/QZmmlAo7a
      Q7xx7Q0c+TCRPCQScdQd3sOEw2FSqRSNjY3cvHmT9fX1jdpqVVXcuHFjW/ZUFQHYcXS4RFhJ
      ZhBs1SjEScXCmGx+iqUy/sYW5Pwys4vrDI/Pcqb1DGZZh6YVKStVtB60Mr24TjQ0TTQHwclR
      XE2nqdJFCMczdH89zLnXriBmV5CqDnDoyBHevPwK2tooC2Ufr5z086B3hORKkAguXmmxMDr/
      fb+SdCJKKLREtChj3SV/tpqaGs6fP0+hUMDhcFBdXY0kSSwuLlJXV7ctfVQEYBdoarAwPB7E
      aHbjkiVmF1Zx17oJLQRZiayTzxXJ5oucOX2chZkJpubCIMj4/V70ev2m0qZ6q4sqqwmj0Yim
      ZTBY/ZhlEUnanOI2uZ7EV+vFYK1Cr2VBJ1Ht82E0GPmh+Mh8JsGDrk5cLScw7NIs0TTtiWvE
      66+/jiAIxGIxyuUy+fxWkgN8n4oA7AImfzPLDwdw+ezU11ronU5RbdahlQtEImvE4mk0yjwK
      BolE4xRKz+sWbkUpzHP99h0mH9cftpPhelcvloYWAl9e5/r12xh89YjfmfSpSJjl2LeZFlzV
      jfyXf/on4tP3mV9LbdPIfxqBQABJkrh69SqyLPPo0SOampq4cOECgUBgW/qo2AF2BW0jJZBO
      QNA0Nl4KT3L1PK052fz+exmEHr//9njoURBJMTA+Nknba5cxycJTbWzkBHq6PQENDZWJoUHq
      j53F/Ph82Djvu9PjebU62xERNjs7S3d3NwANDQ0cO3aMO3fuIIoi165dw2q1VorkVdhMNDzP
      /HKM6oYmvE7LrmV/2C9F8jYJQDKZ3LaEQxV+2eTzeVRVrUSEVfhlkkwmKRaLe94C/kxLsKYW
      GezuYGxuFb3Fy1vvvYnlJ9qNg32drNmPcL7Zw9SDu3T1DZMqGWg4epr/eu3CpnPXwyEMbi+m
      72gvUuEpugIZ3rl0Zl8mc6rww2iaRigUwuv1IknSk2PLy8vEYjHq6uqwWCyoqkowGMTtdiPL
      MvPz80iSRENDw5ZXl3w+z8LCArIsP7tS/NLADb6YEflvv/k1B6odSJKOqelZ8rEQ6yU9i+MP
      GBidweb1U1ibZy60zNDgMBa3H6OQpffLe/Tcu0fRe5ijtS6q/AewFuaJ6E/zL2+fo5iN0/vV
      l6zmJJyGIv/zf/x3pnMaXm8Ny9ODPBgax2CvRhef4dbwGhdPH6oIwD6iUCigquqTyf005XKZ
      Tz/9lD/96U9cvHjxyT4hHA7z8OFDAG7evMnZs2cJBAL88Y9/xGQyPakPMD09/UQj9FM3waqq
      0t3dTT6fp6+v79lq0InBIU6de4X54Xv8xye3yWQSfPTBv3K9Zwy1WEK2uGjyFPnXD74g2HeL
      W6MR6uUIH958yM0/v8+6oYaDNa5nXEWRj//tfcpVTSx+9RG9iyrVHh9HT5/BbdKhGewcaXTy
      v/73//lJg6uwP9DpdFy7dg2vd3Pkmc/n45133sHtdpPL5SiVSty5c4crV64AcOjQIY4ePYqm
      aVu++wuCwGuvvcaFCxcolUrPFgCL1UQsnqDl7GW0pWHWCqCzePjn3/wGr7LOZx/fZGBmkUw8
      BojU1PrxuOzk8ynGQmnajh7EZn2GBqCU41G0xJHmRk601DI9t4LRYMDucCIU4tz67BN6B2dJ
      Zrcn6KHC3kIQhGfuDTo7O7l79y6///3v6ezsxOl0Eo/HiUQilMtlvvzyS1ZWVrDb7T/4+efp
      O5FI8Ic//IGjR48+WwBOXXmP+Xt/4Ytbd1jJSRhEkCQFnSBQyqUooOBx2X/gsUShtcnFx5/f
      ZGxm6Ycbl02caani5uefc2tgiVdPN1F3oIrejnssrkXJlHR4Pa6Kle4XgqqqjI2NMTMzw+Dg
      IL/73e+wWq0cPnyYpqYmUqkUmUyGpaUlrly5wptvvsmDBw+23Ndf//pXLl68SHt7+49ogTSN
      XCbJeiyJbLRQ5bCQSKSx2W0IWpn1tVUEvRFREzEoGiXRgFEokSgI2AwCK6vryIoeg8WKWb+x
      XBVzaXKqjNWkoJYKrK1FEI1WXHYLajHH6loUm8tNIRmlqDMgixpWk55UTsVmNVX2APuIH9MC
      ZTIZrl+/zsrKCg6Hg5aWFoaHh2lvb+fevXuYTCacTidXr15FkiSmp6eBjU3y4OAgoihy6dIl
      3G73T94DlMvlJ/UFJEni/wOdoDKyfPR5TQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      KwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      /x9Uue8FMAB0zQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8 (2)' width='192'>
      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
      DkYQBEH4/+I3wElfWzL5AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
