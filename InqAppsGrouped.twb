<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <CascadingFilters />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Spring 2020 Master' inline='true' name='federated.1vja69t0dr9tay11rrm361qjxbwt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Spring 2020 Master' name='excel-direct.0aybqbh0nwu2fg113h6ve18fni3n'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/christine.iyer/Downloads/Spring 2020 Master.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.500715' measure-ordering='alphabetic' measure-percentage='0.499285' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='MKT_output' inline='true' name='federated.0ld2lnz1ff4gt611odja404yg1lv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='MKT_output' name='textscan.1yochbe12eihkd1h7j9dx04u3gxo'>
            <connection class='textscan' directory='Z:/DAA/Marketing' filename='MKT_output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1yochbe12eihkd1h7j9dx04u3gxo' name='MKT_output.csv' table='[MKT_output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Code_Adnumber' ordinal='0' />
            <column datatype='string' name='Code_Audience' ordinal='1' />
            <column datatype='string' name='Code_Interactivity' ordinal='2' />
            <column datatype='string' name='Code_Medium' ordinal='3' />
            <column datatype='string' name='Code_Objective' ordinal='4' />
            <column datatype='string' name='Code_Product' ordinal='5' />
            <column datatype='string' name='Code_RecruitingPeriod' ordinal='6' />
            <column datatype='string' name='Code_Vendor' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='Master_Adname' ordinal='9' />
            <column datatype='string' name='Master_Adname_Type' ordinal='10' />
            <column datatype='string' name='Master_Vendor' ordinal='11' />
            <column datatype='integer' name='Master_Bounces' ordinal='12' />
            <column datatype='string' name='Master_Campaign' ordinal='13' />
            <column datatype='string' name='Master_Clickable_Completions' ordinal='14' />
            <column datatype='integer' name='Master_Clicks' ordinal='15' />
            <column datatype='integer' name='Master_Clicks_Sponsored_InMail' ordinal='16' />
            <column datatype='integer' name='Master_Clicks_To_Site' ordinal='17' />
            <column datatype='integer' name='Master_Completions' ordinal='18' />
            <column datatype='string' name='Master_Component' ordinal='19' />
            <column datatype='real' name='Master_Cost' ordinal='20' />
            <column datatype='date' name='Master_Date' ordinal='21' />
            <column datatype='integer' name='Master_Engagements' ordinal='22' />
            <column datatype='integer' name='Master_Exits' ordinal='23' />
            <column datatype='string' name='Master_Fiscal_Year' ordinal='24' />
            <column datatype='integer' name='Master_Impressions' ordinal='25' />
            <column datatype='string' name='Master_Landing_Page' ordinal='26' />
            <column datatype='integer' name='Master_Opens' ordinal='27' />
            <column datatype='integer' name='Master_Pageviews' ordinal='28' />
            <column datatype='string' name='Master_Product' ordinal='29' />
            <column datatype='string' name='Master_Reach' ordinal='30' />
            <column datatype='integer' name='Master_Sends' ordinal='31' />
            <column datatype='integer' name='Master_Session_Duration' ordinal='32' />
            <column datatype='integer' name='Master_Sessions' ordinal='33' />
            <column datatype='integer' name='Master_Swipes' ordinal='34' />
            <column datatype='integer' name='Master_Time_On_Page' ordinal='35' />
            <column datatype='string' name='Master_Unique_Clicks' ordinal='36' />
            <column datatype='integer' name='Master_Unique_Pageviews' ordinal='37' />
            <column datatype='integer' name='Master_Views' ordinal='38' />
            <column datatype='string' name='Region' ordinal='39' />
            <column datatype='string' name='Master_Results' ordinal='40' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Adnumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Adnumber]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Adnumber</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Audience</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Audience]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Audience</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Interactivity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Interactivity]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Interactivity</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Medium</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Medium]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Medium</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Objective</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Objective]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Objective</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Product]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Product</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_RecruitingPeriod</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_RecruitingPeriod]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_RecruitingPeriod</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code_Vendor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code_Vendor]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Code_Vendor</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Adname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Adname]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Adname</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Adname_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Adname_Type]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Adname_Type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Vendor</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Vendor]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Vendor</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Bounces</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Bounces]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Bounces</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Campaign</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Campaign]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Campaign</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clickable_Completions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Clickable_Completions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clickable_Completions</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clicks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Clicks]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clicks</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clicks_Sponsored_InMail</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Clicks_Sponsored_InMail]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clicks_Sponsored_InMail</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Clicks_To_Site</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Clicks_To_Site]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Clicks_To_Site</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Completions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Completions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Completions</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Component</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Component]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Component</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Master_Cost]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Cost</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Master_Date]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Engagements</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Engagements]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Engagements</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Exits</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Exits]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Exits</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Fiscal_Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Fiscal_Year]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Fiscal_Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Impressions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Impressions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Impressions</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Landing_Page</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Landing_Page]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Landing_Page</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Opens</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Opens]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Opens</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Pageviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Pageviews]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Pageviews</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Product]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Product</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Reach</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Reach]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Reach</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Sends</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Sends]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Sends</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Session_Duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Session_Duration]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Session_Duration</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Sessions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Sessions]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Sessions</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Swipes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Swipes]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Swipes</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Time_On_Page</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Time_On_Page]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Time_On_Page</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Unique_Clicks</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Unique_Clicks]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Unique_Clicks</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Unique_Pageviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Unique_Pageviews]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Unique_Pageviews</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Views</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master_Views]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Views</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master_Results</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Master_Results]</local-name>
            <parent-name>[MKT_output.csv]</parent-name>
            <remote-alias>Master_Results</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Swipe Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[CTR (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Swipes]))/(SUM([Master_Impressions]))' />
      </column>
      <column caption='View Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[CTR (copy 3)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Views]))/(SUM([Master_Impressions]))' />
      </column>
      <column caption='Open Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[CTR (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Opens]))/(SUM([Master_Sends]))' />
      </column>
      <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
      </column>
      <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
      </column>
      <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
      </column>
      <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
      </column>
      <column caption='Vendor_Medium' datatype='string' name='[Calculation_7344245108126945281]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Code_Vendor]+&quot;_&quot;+[Code_Medium]' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Code Adnumber' datatype='string' name='[Code_Adnumber]' role='dimension' type='nominal' />
      <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
      <column caption='Code Interactivity' datatype='string' name='[Code_Interactivity]' role='dimension' type='nominal' />
      <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
      <column caption='Code Objective' datatype='string' name='[Code_Objective]' role='dimension' type='nominal' />
      <column caption='Code Product' datatype='string' name='[Code_Product]' role='dimension' type='nominal' />
      <column caption='Code RecruitingPeriod' datatype='string' name='[Code_RecruitingPeriod]' role='dimension' type='nominal' />
      <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
      <column caption='Master Adname' datatype='string' name='[Master_Adname]' role='dimension' type='nominal' />
      <column caption='Master Adname Type' datatype='string' name='[Master_Adname_Type]' role='dimension' type='nominal' />
      <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
      <column caption='Master Campaign' datatype='string' name='[Master_Campaign]' role='dimension' type='nominal' />
      <column caption='Master Clickable Completions' datatype='string' name='[Master_Clickable_Completions]' role='dimension' type='nominal' />
      <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
      <column caption='Master Clicks Sponsored InMail' datatype='integer' name='[Master_Clicks_Sponsored_InMail]' role='measure' type='quantitative' />
      <column caption='Master Clicks To Site' datatype='integer' name='[Master_Clicks_To_Site]' role='measure' type='quantitative' />
      <column caption='Master Completions' datatype='integer' name='[Master_Completions]' role='measure' type='quantitative' />
      <column caption='Master Component' datatype='string' name='[Master_Component]' role='dimension' type='nominal' />
      <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
      <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
      <column caption='Master Engagements' datatype='integer' name='[Master_Engagements]' role='measure' type='quantitative' />
      <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
      <column caption='Master Fiscal Year' datatype='string' name='[Master_Fiscal_Year]' role='dimension' type='nominal' />
      <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
      <column caption='Master Landing Page' datatype='string' name='[Master_Landing_Page]' role='dimension' type='nominal' />
      <column caption='Master Opens' datatype='integer' name='[Master_Opens]' role='measure' type='quantitative' />
      <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
      <column caption='Master Product' datatype='string' name='[Master_Product]' role='dimension' type='nominal' />
      <column caption='Master Reach' datatype='string' name='[Master_Reach]' role='dimension' type='nominal' />
      <column caption='Master Results' datatype='string' name='[Master_Results]' role='dimension' type='nominal' />
      <column caption='Master Sends' datatype='integer' name='[Master_Sends]' role='measure' type='quantitative' />
      <column caption='Master Session Duration' datatype='integer' name='[Master_Session_Duration]' role='measure' type='quantitative' />
      <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
      <column caption='Master Swipes' datatype='integer' name='[Master_Swipes]' role='measure' type='quantitative' />
      <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
      <column caption='Master Unique Clicks' datatype='string' name='[Master_Unique_Clicks]' role='dimension' type='nominal' />
      <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
      <column caption='Master Vendor' datatype='string' name='[Master_Vendor]' role='dimension' type='nominal' />
      <column caption='Master Views' datatype='integer' name='[Master_Views]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Gmail Open Rate ' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Open Rate (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Clicks_To_Site]))/(SUM([Master_Clicks]))' />
      </column>
      <column caption='CTOR LI' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Open Rate (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Clicks_Sponsored_InMail]))/(SUM([Master_Opens]))' />
      </column>
      <column datatype='real' datatype-customized='true' default-format='p0.00%' name='[View Rate (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Master_Views]))/(SUM([Master_Impressions]))' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.541364' measure-ordering='alphabetic' measure-percentage='0.458636' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='InquiriesApps_Spring19Travel' inline='true' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='InquiriesApps_Spring19Travel' name='textscan.1opvjlw1qr26gt1fatvh51qrbe19'>
            <connection class='textscan' directory='C:/Users/christine.iyer/Box/FY20_Spring_Travel' filename='InquiriesApps_Spring19Travel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1opvjlw1qr26gt1fatvh51qrbe19' name='InquiriesApps_Spring19Travel.csv' table='[InquiriesApps_Spring19Travel#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PeopleSoft ID' ordinal='0' />
            <column datatype='string' name='Contact ID' ordinal='1' />
            <column datatype='string' name='First Name' ordinal='2' />
            <column datatype='string' name='Last Name' ordinal='3' />
            <column datatype='string' name='Active' ordinal='4' />
            <column datatype='integer' name='PeopleSoftID' ordinal='5' />
            <column datatype='string' name='Email' ordinal='6' />
            <column datatype='string' name='Recruiting Category' ordinal='7' />
            <column datatype='string' name='Gender' ordinal='8' />
            <column datatype='date' name='Birthdate' ordinal='9' />
            <column datatype='integer' name='Age' ordinal='10' />
            <column datatype='string' name='Initial Referral Source' ordinal='11' />
            <column datatype='date' name='Initial Source Date' ordinal='12' />
            <column datatype='string' name='Anticipated Plan' ordinal='13' />
            <column datatype='date' name='Created Date' ordinal='14' />
            <column datatype='date' name='Last Modified Date' ordinal='15' />
            <column datatype='string' name='App Application Status' ordinal='16' />
            <column datatype='date' name='App Application Date' ordinal='17' />
            <column datatype='date' name='App Admit Date' ordinal='18' />
            <column datatype='real' name='High School GPA_App' ordinal='19' />
            <column datatype='integer' name='College GPA_App' ordinal='20' />
            <column datatype='date' name='App Deposit Date' ordinal='21' />
            <column datatype='string' name='Primary City' ordinal='22' />
            <column datatype='string' name='Primary State/Province' ordinal='23' />
            <column datatype='string' name='Primary Zip/Postal Code' ordinal='24' />
            <column datatype='string' name='Primary County' ordinal='25' />
            <column datatype='string' name='Primary Country' ordinal='26' />
            <column datatype='string' name='Student Stage' ordinal='27' />
            <column datatype='string' name='Student Type' ordinal='28' />
            <column datatype='string' name='Career' ordinal='29' />
            <column datatype='integer' name='Anticipated Start Year' ordinal='30' />
            <column datatype='string' name='Anticipated Start Term Year' ordinal='31' />
            <column datatype='string' name='Concentration' ordinal='32' />
            <column datatype='string' name='App Possible Concentration' ordinal='33' />
            <column datatype='string' name='App Possible Acad Major' ordinal='34' />
            <column datatype='string' name='App Possible Acad Major2' ordinal='35' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PeopleSoft ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PeopleSoft ID]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>PeopleSoft ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Contact ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Contact ID]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Contact ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>First Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[First Name]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>First Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Name]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Last Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Active]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Active</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PeopleSoftID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PeopleSoftID]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>PeopleSoftID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Email</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Email]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Email</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recruiting Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Recruiting Category]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Recruiting Category</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthdate</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Birthdate]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Birthdate</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Initial Referral Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Initial Referral Source]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Initial Referral Source</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Initial Source Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Initial Source Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Initial Source Date</remote-alias>
            <ordinal>12</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anticipated Plan</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Anticipated Plan]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Anticipated Plan</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Created Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Created Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Created Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Modified Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Last Modified Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Last Modified Date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Application Status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Application Status]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Application Status</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Application Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[App Application Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Application Date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Admit Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[App Admit Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Admit Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High School GPA_App</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High School GPA_App]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>High School GPA_App</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>College GPA_App</remote-name>
            <remote-type>20</remote-type>
            <local-name>[College GPA_App]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>College GPA_App</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Deposit Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[App Deposit Date]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Deposit Date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary City]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary City</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary State/Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary State/Province]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary State/Province</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary Zip/Postal Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary Zip/Postal Code]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary Zip/Postal Code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary County]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary County</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Primary Country]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Primary Country</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Student Stage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Student Stage]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Student Stage</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Student Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Student Type]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Student Type</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Career</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Career]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Career</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anticipated Start Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Anticipated Start Year]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Anticipated Start Year</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Anticipated Start Term Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Anticipated Start Term Year]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Anticipated Start Term Year</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Concentration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Concentration]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>Concentration</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Possible Concentration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Possible Concentration]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Possible Concentration</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Possible Acad Major</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Possible Acad Major]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Possible Acad Major</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>App Possible Acad Major2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[App Possible Acad Major2]</local-name>
            <parent-name>[InquiriesApps_Spring19Travel.csv]</parent-name>
            <remote-alias>App Possible Acad Major2</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='College GPA App' datatype='integer' name='[College GPA_App]' role='measure' type='quantitative' />
      <column caption='High School GPA App' datatype='real' name='[High School GPA_App]' role='measure' type='quantitative' />
      <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[PeopleSoft ID]' role='dimension' type='ordinal' />
      <column caption='People Soft ID' datatype='integer' name='[PeopleSoftID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
            <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Belknap, NH&quot;'>
            <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
            <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Bristol, MA&quot;'>
            <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
            <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Carroll, NH&quot;'>
            <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
            <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
            <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Essex, MA&quot;'>
            <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
            <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Grafton, NH&quot;'>
            <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Hampden, MA&quot;'>
            <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Hartford, CT&quot;'>
            <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
            <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
            <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
            <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
            <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
            <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;New Haven, CT&quot;'>
            <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;New London, CT&quot;'>
            <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
            <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Orange, VT&quot;'>
            <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
            <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Providence, RI&quot;'>
            <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
            <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Rutland, VT&quot;'>
            <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Strafford, NH&quot;'>
            <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
            <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
            <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
            <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Washington, RI&quot;'>
            <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
            <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Washington, VT&quot;'>
            <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Windham, CT&quot;'>
            <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
            <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Windham, VT&quot;'>
            <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Windsor, VT&quot;'>
            <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
            <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Worcester, MA&quot;'>
            <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
            <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
          <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
          <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
          <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
          <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
          <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
          <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
          <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
          <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
          <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
          <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
          <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
          <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
          <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
          <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
          <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
          <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
          <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
          <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
          <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
          <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
          <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
          <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
          <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
          <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
          <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
          <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
          <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
          <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
          <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Primary Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Primary County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Primary Zip/Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
          <bin default-name='false' value='&quot;In Market&quot;'>
            <value>#2017-03-01#</value>
            <value>#2017-03-02#</value>
            <value>#2017-03-03#</value>
            <value>#2017-03-04#</value>
            <value>#2017-03-05#</value>
            <value>#2017-03-06#</value>
            <value>#2017-03-07#</value>
            <value>#2017-03-08#</value>
            <value>#2017-03-09#</value>
            <value>#2017-03-10#</value>
            <value>#2017-03-11#</value>
            <value>#2017-03-12#</value>
            <value>#2017-03-13#</value>
            <value>#2017-03-14#</value>
            <value>#2017-03-15#</value>
            <value>#2017-03-16#</value>
            <value>#2017-03-17#</value>
            <value>#2017-03-18#</value>
            <value>#2017-03-19#</value>
            <value>#2017-03-20#</value>
            <value>#2017-03-21#</value>
            <value>#2017-03-22#</value>
            <value>#2017-03-23#</value>
            <value>#2017-03-24#</value>
            <value>#2017-03-25#</value>
            <value>#2017-03-27#</value>
            <value>#2017-03-28#</value>
            <value>#2017-03-29#</value>
            <value>#2017-03-30#</value>
            <value>#2017-03-31#</value>
            <value>#2017-04-01#</value>
            <value>#2017-04-02#</value>
            <value>#2017-04-03#</value>
            <value>#2017-04-04#</value>
            <value>#2017-04-05#</value>
            <value>#2017-04-06#</value>
            <value>#2017-04-07#</value>
            <value>#2017-04-09#</value>
            <value>#2017-04-10#</value>
            <value>#2017-04-11#</value>
            <value>#2017-04-12#</value>
            <value>#2017-04-13#</value>
            <value>#2017-04-14#</value>
            <value>#2017-04-15#</value>
            <value>#2017-04-16#</value>
            <value>#2017-04-17#</value>
            <value>#2017-04-18#</value>
            <value>#2017-04-19#</value>
            <value>#2017-04-20#</value>
            <value>#2017-04-21#</value>
            <value>#2017-04-22#</value>
            <value>#2017-04-24#</value>
            <value>#2017-04-25#</value>
            <value>#2017-04-26#</value>
            <value>#2017-04-27#</value>
            <value>#2017-04-28#</value>
            <value>#2017-04-30#</value>
            <value>#2017-05-01#</value>
            <value>#2017-05-02#</value>
            <value>#2017-05-03#</value>
            <value>#2017-05-04#</value>
            <value>#2017-05-05#</value>
            <value>#2017-05-06#</value>
            <value>#2017-05-07#</value>
            <value>#2017-05-08#</value>
            <value>#2017-05-09#</value>
            <value>#2017-05-10#</value>
            <value>#2017-05-11#</value>
            <value>#2017-05-15#</value>
            <value>#2017-05-16#</value>
            <value>#2017-05-17#</value>
            <value>#2017-05-18#</value>
            <value>#2017-05-19#</value>
            <value>#2017-05-21#</value>
            <value>#2017-05-22#</value>
            <value>#2017-05-23#</value>
            <value>#2017-05-24#</value>
            <value>#2017-05-26#</value>
            <value>#2017-05-27#</value>
            <value>#2017-05-28#</value>
            <value>#2017-05-30#</value>
            <value>#2017-05-31#</value>
            <value>#2017-06-02#</value>
            <value>#2017-06-05#</value>
            <value>#2017-06-06#</value>
            <value>#2017-06-07#</value>
            <value>#2017-06-08#</value>
            <value>#2017-06-09#</value>
            <value>#2017-06-10#</value>
            <value>#2017-06-12#</value>
            <value>#2017-06-13#</value>
            <value>#2017-06-14#</value>
            <value>#2017-06-15#</value>
            <value>#2018-03-01#</value>
            <value>#2018-03-02#</value>
            <value>#2018-03-03#</value>
            <value>#2018-03-04#</value>
            <value>#2018-03-05#</value>
            <value>#2018-03-06#</value>
            <value>#2018-03-07#</value>
            <value>#2018-03-08#</value>
            <value>#2018-03-10#</value>
            <value>#2018-03-11#</value>
            <value>#2018-03-12#</value>
            <value>#2018-03-13#</value>
            <value>#2018-03-14#</value>
            <value>#2018-03-15#</value>
            <value>#2018-03-16#</value>
            <value>#2018-03-17#</value>
            <value>#2018-03-18#</value>
            <value>#2018-03-19#</value>
            <value>#2018-03-20#</value>
            <value>#2018-03-21#</value>
            <value>#2018-03-22#</value>
            <value>#2018-03-23#</value>
            <value>#2018-03-24#</value>
            <value>#2018-03-25#</value>
            <value>#2018-03-26#</value>
            <value>#2018-03-27#</value>
            <value>#2018-03-28#</value>
            <value>#2018-03-29#</value>
            <value>#2018-03-30#</value>
            <value>#2018-03-31#</value>
            <value>#2018-04-01#</value>
            <value>#2018-04-02#</value>
            <value>#2018-04-03#</value>
            <value>#2018-04-04#</value>
            <value>#2018-04-05#</value>
            <value>#2018-04-06#</value>
            <value>#2018-04-07#</value>
            <value>#2018-04-08#</value>
            <value>#2018-04-09#</value>
            <value>#2018-04-10#</value>
            <value>#2018-04-11#</value>
            <value>#2018-04-12#</value>
            <value>#2018-04-13#</value>
            <value>#2018-04-14#</value>
            <value>#2018-04-15#</value>
            <value>#2018-04-16#</value>
            <value>#2018-04-17#</value>
            <value>#2018-04-18#</value>
            <value>#2018-04-19#</value>
            <value>#2018-04-20#</value>
            <value>#2018-04-21#</value>
            <value>#2018-04-22#</value>
            <value>#2018-04-23#</value>
            <value>#2018-04-24#</value>
            <value>#2018-04-25#</value>
            <value>#2018-04-26#</value>
            <value>#2018-04-27#</value>
            <value>#2018-04-28#</value>
            <value>#2018-04-29#</value>
            <value>#2018-04-30#</value>
            <value>#2018-05-01#</value>
            <value>#2018-05-02#</value>
            <value>#2018-05-03#</value>
            <value>#2018-05-04#</value>
            <value>#2018-05-05#</value>
            <value>#2018-05-07#</value>
            <value>#2018-05-08#</value>
            <value>#2018-05-09#</value>
            <value>#2018-05-10#</value>
            <value>#2018-05-11#</value>
            <value>#2018-05-12#</value>
            <value>#2018-05-14#</value>
            <value>#2018-05-15#</value>
            <value>#2018-05-16#</value>
            <value>#2018-05-17#</value>
            <value>#2018-05-18#</value>
            <value>#2018-05-19#</value>
            <value>#2018-05-20#</value>
            <value>#2018-05-21#</value>
            <value>#2018-05-22#</value>
            <value>#2018-05-23#</value>
            <value>#2018-05-24#</value>
            <value>#2018-05-25#</value>
            <value>#2018-05-27#</value>
            <value>#2018-05-29#</value>
            <value>#2018-05-30#</value>
            <value>#2018-05-31#</value>
            <value>#2018-06-01#</value>
            <value>#2018-06-04#</value>
            <value>#2018-06-05#</value>
            <value>#2018-06-06#</value>
            <value>#2018-06-07#</value>
            <value>#2018-06-08#</value>
            <value>#2018-06-10#</value>
            <value>#2018-06-11#</value>
            <value>#2018-06-12#</value>
            <value>#2018-06-13#</value>
            <value>#2018-06-14#</value>
            <value>#2018-06-15#</value>
            <value>#2019-03-11#</value>
            <value>#2019-03-12#</value>
            <value>#2019-03-13#</value>
            <value>#2019-03-14#</value>
            <value>#2019-03-15#</value>
            <value>#2019-03-16#</value>
            <value>#2019-03-17#</value>
            <value>#2019-03-18#</value>
            <value>#2019-03-19#</value>
            <value>#2019-03-20#</value>
            <value>#2019-03-21#</value>
            <value>#2019-03-22#</value>
            <value>#2019-03-23#</value>
            <value>#2019-03-24#</value>
            <value>#2019-03-25#</value>
            <value>#2019-03-26#</value>
            <value>#2019-03-27#</value>
            <value>#2019-03-28#</value>
            <value>#2019-03-29#</value>
            <value>#2019-03-30#</value>
            <value>#2019-03-31#</value>
            <value>#2019-04-01#</value>
            <value>#2019-04-02#</value>
            <value>#2019-04-03#</value>
            <value>#2019-04-04#</value>
            <value>#2019-04-05#</value>
            <value>#2019-04-06#</value>
            <value>#2019-04-07#</value>
            <value>#2019-04-08#</value>
            <value>#2019-04-09#</value>
            <value>#2019-04-10#</value>
            <value>#2019-04-11#</value>
            <value>#2019-04-12#</value>
            <value>#2019-04-13#</value>
            <value>#2019-04-14#</value>
            <value>#2019-04-15#</value>
            <value>#2019-04-16#</value>
            <value>#2019-04-17#</value>
            <value>#2019-04-18#</value>
            <value>#2019-04-19#</value>
            <value>#2019-04-20#</value>
            <value>#2019-04-21#</value>
            <value>#2019-04-22#</value>
            <value>#2019-04-23#</value>
            <value>#2019-04-24#</value>
            <value>#2019-04-25#</value>
            <value>#2019-04-26#</value>
            <value>#2019-04-27#</value>
            <value>#2019-04-28#</value>
            <value>#2019-04-29#</value>
            <value>#2019-04-30#</value>
            <value>#2019-05-01#</value>
            <value>#2019-05-02#</value>
            <value>#2019-05-03#</value>
            <value>#2019-05-04#</value>
            <value>#2019-05-05#</value>
            <value>#2019-05-06#</value>
            <value>#2019-05-07#</value>
            <value>#2019-05-08#</value>
            <value>#2019-05-09#</value>
            <value>#2019-05-10#</value>
            <value>#2019-05-11#</value>
            <value>#2019-05-12#</value>
            <value>#2019-05-13#</value>
            <value>#2019-05-14#</value>
            <value>#2019-05-15#</value>
            <value>#2019-05-16#</value>
            <value>#2019-05-17#</value>
            <value>#2019-05-18#</value>
            <value>#2019-05-19#</value>
            <value>#2019-05-20#</value>
            <value>#2019-05-21#</value>
            <value>#2019-05-22#</value>
            <value>#2019-05-23#</value>
            <value>#2019-05-24#</value>
            <value>#2019-05-25#</value>
            <value>#2019-05-26#</value>
            <value>#2019-05-27#</value>
            <value>#2019-05-28#</value>
            <value>#2019-05-29#</value>
            <value>#2019-05-30#</value>
            <value>#2019-05-31#</value>
            <value>#2019-06-01#</value>
            <value>#2019-06-02#</value>
            <value>#2019-06-03#</value>
            <value>#2019-06-04#</value>
            <value>#2019-06-05#</value>
            <value>#2019-06-06#</value>
            <value>#2019-06-07#</value>
            <value>#2019-06-08#</value>
            <value>#2019-06-09#</value>
            <value>#2019-06-10#</value>
            <value>#2019-06-11#</value>
            <value>#2019-06-12#</value>
            <value>#2019-06-13#</value>
            <value>#2019-06-14#</value>
            <value>#2019-06-15#</value>
          </bin>
          <bin default-name='false' value='&quot;Out of Market&quot;'>
            <value>%null%</value>
            <value>#2017-01-01#</value>
            <value>#2017-01-02#</value>
            <value>#2017-01-03#</value>
            <value>#2017-01-04#</value>
            <value>#2017-01-05#</value>
            <value>#2017-01-06#</value>
            <value>#2017-01-07#</value>
            <value>#2017-01-08#</value>
            <value>#2017-01-09#</value>
            <value>#2017-01-10#</value>
            <value>#2017-01-11#</value>
            <value>#2017-01-12#</value>
            <value>#2017-01-13#</value>
            <value>#2017-01-14#</value>
            <value>#2017-01-15#</value>
            <value>#2017-01-16#</value>
            <value>#2017-01-17#</value>
            <value>#2017-01-18#</value>
            <value>#2017-01-19#</value>
            <value>#2017-01-20#</value>
            <value>#2017-01-21#</value>
            <value>#2017-01-22#</value>
            <value>#2017-01-23#</value>
            <value>#2017-01-24#</value>
            <value>#2017-01-25#</value>
            <value>#2017-01-26#</value>
            <value>#2017-01-27#</value>
            <value>#2017-01-28#</value>
            <value>#2017-01-29#</value>
            <value>#2017-01-30#</value>
            <value>#2017-01-31#</value>
            <value>#2017-02-01#</value>
            <value>#2017-02-02#</value>
            <value>#2017-02-03#</value>
            <value>#2017-02-04#</value>
            <value>#2017-02-05#</value>
            <value>#2017-02-06#</value>
            <value>#2017-02-07#</value>
            <value>#2017-02-08#</value>
            <value>#2017-02-10#</value>
            <value>#2017-02-11#</value>
            <value>#2017-02-12#</value>
            <value>#2017-02-13#</value>
            <value>#2017-02-14#</value>
            <value>#2017-02-15#</value>
            <value>#2017-02-16#</value>
            <value>#2017-02-17#</value>
            <value>#2017-02-19#</value>
            <value>#2017-02-20#</value>
            <value>#2017-02-21#</value>
            <value>#2017-02-22#</value>
            <value>#2017-02-23#</value>
            <value>#2017-02-24#</value>
            <value>#2017-02-25#</value>
            <value>#2017-02-26#</value>
            <value>#2017-02-27#</value>
            <value>#2017-02-28#</value>
            <value>#2018-01-01#</value>
            <value>#2018-01-02#</value>
            <value>#2018-01-03#</value>
            <value>#2018-01-05#</value>
            <value>#2018-01-06#</value>
            <value>#2018-01-07#</value>
            <value>#2018-01-08#</value>
            <value>#2018-01-09#</value>
            <value>#2018-01-10#</value>
            <value>#2018-01-11#</value>
            <value>#2018-01-12#</value>
            <value>#2018-01-14#</value>
            <value>#2018-01-15#</value>
            <value>#2018-01-16#</value>
            <value>#2018-01-17#</value>
            <value>#2018-01-18#</value>
            <value>#2018-01-19#</value>
            <value>#2018-01-20#</value>
            <value>#2018-01-21#</value>
            <value>#2018-01-22#</value>
            <value>#2018-01-23#</value>
            <value>#2018-01-24#</value>
            <value>#2018-01-25#</value>
            <value>#2018-01-26#</value>
            <value>#2018-01-27#</value>
            <value>#2018-01-28#</value>
            <value>#2018-01-29#</value>
            <value>#2018-01-30#</value>
            <value>#2018-01-31#</value>
            <value>#2018-02-01#</value>
            <value>#2018-02-02#</value>
            <value>#2018-02-03#</value>
            <value>#2018-02-04#</value>
            <value>#2018-02-05#</value>
            <value>#2018-02-06#</value>
            <value>#2018-02-07#</value>
            <value>#2018-02-08#</value>
            <value>#2018-02-09#</value>
            <value>#2018-02-10#</value>
            <value>#2018-02-12#</value>
            <value>#2018-02-13#</value>
            <value>#2018-02-14#</value>
            <value>#2018-02-15#</value>
            <value>#2018-02-16#</value>
            <value>#2018-02-17#</value>
            <value>#2018-02-18#</value>
            <value>#2018-02-20#</value>
            <value>#2018-02-21#</value>
            <value>#2018-02-22#</value>
            <value>#2018-02-23#</value>
            <value>#2018-02-24#</value>
            <value>#2018-02-25#</value>
            <value>#2018-02-26#</value>
            <value>#2018-02-28#</value>
            <value>#2019-01-01#</value>
            <value>#2019-01-02#</value>
            <value>#2019-01-03#</value>
            <value>#2019-01-04#</value>
            <value>#2019-01-05#</value>
            <value>#2019-01-06#</value>
            <value>#2019-01-07#</value>
            <value>#2019-01-08#</value>
            <value>#2019-01-09#</value>
            <value>#2019-01-10#</value>
            <value>#2019-01-11#</value>
            <value>#2019-01-12#</value>
            <value>#2019-01-13#</value>
            <value>#2019-01-14#</value>
            <value>#2019-01-15#</value>
            <value>#2019-01-16#</value>
            <value>#2019-01-17#</value>
            <value>#2019-01-18#</value>
            <value>#2019-01-19#</value>
            <value>#2019-01-20#</value>
            <value>#2019-01-21#</value>
            <value>#2019-01-22#</value>
            <value>#2019-01-23#</value>
            <value>#2019-01-24#</value>
            <value>#2019-01-25#</value>
            <value>#2019-01-26#</value>
            <value>#2019-01-27#</value>
            <value>#2019-01-28#</value>
            <value>#2019-01-29#</value>
            <value>#2019-01-30#</value>
            <value>#2019-01-31#</value>
            <value>#2019-02-01#</value>
            <value>#2019-02-02#</value>
            <value>#2019-02-03#</value>
            <value>#2019-02-04#</value>
            <value>#2019-02-05#</value>
            <value>#2019-02-06#</value>
            <value>#2019-02-07#</value>
            <value>#2019-02-08#</value>
            <value>#2019-02-09#</value>
            <value>#2019-02-10#</value>
            <value>#2019-02-11#</value>
            <value>#2019-02-12#</value>
            <value>#2019-02-13#</value>
            <value>#2019-02-14#</value>
            <value>#2019-02-15#</value>
            <value>#2019-02-16#</value>
            <value>#2019-02-17#</value>
            <value>#2019-02-18#</value>
            <value>#2019-02-19#</value>
            <value>#2019-02-20#</value>
            <value>#2019-02-21#</value>
            <value>#2019-02-22#</value>
            <value>#2019-02-23#</value>
            <value>#2019-02-24#</value>
            <value>#2019-02-25#</value>
            <value>#2019-02-26#</value>
            <value>#2019-02-27#</value>
            <value>#2019-02-28#</value>
            <value>#2019-03-01#</value>
            <value>#2019-03-02#</value>
            <value>#2019-03-03#</value>
            <value>#2019-03-04#</value>
            <value>#2019-03-05#</value>
            <value>#2019-03-06#</value>
            <value>#2019-03-07#</value>
            <value>#2019-03-08#</value>
            <value>#2019-03-09#</value>
            <value>#2019-03-10#</value>
          </bin>
        </calculation>
      </column>
      <column caption='Target 2019' datatype='string' name='[Target]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Targeted&quot;'>
            <value>&quot;Barnstable, MA&quot;</value>
            <value>&quot;Berkshire, MA&quot;</value>
            <value>&quot;Bristol, MA&quot;</value>
            <value>&quot;Caledonia, VT&quot;</value>
            <value>&quot;Carroll, NH&quot;</value>
            <value>&quot;Cheshire, NH&quot;</value>
            <value>&quot;Chittenden, VT&quot;</value>
            <value>&quot;Essex, MA&quot;</value>
            <value>&quot;Fairfield, CT&quot;</value>
            <value>&quot;Grafton, NH&quot;</value>
            <value>&quot;Hampden, MA&quot;</value>
            <value>&quot;Hartford, CT&quot;</value>
            <value>&quot;Hillsborough, NH&quot;</value>
            <value>&quot;Litchfield, CT&quot;</value>
            <value>&quot;Merrimack, NH&quot;</value>
            <value>&quot;Middlesex, CT&quot;</value>
            <value>&quot;Middlesex, MA&quot;</value>
            <value>&quot;New Haven, CT&quot;</value>
            <value>&quot;New London, CT&quot;</value>
            <value>&quot;Norfold, MA&quot;</value>
            <value>&quot;Norfolk, MA&quot;</value>
            <value>&quot;Orange, VT&quot;</value>
            <value>&quot;Plymouth, MA&quot;</value>
            <value>&quot;Providence, RI&quot;</value>
            <value>&quot;Rockingham, NH&quot;</value>
            <value>&quot;Rutland, VT&quot;</value>
            <value>&quot;Strafford, NH&quot;</value>
            <value>&quot;Suffolk, MA&quot;</value>
            <value>&quot;Washington, RI&quot;</value>
            <value>&quot;Washington, VT&quot;</value>
            <value>&quot;Windham, CT&quot;</value>
            <value>&quot;Worcester, MA&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Targets 2017 and 2018]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Target 17 18&quot;'>
            <value>&quot;Belknap, NH&quot;</value>
            <value>&quot;Caledonia, VT&quot;</value>
            <value>&quot;Chittenden, VT&quot;</value>
            <value>&quot;Essex, MA&quot;</value>
            <value>&quot;Fairfield, CT&quot;</value>
            <value>&quot;Hartford, CT&quot;</value>
            <value>&quot;Hillsborough, NH&quot;</value>
            <value>&quot;Middlesex, MA&quot;</value>
            <value>&quot;New Haven, CT&quot;</value>
            <value>&quot;Providence, RI&quot;</value>
            <value>&quot;Rockingham, NH&quot;</value>
            <value>&quot;Rutland, VT&quot;</value>
            <value>&quot;Strafford, NH&quot;</value>
            <value>&quot;Washington, RI&quot;</value>
            <value>&quot;Windham, VT&quot;</value>
            <value>&quot;Windsor, VT&quot;</value>
            <value>&quot;Worcester, MA&quot;</value>
          </bin>
        </calculation>
      </column>
      <group auto-hidden='true' hidden='true' name='[Primary City &amp; Primary State/Province]' name-style='unqualified'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Primary City]' />
          <groupfilter function='level-members' level='[Primary State/Province]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Primary State/Province, Primary City'>
          <field>[Primary State/Province]</field>
          <field>[Primary City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.793904' measure-ordering='alphabetic' measure-percentage='0.206096' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Primary City &amp; Primary State/Province (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;(Avon, Connecticut), (Berlin, Connecticut), (Bloomfield, Connecticut) and 14 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;(Bristol, Rhode Island)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;(New Milford, Connecticut), (New Preston Marble Dale, Connecticut), (Oakville, Connecticut) and 3 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Barnstable, MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belknap, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caledonia, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chittenden, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New London, CT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Orange, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Strafford, NH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Windham, VT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Windsor, VT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hartford, CT&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Litchfield, CT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bristol, MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grafton, NH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Essex, MA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Plymouth, MA&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Hampden, MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington, RI&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;(Little Compton, Rhode Island), (Middletown, Rhode Island), (Portsmouth, Rhode Island) and 1 more&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Middlesex, MA&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Windham, CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norfolk, MA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hillsborough, NH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norfold, MA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockingham, NH&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll, NH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheshire, NH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Merrimack, NH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sullivan, NH&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Haven, CT&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Middlesex, CT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fairfield, CT&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suffolk, MA&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Berkshire, MA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rutland, VT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Worcester, MA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FA21_Spring_Travel' inline='true' name='federated.0vcsg5o1whb9541dxy5bo0rm52k9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FA21_Spring_Travel' name='textscan.16zzh2r0t03twk18bgf03194oooi'>
            <connection class='textscan' directory='C:/Users/christine.iyer/Box/FY20_Spring_Travel' filename='FA21_Spring_Travel.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.16zzh2r0t03twk18bgf03194oooi' name='FA21_Spring_Travel.csv' table='[FA21_Spring_Travel#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='string' name='City' ordinal='1' />
            <column datatype='string' name='City_State' ordinal='2' />
            <column datatype='date' name='Date' ordinal='3' />
            <column datatype='string' name='County_State' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City_State]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>City_State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County_State]</local-name>
            <parent-name>[FA21_Spring_Travel.csv]</parent-name>
            <remote-alias>County_State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='City State' datatype='string' name='[City_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='County State' datatype='string' name='[County_State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='State, City'>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.519594' measure-ordering='alphabetic' measure-percentage='0.480406' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Master (SpringTravel2020)' inline='true' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SpringTravel2020' name='excel-direct.1rfn25x1en2ila1dgklmq06a0xxs'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/christine.iyer/Desktop/SpringTravel2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1rfn25x1en2ila1dgklmq06a0xxs' name='Master' table='[Master$]' type='table'>
          <columns gridOrigin='A1:L113:no:A1:L113:0' header='yes' outcome='2'>
            <column datatype='date' name='DATE' ordinal='0' />
            <column datatype='string' name='REFERRAL' ordinal='1' />
            <column datatype='string' name='PROGRAM' ordinal='2' />
            <column datatype='string' name='LOCATION' ordinal='3' />
            <column datatype='string' name='TOWN' ordinal='4' />
            <column datatype='string' name='ST' ordinal='5' />
            <column datatype='string' name='ZIP' ordinal='6' />
            <column datatype='string' name='EPS' ordinal='7' />
            <column datatype='string' name='TYPE FAIR' ordinal='8' />
            <column datatype='string' name='STAFF' ordinal='9' />
            <column datatype='datetime' name='START' ordinal='10' />
            <column datatype='datetime' name='END' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REFERRAL</remote-name>
            <remote-type>130</remote-type>
            <local-name>[REFERRAL]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>REFERRAL</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROGRAM</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PROGRAM]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>PROGRAM</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOWN</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TOWN]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>TOWN</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ST</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ST]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>ST</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EPS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[EPS]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>EPS</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TYPE FAIR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TYPE FAIR]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>TYPE FAIR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STAFF</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STAFF]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>STAFF</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>START</remote-name>
            <remote-type>7</remote-type>
            <local-name>[START]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>START</remote-alias>
            <ordinal>10</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>END</remote-name>
            <remote-type>7</remote-type>
            <local-name>[END]</local-name>
            <parent-name>[Master]</parent-name>
            <remote-alias>END</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Master]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L113:no:A1:L113:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[TOWN] + &quot;, &quot; + [ST]' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Program' datatype='string' name='[PROGRAM]' role='dimension' type='nominal' />
      <column caption='Referral' datatype='string' name='[REFERRAL]' role='dimension' type='nominal' />
      <column caption='Staff' datatype='string' name='[STAFF]' role='dimension' type='nominal' />
      <column caption='Start' datatype='datetime' name='[START]' role='dimension' type='ordinal' />
      <column datatype='string' name='[ST]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Town' datatype='string' name='[TOWN]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Type Fair' datatype='string' name='[TYPE FAIR]' role='dimension' type='nominal' />
      <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[ST]' derivation='None' name='[none:ST:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='ST, Town'>
          <field>[ST]</field>
          <field>[TOWN]</field>
          <field>[ZIP]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.701049' measure-ordering='alphabetic' measure-percentage='0.298951' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ST:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet3 (Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM)' inline='true' name='federated.0ut04ph059wvwb105ih4j1khw9pv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM' name='google-sheets.1gdgep41x60ez8108yuwb198suaa'>
            <connection REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob' SCOPE='email profile https://www.googleapis.com/auth/drive.readonly' class='google-sheets' cleaning='no' compat='no' dataRefreshTime='' filename='Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM' googleSheetId='1fTrjbZ_t8wgCBAq4jq-y2fBgbEmma3U52y-okAhFM2g' interpretationMode='8' mimeType='application/vnd.google-apps.spreadsheet' server='' server-oauth='' username='christine.iyer@maine.edu' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='google-sheets.1gdgep41x60ez8108yuwb198suaa' name='Sheet3' table='[Sheet3$]' type='table'>
          <columns gridOrigin='A1:E96:no:A1:E96:0' header='yes' outcome='2'>
            <column datatype='date' name='Week of Date' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='string' name='Town' ordinal='3' />
            <column datatype='date' name='Date' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Week of Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Week of Date]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Week of Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Town</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Town]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Town</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet3]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E96:no:A1:E96:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Town] + &quot;, &quot; + [State]' />
      </column>
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Town]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='State, County'>
          <field>[State]</field>
          <field>[County]</field>
          <field>[Town]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.561684' measure-ordering='alphabetic' measure-percentage='0.438316' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master (SpringTravel2020)' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' />
          </datasources>
          <datasource-dependencies datasource='federated.08g9a9x1aemi0u14e13gp1drqfsj'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{F54879A6-D18A-4862-9AF5-3FF713E2C141}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='MKT_output' name='federated.0ld2lnz1ff4gt611odja404yg1lv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ld2lnz1ff4gt611odja404yg1lv'>
            <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
            </column>
            <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
            </column>
            <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
            </column>
            <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='Vendor_Medium' datatype='string' name='[Calculation_7344245108126945281]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Code_Vendor]+&quot;_&quot;+[Code_Medium]' />
            </column>
            <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
            <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
            <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
            <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
            <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
            <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
            <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
            <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
            <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
            <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
            <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
            <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
            <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='MY' name='[my:Master_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_7344245108126945281]' derivation='None' name='[none:Calculation_7344245108126945281:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Audience]' derivation='None' name='[none:Code_Audience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Master_Cost]' derivation='Sum' name='[sum:Master_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Impressions]' derivation='Sum' name='[sum:Master_Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Unique_Pageviews]' derivation='Sum' name='[sum:Master_Unique_Pageviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4401424142514929662]' derivation='User' name='[usr:Calculation_-4401424142514929662:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3640878829637640192]' derivation='User' name='[usr:Calculation_3640878829637640192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[my:Master_Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201901' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201902' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201903' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201904' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201905' />
              <groupfilter function='member' level='[my:Master_Date:ok]' member='201906' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Calculation_7344245108126945281:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;DBM_DISP&quot;</bucket>
              <bucket>&quot;FB_DISP&quot;</bucket>
              <bucket>&quot;IG_DISP&quot;</bucket>
              <bucket>&quot;IG_VID&quot;</bucket>
              <bucket>&quot;FB_VID&quot;</bucket>
              <bucket>&quot;FB_CAR&quot;</bucket>
              <bucket>&quot;IG_CAR&quot;</bucket>
              <bucket>&quot;SC_VID&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]'>
            <groupfilter function='member' level='[none:Code_Audience:nk]' member='&quot;TL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[my:Master_Date:ok]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Calculation_7344245108126945281:nk]</rows>
        <cols>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{4DF4A259-E270-44C6-A46D-B80131021A1B}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2017-8 Targets&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Student Stage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Targets 2017 and 2018]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Target 17 18&quot;'>
                  <value>&quot;Belknap, NH&quot;</value>
                  <value>&quot;Caledonia, VT&quot;</value>
                  <value>&quot;Chittenden, VT&quot;</value>
                  <value>&quot;Essex, MA&quot;</value>
                  <value>&quot;Fairfield, CT&quot;</value>
                  <value>&quot;Hartford, CT&quot;</value>
                  <value>&quot;Hillsborough, NH&quot;</value>
                  <value>&quot;Middlesex, MA&quot;</value>
                  <value>&quot;New Haven, CT&quot;</value>
                  <value>&quot;Providence, RI&quot;</value>
                  <value>&quot;Rockingham, NH&quot;</value>
                  <value>&quot;Rutland, VT&quot;</value>
                  <value>&quot;Strafford, NH&quot;</value>
                  <value>&quot;Washington, RI&quot;</value>
                  <value>&quot;Windham, VT&quot;</value>
                  <value>&quot;Windsor, VT&quot;</value>
                  <value>&quot;Worcester, MA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Stage]' derivation='None' name='[none:Student Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Initial Source Date]' derivation='Year' name='[yr:Initial Source Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]'>
            <groupfilter function='level-members' level='[Primary City &amp; Primary State/Province (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]'>
            <groupfilter function='member' level='[Targets 2017 and 2018]' member='&quot;Target 17 18&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Connecticut&quot;</bucket>
              <bucket>&quot;Massachusetts&quot;</bucket>
              <bucket>&quot;New Hampshire&quot;</bucket>
              <bucket>&quot;Vermont&quot;</bucket>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Inquiry&quot;</bucket>
              <bucket>&quot;Applicant&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]'>
            <groupfilter function='member' level='[yr:Initial Source Date:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk])</cols>
      </table>
      <simple-id uuid='{C53E8EA0-4EB7-45C9-9140-DDB97592BBA1}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='FA21_Spring_Travel' name='federated.0vcsg5o1whb9541dxy5bo0rm52k9' />
          </datasources>
          <datasource-dependencies datasource='federated.0vcsg5o1whb9541dxy5bo0rm52k9'>
            <column caption='City State' datatype='string' name='[City_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='County State' datatype='string' name='[County_State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City_State]' derivation='None' name='[none:City_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[County_State]' derivation='None' name='[none:County_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:County_State:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Middlesex, MA&quot;</bucket>
              <bucket>&quot;Fairfield, CT&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[twk:Date:ok]'>
            <groupfilter from='#2020-03-01 00:00:00#' function='range' level='[twk:Date:ok]' to='#2020-05-17 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[twk:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[twk:Date:ok] / ([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:County_State:nk] / ([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:State:nk] / [federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:City_State:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{D1DFEE88-04EA-4F5A-902F-52EF66E5E1A8}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Primary City]' derivation='None' name='[none:Primary City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols />
      </table>
      <simple-id uuid='{B7F6F59B-31A3-4860-934F-D770F83D6793}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Primary City]' derivation='None' name='[none:Primary City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]' field-type='quantitative' max='-7569113.4887404572' min='-8363246.452879942' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]' field-type='quantitative' max='5585154.2208122062' min='5070986.7980555417' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]</rows>
        <cols>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{22B1652A-8FED-438F-970B-C4F0739432F3}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='MKT_output' name='federated.0ld2lnz1ff4gt611odja404yg1lv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ld2lnz1ff4gt611odja404yg1lv'>
            <column caption='Swipe Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[CTR (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Swipes]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='View Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[CTR (copy 3)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Views]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
            </column>
            <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
            </column>
            <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
            </column>
            <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
            <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
            <column caption='Code Product' datatype='string' name='[Code_Product]' role='dimension' type='nominal' />
            <column caption='Code RecruitingPeriod' datatype='string' name='[Code_RecruitingPeriod]' role='dimension' type='nominal' />
            <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
            <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
            <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
            <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
            <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
            <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
            <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
            <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
            <column caption='Master Session Duration' datatype='integer' name='[Master_Session_Duration]' role='measure' type='quantitative' />
            <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
            <column caption='Master Swipes' datatype='integer' name='[Master_Swipes]' role='measure' type='quantitative' />
            <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
            <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
            <column caption='Master Views' datatype='integer' name='[Master_Views]' role='measure' type='quantitative' />
            <column-instance column='[Code_Audience]' derivation='None' name='[none:Code_Audience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Medium]' derivation='None' name='[none:Code_Medium:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Product]' derivation='None' name='[none:Code_Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_RecruitingPeriod]' derivation='None' name='[none:Code_RecruitingPeriod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Vendor]' derivation='None' name='[none:Code_Vendor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Master_Bounces]' derivation='Sum' name='[sum:Master_Bounces:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Clicks]' derivation='Sum' name='[sum:Master_Clicks:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Cost]' derivation='Sum' name='[sum:Master_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Exits]' derivation='Sum' name='[sum:Master_Exits:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Impressions]' derivation='Sum' name='[sum:Master_Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Pageviews]' derivation='Sum' name='[sum:Master_Pageviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Session_Duration]' derivation='Sum' name='[sum:Master_Session_Duration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Sessions]' derivation='Sum' name='[sum:Master_Sessions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Time_On_Page]' derivation='Sum' name='[sum:Master_Time_On_Page:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Unique_Pageviews]' derivation='Sum' name='[sum:Master_Unique_Pageviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='Week-Trunc' name='[twk:Master_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CTR (copy 2)]' derivation='User' name='[usr:CTR (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CTR (copy 3)]' derivation='User' name='[usr:CTR (copy 3):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4401424142514929662]' derivation='User' name='[usr:Calculation_-4401424142514929662:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3640878829637640192]' derivation='User' name='[usr:Calculation_3640878829637640192:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:CTR (copy 2):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:CTR (copy 3):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Bounces:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Clicks:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Exits:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Pageviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Session_Duration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Sessions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Time_On_Page:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:CTR (copy 2):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:CTR (copy 3):qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Bounces:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Clicks:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Exits:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Pageviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Session_Duration:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Sessions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Time_On_Page:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Code_Medium:nk]' member='&quot;TEXT&quot;' />
              <groupfilter function='member' level='[none:Code_Medium:nk]' member='&quot;VID&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]'>
            <groupfilter function='member' level='[none:Code_RecruitingPeriod:nk]' member='&quot;FA20&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk]'>
            <groupfilter function='member' level='[none:Code_Vendor:nk]' member='&quot;SC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk] / ([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk] / ([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk] / ([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Product:nk] / [federated.0ld2lnz1ff4gt611odja404yg1lv].[twk:Master_Date:ok]))))</rows>
        <cols>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{67921935-72A3-4A5C-BD4A-9F4E4C662E7D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Master (SpringTravel2020)' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' />
          </datasources>
          <datasource-dependencies datasource='federated.08g9a9x1aemi0u14e13gp1drqfsj'>
            <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[TOWN] + &quot;, &quot; + [ST]' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[ST]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Town' datatype='string' name='[TOWN]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
            <column-instance column='[Calculation_7344245107383533568]' derivation='None' name='[none:Calculation_7344245107383533568:nk]' pivot='key' type='nominal' />
            <column-instance column='[ST]' derivation='None' name='[none:ST:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOWN]' derivation='None' name='[none:TOWN:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIP]' derivation='None' name='[none:ZIP:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Week-Trunc' name='[twk:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]'>
            <groupfilter function='member' level='[none:Calculation_7344245107383533568:nk]' member='&quot;Tyngsboro, MA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]'>
            <groupfilter from='&quot;CT&quot;' function='range' level='[none:ST:nk]' to='&quot;NH&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;MA&quot;</bucket>
              <bucket>&quot;NH&quot;</bucket>
              <bucket>&quot;CT&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]'>
            <groupfilter from='#2020-03-01 00:00:00#' function='range' level='[twk:DATE:ok]' to='#2020-05-17 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ZIP:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[sum:Number of Records:qk]' shelf='rows'>
              <sort-filter-info>
                <sort-filter level-name='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]' member-value='#2020-03-01 00:00:00#' />
              </sort-filter-info>
            </shelf-sort-v2>
          </shelf-sorts>
          <slices>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</column>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</column>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk] / ([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk] / ([federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk] / [federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ZIP:nk])))</rows>
        <cols>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]</cols>
      </table>
      <simple-id uuid='{2B7547B5-6679-4045-8904-F3C6258EFC56}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet3 (Copy of FA20 Spring Travel Schedule for Digital Ads - February 12, 2019, 9_53 AM)' name='federated.0ut04ph059wvwb105ih4j1khw9pv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ut04ph059wvwb105ih4j1khw9pv'>
            <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Town] + &quot;, &quot; + [State]' />
            </column>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Town]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_7344245107383533568]' derivation='None' name='[none:Calculation_7344245107383533568:nk]' pivot='key' type='nominal' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Town]' derivation='None' name='[none:Town:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
              <groupfilter from='&quot;CT&quot;' function='range' level='[none:State:nk]' to='&quot;VT&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk]'>
            <groupfilter function='level-members' level='[none:Town:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk]</column>
            <column>[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0ut04ph059wvwb105ih4j1khw9pv].[none:State:nk] / ([federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk] / ([federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Calculation_7344245107383533568:nk] / [federated.0ut04ph059wvwb105ih4j1khw9pv].[none:County:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{47832B17-FB7A-43FC-BA29-2547A1FC750C}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='Master (SpringTravel2020)' name='federated.08g9a9x1aemi0u14e13gp1drqfsj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.08g9a9x1aemi0u14e13gp1drqfsj'>
            <column caption='City State' datatype='string' name='[Calculation_7344245107383533568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[TOWN] + &quot;, &quot; + [ST]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[ST]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Town' datatype='string' name='[TOWN]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[Calculation_7344245107383533568]' derivation='None' name='[none:Calculation_7344245107383533568:nk]' pivot='key' type='nominal' />
            <column-instance column='[ST]' derivation='None' name='[none:ST:nk]' pivot='key' type='nominal' />
            <column-instance column='[TOWN]' derivation='None' name='[none:TOWN:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]'>
            <groupfilter function='member' level='[none:Calculation_7344245107383533568:nk]' member='&quot;Billerica, MA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]'>
            <groupfilter function='member' level='[none:ST:nk]' member='&quot;MA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</column>
            <column>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Longitude (generated)]' field-type='quantitative' max='-6566847.4076472074' min='-8922108.4452079628' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Latitude (generated)]' field-type='quantitative' max='6397979.6724048089' min='4905089.0914401086' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[sum:Number of Records:qk]' />
              <color column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' />
              <lod column='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:TOWN:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Latitude (generated)]</rows>
        <cols>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C756684B-5E7F-42C0-8771-D7E925051DF0}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>FA21_SpringTravelAgenda&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FA21_Spring_Travel' name='federated.0vcsg5o1whb9541dxy5bo0rm52k9' />
          </datasources>
          <datasource-dependencies datasource='federated.0vcsg5o1whb9541dxy5bo0rm52k9'>
            <column caption='County State' datatype='string' name='[County_State]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[County_State]' derivation='None' name='[none:County_State:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:State:nk] / ([federated.0vcsg5o1whb9541dxy5bo0rm52k9].[twk:Date:ok] / [federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:County_State:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{DECAE40E-732F-46DE-950E-DE6370B0BBF1}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]</run>
            <run>&gt;  Spring Search Ads</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='MKT_output' name='federated.0ld2lnz1ff4gt611odja404yg1lv' />
          </datasources>
          <datasource-dependencies datasource='federated.0ld2lnz1ff4gt611odja404yg1lv'>
            <column caption='Bounce Rate' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Bounces])) / (SUM([Master_Sessions]))' />
            </column>
            <column caption='Average Time on Page' datatype='real' datatype-customized='true' default-format='*HH:MM:SS' name='[Calculation_-4401424142514929662]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_-4401424142515732479]/ 86400' />
            </column>
            <column caption='Step 1' datatype='real' datatype-customized='true' name='[Calculation_-4401424142515732479]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(sum([Master_Time_On_Page]))/((sum([Master_Pageviews]))- (sum([Master_Exits])))' />
            </column>
            <column caption='CTR' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_3640878829637640192]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Master_Clicks]))/(SUM([Master_Impressions]))' />
            </column>
            <column caption='Code Audience' datatype='string' name='[Code_Audience]' role='dimension' type='nominal' />
            <column caption='Code Medium' datatype='string' name='[Code_Medium]' role='dimension' type='nominal' />
            <column caption='Code RecruitingPeriod' datatype='string' name='[Code_RecruitingPeriod]' role='dimension' type='nominal' />
            <column caption='Code Vendor' datatype='string' name='[Code_Vendor]' role='dimension' type='nominal' />
            <column caption='Master Bounces' datatype='integer' name='[Master_Bounces]' role='measure' type='quantitative' />
            <column caption='Master Clicks' datatype='integer' name='[Master_Clicks]' role='measure' type='quantitative' />
            <column caption='Master Cost' datatype='real' default-format='C1033%' name='[Master_Cost]' role='measure' type='quantitative' />
            <column caption='Master Date' datatype='date' name='[Master_Date]' role='dimension' type='ordinal' />
            <column caption='Master Exits' datatype='integer' name='[Master_Exits]' role='measure' type='quantitative' />
            <column caption='Master Impressions' datatype='integer' name='[Master_Impressions]' role='measure' type='quantitative' />
            <column caption='Master Pageviews' datatype='integer' name='[Master_Pageviews]' role='measure' type='quantitative' />
            <column caption='Master Sessions' datatype='integer' name='[Master_Sessions]' role='measure' type='quantitative' />
            <column caption='Master Time On Page' datatype='integer' name='[Master_Time_On_Page]' role='measure' type='quantitative' />
            <column caption='Master Unique Pageviews' datatype='integer' name='[Master_Unique_Pageviews]' role='measure' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='Month' name='[mn:Master_Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Code_Audience]' derivation='None' name='[none:Code_Audience:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Medium]' derivation='None' name='[none:Code_Medium:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_RecruitingPeriod]' derivation='None' name='[none:Code_RecruitingPeriod:nk]' pivot='key' type='nominal' />
            <column-instance column='[Code_Vendor]' derivation='None' name='[none:Code_Vendor:nk]' pivot='key' type='nominal' />
            <column-instance column='[Master_Cost]' derivation='Sum' name='[sum:Master_Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Impressions]' derivation='Sum' name='[sum:Master_Impressions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Unique_Pageviews]' derivation='Sum' name='[sum:Master_Unique_Pageviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_-4401424142514929662]' derivation='User' name='[usr:Calculation_-4401424142514929662:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3640878829637640192]' derivation='User' name='[usr:Calculation_3640878829637640192:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Master_Date]' derivation='Year' name='[yr:Master_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Impressions:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_3640878829637640192:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[sum:Master_Unique_Pageviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation1:qk]&quot;</bucket>
              <bucket>&quot;[federated.0ld2lnz1ff4gt611odja404yg1lv].[usr:Calculation_-4401424142514929662:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[mn:Master_Date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Master_Date:ok]' member='6' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]'>
            <groupfilter function='member' level='[none:Code_Audience:nk]' member='&quot;TL&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]'>
            <groupfilter function='level-members' level='[none:Code_RecruitingPeriod:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]'>
            <groupfilter function='member' level='[yr:Master_Date:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Audience:nk]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[mn:Master_Date:ok]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[yr:Master_Date:ok]</column>
            <column>[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0ld2lnz1ff4gt611odja404yg1lv].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk] / ([federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Medium:nk] / [federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]))</rows>
        <cols>[federated.0ld2lnz1ff4gt611odja404yg1lv].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E64C22A0-36D5-468C-9991-105C8C6B86DB}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
                <bin default-name='false' value='&quot;In Market&quot;'>
                  <value>#2017-03-01#</value>
                  <value>#2017-03-02#</value>
                  <value>#2017-03-03#</value>
                  <value>#2017-03-04#</value>
                  <value>#2017-03-05#</value>
                  <value>#2017-03-06#</value>
                  <value>#2017-03-07#</value>
                  <value>#2017-03-08#</value>
                  <value>#2017-03-09#</value>
                  <value>#2017-03-10#</value>
                  <value>#2017-03-11#</value>
                  <value>#2017-03-12#</value>
                  <value>#2017-03-13#</value>
                  <value>#2017-03-14#</value>
                  <value>#2017-03-15#</value>
                  <value>#2017-03-16#</value>
                  <value>#2017-03-17#</value>
                  <value>#2017-03-18#</value>
                  <value>#2017-03-19#</value>
                  <value>#2017-03-20#</value>
                  <value>#2017-03-21#</value>
                  <value>#2017-03-22#</value>
                  <value>#2017-03-23#</value>
                  <value>#2017-03-24#</value>
                  <value>#2017-03-25#</value>
                  <value>#2017-03-27#</value>
                  <value>#2017-03-28#</value>
                  <value>#2017-03-29#</value>
                  <value>#2017-03-30#</value>
                  <value>#2017-03-31#</value>
                  <value>#2017-04-01#</value>
                  <value>#2017-04-02#</value>
                  <value>#2017-04-03#</value>
                  <value>#2017-04-04#</value>
                  <value>#2017-04-05#</value>
                  <value>#2017-04-06#</value>
                  <value>#2017-04-07#</value>
                  <value>#2017-04-09#</value>
                  <value>#2017-04-10#</value>
                  <value>#2017-04-11#</value>
                  <value>#2017-04-12#</value>
                  <value>#2017-04-13#</value>
                  <value>#2017-04-14#</value>
                  <value>#2017-04-15#</value>
                  <value>#2017-04-16#</value>
                  <value>#2017-04-17#</value>
                  <value>#2017-04-18#</value>
                  <value>#2017-04-19#</value>
                  <value>#2017-04-20#</value>
                  <value>#2017-04-21#</value>
                  <value>#2017-04-22#</value>
                  <value>#2017-04-24#</value>
                  <value>#2017-04-25#</value>
                  <value>#2017-04-26#</value>
                  <value>#2017-04-27#</value>
                  <value>#2017-04-28#</value>
                  <value>#2017-04-30#</value>
                  <value>#2017-05-01#</value>
                  <value>#2017-05-02#</value>
                  <value>#2017-05-03#</value>
                  <value>#2017-05-04#</value>
                  <value>#2017-05-05#</value>
                  <value>#2017-05-06#</value>
                  <value>#2017-05-07#</value>
                  <value>#2017-05-08#</value>
                  <value>#2017-05-09#</value>
                  <value>#2017-05-10#</value>
                  <value>#2017-05-11#</value>
                  <value>#2017-05-15#</value>
                  <value>#2017-05-16#</value>
                  <value>#2017-05-17#</value>
                  <value>#2017-05-18#</value>
                  <value>#2017-05-19#</value>
                  <value>#2017-05-21#</value>
                  <value>#2017-05-22#</value>
                  <value>#2017-05-23#</value>
                  <value>#2017-05-24#</value>
                  <value>#2017-05-26#</value>
                  <value>#2017-05-27#</value>
                  <value>#2017-05-28#</value>
                  <value>#2017-05-30#</value>
                  <value>#2017-05-31#</value>
                  <value>#2017-06-02#</value>
                  <value>#2017-06-05#</value>
                  <value>#2017-06-06#</value>
                  <value>#2017-06-07#</value>
                  <value>#2017-06-08#</value>
                  <value>#2017-06-09#</value>
                  <value>#2017-06-10#</value>
                  <value>#2017-06-12#</value>
                  <value>#2017-06-13#</value>
                  <value>#2017-06-14#</value>
                  <value>#2017-06-15#</value>
                  <value>#2018-03-01#</value>
                  <value>#2018-03-02#</value>
                  <value>#2018-03-03#</value>
                  <value>#2018-03-04#</value>
                  <value>#2018-03-05#</value>
                  <value>#2018-03-06#</value>
                  <value>#2018-03-07#</value>
                  <value>#2018-03-08#</value>
                  <value>#2018-03-10#</value>
                  <value>#2018-03-11#</value>
                  <value>#2018-03-12#</value>
                  <value>#2018-03-13#</value>
                  <value>#2018-03-14#</value>
                  <value>#2018-03-15#</value>
                  <value>#2018-03-16#</value>
                  <value>#2018-03-17#</value>
                  <value>#2018-03-18#</value>
                  <value>#2018-03-19#</value>
                  <value>#2018-03-20#</value>
                  <value>#2018-03-21#</value>
                  <value>#2018-03-22#</value>
                  <value>#2018-03-23#</value>
                  <value>#2018-03-24#</value>
                  <value>#2018-03-25#</value>
                  <value>#2018-03-26#</value>
                  <value>#2018-03-27#</value>
                  <value>#2018-03-28#</value>
                  <value>#2018-03-29#</value>
                  <value>#2018-03-30#</value>
                  <value>#2018-03-31#</value>
                  <value>#2018-04-01#</value>
                  <value>#2018-04-02#</value>
                  <value>#2018-04-03#</value>
                  <value>#2018-04-04#</value>
                  <value>#2018-04-05#</value>
                  <value>#2018-04-06#</value>
                  <value>#2018-04-07#</value>
                  <value>#2018-04-08#</value>
                  <value>#2018-04-09#</value>
                  <value>#2018-04-10#</value>
                  <value>#2018-04-11#</value>
                  <value>#2018-04-12#</value>
                  <value>#2018-04-13#</value>
                  <value>#2018-04-14#</value>
                  <value>#2018-04-15#</value>
                  <value>#2018-04-16#</value>
                  <value>#2018-04-17#</value>
                  <value>#2018-04-18#</value>
                  <value>#2018-04-19#</value>
                  <value>#2018-04-20#</value>
                  <value>#2018-04-21#</value>
                  <value>#2018-04-22#</value>
                  <value>#2018-04-23#</value>
                  <value>#2018-04-24#</value>
                  <value>#2018-04-25#</value>
                  <value>#2018-04-26#</value>
                  <value>#2018-04-27#</value>
                  <value>#2018-04-28#</value>
                  <value>#2018-04-29#</value>
                  <value>#2018-04-30#</value>
                  <value>#2018-05-01#</value>
                  <value>#2018-05-02#</value>
                  <value>#2018-05-03#</value>
                  <value>#2018-05-04#</value>
                  <value>#2018-05-05#</value>
                  <value>#2018-05-07#</value>
                  <value>#2018-05-08#</value>
                  <value>#2018-05-09#</value>
                  <value>#2018-05-10#</value>
                  <value>#2018-05-11#</value>
                  <value>#2018-05-12#</value>
                  <value>#2018-05-14#</value>
                  <value>#2018-05-15#</value>
                  <value>#2018-05-16#</value>
                  <value>#2018-05-17#</value>
                  <value>#2018-05-18#</value>
                  <value>#2018-05-19#</value>
                  <value>#2018-05-20#</value>
                  <value>#2018-05-21#</value>
                  <value>#2018-05-22#</value>
                  <value>#2018-05-23#</value>
                  <value>#2018-05-24#</value>
                  <value>#2018-05-25#</value>
                  <value>#2018-05-27#</value>
                  <value>#2018-05-29#</value>
                  <value>#2018-05-30#</value>
                  <value>#2018-05-31#</value>
                  <value>#2018-06-01#</value>
                  <value>#2018-06-04#</value>
                  <value>#2018-06-05#</value>
                  <value>#2018-06-06#</value>
                  <value>#2018-06-07#</value>
                  <value>#2018-06-08#</value>
                  <value>#2018-06-10#</value>
                  <value>#2018-06-11#</value>
                  <value>#2018-06-12#</value>
                  <value>#2018-06-13#</value>
                  <value>#2018-06-14#</value>
                  <value>#2018-06-15#</value>
                  <value>#2019-03-11#</value>
                  <value>#2019-03-12#</value>
                  <value>#2019-03-13#</value>
                  <value>#2019-03-14#</value>
                  <value>#2019-03-15#</value>
                  <value>#2019-03-16#</value>
                  <value>#2019-03-17#</value>
                  <value>#2019-03-18#</value>
                  <value>#2019-03-19#</value>
                  <value>#2019-03-20#</value>
                  <value>#2019-03-21#</value>
                  <value>#2019-03-22#</value>
                  <value>#2019-03-23#</value>
                  <value>#2019-03-24#</value>
                  <value>#2019-03-25#</value>
                  <value>#2019-03-26#</value>
                  <value>#2019-03-27#</value>
                  <value>#2019-03-28#</value>
                  <value>#2019-03-29#</value>
                  <value>#2019-03-30#</value>
                  <value>#2019-03-31#</value>
                  <value>#2019-04-01#</value>
                  <value>#2019-04-02#</value>
                  <value>#2019-04-03#</value>
                  <value>#2019-04-04#</value>
                  <value>#2019-04-05#</value>
                  <value>#2019-04-06#</value>
                  <value>#2019-04-07#</value>
                  <value>#2019-04-08#</value>
                  <value>#2019-04-09#</value>
                  <value>#2019-04-10#</value>
                  <value>#2019-04-11#</value>
                  <value>#2019-04-12#</value>
                  <value>#2019-04-13#</value>
                  <value>#2019-04-14#</value>
                  <value>#2019-04-15#</value>
                  <value>#2019-04-16#</value>
                  <value>#2019-04-17#</value>
                  <value>#2019-04-18#</value>
                  <value>#2019-04-19#</value>
                  <value>#2019-04-20#</value>
                  <value>#2019-04-21#</value>
                  <value>#2019-04-22#</value>
                  <value>#2019-04-23#</value>
                  <value>#2019-04-24#</value>
                  <value>#2019-04-25#</value>
                  <value>#2019-04-26#</value>
                  <value>#2019-04-27#</value>
                  <value>#2019-04-28#</value>
                  <value>#2019-04-29#</value>
                  <value>#2019-04-30#</value>
                  <value>#2019-05-01#</value>
                  <value>#2019-05-02#</value>
                  <value>#2019-05-03#</value>
                  <value>#2019-05-04#</value>
                  <value>#2019-05-05#</value>
                  <value>#2019-05-06#</value>
                  <value>#2019-05-07#</value>
                  <value>#2019-05-08#</value>
                  <value>#2019-05-09#</value>
                  <value>#2019-05-10#</value>
                  <value>#2019-05-11#</value>
                  <value>#2019-05-12#</value>
                  <value>#2019-05-13#</value>
                  <value>#2019-05-14#</value>
                  <value>#2019-05-15#</value>
                  <value>#2019-05-16#</value>
                  <value>#2019-05-17#</value>
                  <value>#2019-05-18#</value>
                  <value>#2019-05-19#</value>
                  <value>#2019-05-20#</value>
                  <value>#2019-05-21#</value>
                  <value>#2019-05-22#</value>
                  <value>#2019-05-23#</value>
                  <value>#2019-05-24#</value>
                  <value>#2019-05-25#</value>
                  <value>#2019-05-26#</value>
                  <value>#2019-05-27#</value>
                  <value>#2019-05-28#</value>
                  <value>#2019-05-29#</value>
                  <value>#2019-05-30#</value>
                  <value>#2019-05-31#</value>
                  <value>#2019-06-01#</value>
                  <value>#2019-06-02#</value>
                  <value>#2019-06-03#</value>
                  <value>#2019-06-04#</value>
                  <value>#2019-06-05#</value>
                  <value>#2019-06-06#</value>
                  <value>#2019-06-07#</value>
                  <value>#2019-06-08#</value>
                  <value>#2019-06-09#</value>
                  <value>#2019-06-10#</value>
                  <value>#2019-06-11#</value>
                  <value>#2019-06-12#</value>
                  <value>#2019-06-13#</value>
                  <value>#2019-06-14#</value>
                  <value>#2019-06-15#</value>
                </bin>
                <bin default-name='false' value='&quot;Out of Market&quot;'>
                  <value>%null%</value>
                  <value>#2017-01-01#</value>
                  <value>#2017-01-02#</value>
                  <value>#2017-01-03#</value>
                  <value>#2017-01-04#</value>
                  <value>#2017-01-05#</value>
                  <value>#2017-01-06#</value>
                  <value>#2017-01-07#</value>
                  <value>#2017-01-08#</value>
                  <value>#2017-01-09#</value>
                  <value>#2017-01-10#</value>
                  <value>#2017-01-11#</value>
                  <value>#2017-01-12#</value>
                  <value>#2017-01-13#</value>
                  <value>#2017-01-14#</value>
                  <value>#2017-01-15#</value>
                  <value>#2017-01-16#</value>
                  <value>#2017-01-17#</value>
                  <value>#2017-01-18#</value>
                  <value>#2017-01-19#</value>
                  <value>#2017-01-20#</value>
                  <value>#2017-01-21#</value>
                  <value>#2017-01-22#</value>
                  <value>#2017-01-23#</value>
                  <value>#2017-01-24#</value>
                  <value>#2017-01-25#</value>
                  <value>#2017-01-26#</value>
                  <value>#2017-01-27#</value>
                  <value>#2017-01-28#</value>
                  <value>#2017-01-29#</value>
                  <value>#2017-01-30#</value>
                  <value>#2017-01-31#</value>
                  <value>#2017-02-01#</value>
                  <value>#2017-02-02#</value>
                  <value>#2017-02-03#</value>
                  <value>#2017-02-04#</value>
                  <value>#2017-02-05#</value>
                  <value>#2017-02-06#</value>
                  <value>#2017-02-07#</value>
                  <value>#2017-02-08#</value>
                  <value>#2017-02-10#</value>
                  <value>#2017-02-11#</value>
                  <value>#2017-02-12#</value>
                  <value>#2017-02-13#</value>
                  <value>#2017-02-14#</value>
                  <value>#2017-02-15#</value>
                  <value>#2017-02-16#</value>
                  <value>#2017-02-17#</value>
                  <value>#2017-02-19#</value>
                  <value>#2017-02-20#</value>
                  <value>#2017-02-21#</value>
                  <value>#2017-02-22#</value>
                  <value>#2017-02-23#</value>
                  <value>#2017-02-24#</value>
                  <value>#2017-02-25#</value>
                  <value>#2017-02-26#</value>
                  <value>#2017-02-27#</value>
                  <value>#2017-02-28#</value>
                  <value>#2018-01-01#</value>
                  <value>#2018-01-02#</value>
                  <value>#2018-01-03#</value>
                  <value>#2018-01-05#</value>
                  <value>#2018-01-06#</value>
                  <value>#2018-01-07#</value>
                  <value>#2018-01-08#</value>
                  <value>#2018-01-09#</value>
                  <value>#2018-01-10#</value>
                  <value>#2018-01-11#</value>
                  <value>#2018-01-12#</value>
                  <value>#2018-01-14#</value>
                  <value>#2018-01-15#</value>
                  <value>#2018-01-16#</value>
                  <value>#2018-01-17#</value>
                  <value>#2018-01-18#</value>
                  <value>#2018-01-19#</value>
                  <value>#2018-01-20#</value>
                  <value>#2018-01-21#</value>
                  <value>#2018-01-22#</value>
                  <value>#2018-01-23#</value>
                  <value>#2018-01-24#</value>
                  <value>#2018-01-25#</value>
                  <value>#2018-01-26#</value>
                  <value>#2018-01-27#</value>
                  <value>#2018-01-28#</value>
                  <value>#2018-01-29#</value>
                  <value>#2018-01-30#</value>
                  <value>#2018-01-31#</value>
                  <value>#2018-02-01#</value>
                  <value>#2018-02-02#</value>
                  <value>#2018-02-03#</value>
                  <value>#2018-02-04#</value>
                  <value>#2018-02-05#</value>
                  <value>#2018-02-06#</value>
                  <value>#2018-02-07#</value>
                  <value>#2018-02-08#</value>
                  <value>#2018-02-09#</value>
                  <value>#2018-02-10#</value>
                  <value>#2018-02-12#</value>
                  <value>#2018-02-13#</value>
                  <value>#2018-02-14#</value>
                  <value>#2018-02-15#</value>
                  <value>#2018-02-16#</value>
                  <value>#2018-02-17#</value>
                  <value>#2018-02-18#</value>
                  <value>#2018-02-20#</value>
                  <value>#2018-02-21#</value>
                  <value>#2018-02-22#</value>
                  <value>#2018-02-23#</value>
                  <value>#2018-02-24#</value>
                  <value>#2018-02-25#</value>
                  <value>#2018-02-26#</value>
                  <value>#2018-02-28#</value>
                  <value>#2019-01-01#</value>
                  <value>#2019-01-02#</value>
                  <value>#2019-01-03#</value>
                  <value>#2019-01-04#</value>
                  <value>#2019-01-05#</value>
                  <value>#2019-01-06#</value>
                  <value>#2019-01-07#</value>
                  <value>#2019-01-08#</value>
                  <value>#2019-01-09#</value>
                  <value>#2019-01-10#</value>
                  <value>#2019-01-11#</value>
                  <value>#2019-01-12#</value>
                  <value>#2019-01-13#</value>
                  <value>#2019-01-14#</value>
                  <value>#2019-01-15#</value>
                  <value>#2019-01-16#</value>
                  <value>#2019-01-17#</value>
                  <value>#2019-01-18#</value>
                  <value>#2019-01-19#</value>
                  <value>#2019-01-20#</value>
                  <value>#2019-01-21#</value>
                  <value>#2019-01-22#</value>
                  <value>#2019-01-23#</value>
                  <value>#2019-01-24#</value>
                  <value>#2019-01-25#</value>
                  <value>#2019-01-26#</value>
                  <value>#2019-01-27#</value>
                  <value>#2019-01-28#</value>
                  <value>#2019-01-29#</value>
                  <value>#2019-01-30#</value>
                  <value>#2019-01-31#</value>
                  <value>#2019-02-01#</value>
                  <value>#2019-02-02#</value>
                  <value>#2019-02-03#</value>
                  <value>#2019-02-04#</value>
                  <value>#2019-02-05#</value>
                  <value>#2019-02-06#</value>
                  <value>#2019-02-07#</value>
                  <value>#2019-02-08#</value>
                  <value>#2019-02-09#</value>
                  <value>#2019-02-10#</value>
                  <value>#2019-02-11#</value>
                  <value>#2019-02-12#</value>
                  <value>#2019-02-13#</value>
                  <value>#2019-02-14#</value>
                  <value>#2019-02-15#</value>
                  <value>#2019-02-16#</value>
                  <value>#2019-02-17#</value>
                  <value>#2019-02-18#</value>
                  <value>#2019-02-19#</value>
                  <value>#2019-02-20#</value>
                  <value>#2019-02-21#</value>
                  <value>#2019-02-22#</value>
                  <value>#2019-02-23#</value>
                  <value>#2019-02-24#</value>
                  <value>#2019-02-25#</value>
                  <value>#2019-02-26#</value>
                  <value>#2019-02-27#</value>
                  <value>#2019-02-28#</value>
                  <value>#2019-03-01#</value>
                  <value>#2019-03-02#</value>
                  <value>#2019-03-03#</value>
                  <value>#2019-03-04#</value>
                  <value>#2019-03-05#</value>
                  <value>#2019-03-06#</value>
                  <value>#2019-03-07#</value>
                  <value>#2019-03-08#</value>
                  <value>#2019-03-09#</value>
                  <value>#2019-03-10#</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary City]' derivation='None' name='[none:Primary City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]'>
            <groupfilter function='member' level='[Run Time]' member='&quot;In Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Vermont&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]' field-type='quantitative' max='-7641859.2513578646' min='-8498897.885974668' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]' field-type='quantitative' max='5755923.5537957689' min='5250472.6637748862' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]</rows>
        <cols>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{24FA6E1F-1983-4676-AC8C-EAF9EFB00AFA}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2019 Targeted Areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
                <bin default-name='false' value='&quot;In Market&quot;'>
                  <value>#2017-03-01#</value>
                  <value>#2017-03-02#</value>
                  <value>#2017-03-03#</value>
                  <value>#2017-03-04#</value>
                  <value>#2017-03-05#</value>
                  <value>#2017-03-06#</value>
                  <value>#2017-03-07#</value>
                  <value>#2017-03-08#</value>
                  <value>#2017-03-09#</value>
                  <value>#2017-03-10#</value>
                  <value>#2017-03-11#</value>
                  <value>#2017-03-12#</value>
                  <value>#2017-03-13#</value>
                  <value>#2017-03-14#</value>
                  <value>#2017-03-15#</value>
                  <value>#2017-03-16#</value>
                  <value>#2017-03-17#</value>
                  <value>#2017-03-18#</value>
                  <value>#2017-03-19#</value>
                  <value>#2017-03-20#</value>
                  <value>#2017-03-21#</value>
                  <value>#2017-03-22#</value>
                  <value>#2017-03-23#</value>
                  <value>#2017-03-24#</value>
                  <value>#2017-03-25#</value>
                  <value>#2017-03-27#</value>
                  <value>#2017-03-28#</value>
                  <value>#2017-03-29#</value>
                  <value>#2017-03-30#</value>
                  <value>#2017-03-31#</value>
                  <value>#2017-04-01#</value>
                  <value>#2017-04-02#</value>
                  <value>#2017-04-03#</value>
                  <value>#2017-04-04#</value>
                  <value>#2017-04-05#</value>
                  <value>#2017-04-06#</value>
                  <value>#2017-04-07#</value>
                  <value>#2017-04-09#</value>
                  <value>#2017-04-10#</value>
                  <value>#2017-04-11#</value>
                  <value>#2017-04-12#</value>
                  <value>#2017-04-13#</value>
                  <value>#2017-04-14#</value>
                  <value>#2017-04-15#</value>
                  <value>#2017-04-16#</value>
                  <value>#2017-04-17#</value>
                  <value>#2017-04-18#</value>
                  <value>#2017-04-19#</value>
                  <value>#2017-04-20#</value>
                  <value>#2017-04-21#</value>
                  <value>#2017-04-22#</value>
                  <value>#2017-04-24#</value>
                  <value>#2017-04-25#</value>
                  <value>#2017-04-26#</value>
                  <value>#2017-04-27#</value>
                  <value>#2017-04-28#</value>
                  <value>#2017-04-30#</value>
                  <value>#2017-05-01#</value>
                  <value>#2017-05-02#</value>
                  <value>#2017-05-03#</value>
                  <value>#2017-05-04#</value>
                  <value>#2017-05-05#</value>
                  <value>#2017-05-06#</value>
                  <value>#2017-05-07#</value>
                  <value>#2017-05-08#</value>
                  <value>#2017-05-09#</value>
                  <value>#2017-05-10#</value>
                  <value>#2017-05-11#</value>
                  <value>#2017-05-15#</value>
                  <value>#2017-05-16#</value>
                  <value>#2017-05-17#</value>
                  <value>#2017-05-18#</value>
                  <value>#2017-05-19#</value>
                  <value>#2017-05-21#</value>
                  <value>#2017-05-22#</value>
                  <value>#2017-05-23#</value>
                  <value>#2017-05-24#</value>
                  <value>#2017-05-26#</value>
                  <value>#2017-05-27#</value>
                  <value>#2017-05-28#</value>
                  <value>#2017-05-30#</value>
                  <value>#2017-05-31#</value>
                  <value>#2017-06-02#</value>
                  <value>#2017-06-05#</value>
                  <value>#2017-06-06#</value>
                  <value>#2017-06-07#</value>
                  <value>#2017-06-08#</value>
                  <value>#2017-06-09#</value>
                  <value>#2017-06-10#</value>
                  <value>#2017-06-12#</value>
                  <value>#2017-06-13#</value>
                  <value>#2017-06-14#</value>
                  <value>#2017-06-15#</value>
                  <value>#2018-03-01#</value>
                  <value>#2018-03-02#</value>
                  <value>#2018-03-03#</value>
                  <value>#2018-03-04#</value>
                  <value>#2018-03-05#</value>
                  <value>#2018-03-06#</value>
                  <value>#2018-03-07#</value>
                  <value>#2018-03-08#</value>
                  <value>#2018-03-10#</value>
                  <value>#2018-03-11#</value>
                  <value>#2018-03-12#</value>
                  <value>#2018-03-13#</value>
                  <value>#2018-03-14#</value>
                  <value>#2018-03-15#</value>
                  <value>#2018-03-16#</value>
                  <value>#2018-03-17#</value>
                  <value>#2018-03-18#</value>
                  <value>#2018-03-19#</value>
                  <value>#2018-03-20#</value>
                  <value>#2018-03-21#</value>
                  <value>#2018-03-22#</value>
                  <value>#2018-03-23#</value>
                  <value>#2018-03-24#</value>
                  <value>#2018-03-25#</value>
                  <value>#2018-03-26#</value>
                  <value>#2018-03-27#</value>
                  <value>#2018-03-28#</value>
                  <value>#2018-03-29#</value>
                  <value>#2018-03-30#</value>
                  <value>#2018-03-31#</value>
                  <value>#2018-04-01#</value>
                  <value>#2018-04-02#</value>
                  <value>#2018-04-03#</value>
                  <value>#2018-04-04#</value>
                  <value>#2018-04-05#</value>
                  <value>#2018-04-06#</value>
                  <value>#2018-04-07#</value>
                  <value>#2018-04-08#</value>
                  <value>#2018-04-09#</value>
                  <value>#2018-04-10#</value>
                  <value>#2018-04-11#</value>
                  <value>#2018-04-12#</value>
                  <value>#2018-04-13#</value>
                  <value>#2018-04-14#</value>
                  <value>#2018-04-15#</value>
                  <value>#2018-04-16#</value>
                  <value>#2018-04-17#</value>
                  <value>#2018-04-18#</value>
                  <value>#2018-04-19#</value>
                  <value>#2018-04-20#</value>
                  <value>#2018-04-21#</value>
                  <value>#2018-04-22#</value>
                  <value>#2018-04-23#</value>
                  <value>#2018-04-24#</value>
                  <value>#2018-04-25#</value>
                  <value>#2018-04-26#</value>
                  <value>#2018-04-27#</value>
                  <value>#2018-04-28#</value>
                  <value>#2018-04-29#</value>
                  <value>#2018-04-30#</value>
                  <value>#2018-05-01#</value>
                  <value>#2018-05-02#</value>
                  <value>#2018-05-03#</value>
                  <value>#2018-05-04#</value>
                  <value>#2018-05-05#</value>
                  <value>#2018-05-07#</value>
                  <value>#2018-05-08#</value>
                  <value>#2018-05-09#</value>
                  <value>#2018-05-10#</value>
                  <value>#2018-05-11#</value>
                  <value>#2018-05-12#</value>
                  <value>#2018-05-14#</value>
                  <value>#2018-05-15#</value>
                  <value>#2018-05-16#</value>
                  <value>#2018-05-17#</value>
                  <value>#2018-05-18#</value>
                  <value>#2018-05-19#</value>
                  <value>#2018-05-20#</value>
                  <value>#2018-05-21#</value>
                  <value>#2018-05-22#</value>
                  <value>#2018-05-23#</value>
                  <value>#2018-05-24#</value>
                  <value>#2018-05-25#</value>
                  <value>#2018-05-27#</value>
                  <value>#2018-05-29#</value>
                  <value>#2018-05-30#</value>
                  <value>#2018-05-31#</value>
                  <value>#2018-06-01#</value>
                  <value>#2018-06-04#</value>
                  <value>#2018-06-05#</value>
                  <value>#2018-06-06#</value>
                  <value>#2018-06-07#</value>
                  <value>#2018-06-08#</value>
                  <value>#2018-06-10#</value>
                  <value>#2018-06-11#</value>
                  <value>#2018-06-12#</value>
                  <value>#2018-06-13#</value>
                  <value>#2018-06-14#</value>
                  <value>#2018-06-15#</value>
                  <value>#2019-03-11#</value>
                  <value>#2019-03-12#</value>
                  <value>#2019-03-13#</value>
                  <value>#2019-03-14#</value>
                  <value>#2019-03-15#</value>
                  <value>#2019-03-16#</value>
                  <value>#2019-03-17#</value>
                  <value>#2019-03-18#</value>
                  <value>#2019-03-19#</value>
                  <value>#2019-03-20#</value>
                  <value>#2019-03-21#</value>
                  <value>#2019-03-22#</value>
                  <value>#2019-03-23#</value>
                  <value>#2019-03-24#</value>
                  <value>#2019-03-25#</value>
                  <value>#2019-03-26#</value>
                  <value>#2019-03-27#</value>
                  <value>#2019-03-28#</value>
                  <value>#2019-03-29#</value>
                  <value>#2019-03-30#</value>
                  <value>#2019-03-31#</value>
                  <value>#2019-04-01#</value>
                  <value>#2019-04-02#</value>
                  <value>#2019-04-03#</value>
                  <value>#2019-04-04#</value>
                  <value>#2019-04-05#</value>
                  <value>#2019-04-06#</value>
                  <value>#2019-04-07#</value>
                  <value>#2019-04-08#</value>
                  <value>#2019-04-09#</value>
                  <value>#2019-04-10#</value>
                  <value>#2019-04-11#</value>
                  <value>#2019-04-12#</value>
                  <value>#2019-04-13#</value>
                  <value>#2019-04-14#</value>
                  <value>#2019-04-15#</value>
                  <value>#2019-04-16#</value>
                  <value>#2019-04-17#</value>
                  <value>#2019-04-18#</value>
                  <value>#2019-04-19#</value>
                  <value>#2019-04-20#</value>
                  <value>#2019-04-21#</value>
                  <value>#2019-04-22#</value>
                  <value>#2019-04-23#</value>
                  <value>#2019-04-24#</value>
                  <value>#2019-04-25#</value>
                  <value>#2019-04-26#</value>
                  <value>#2019-04-27#</value>
                  <value>#2019-04-28#</value>
                  <value>#2019-04-29#</value>
                  <value>#2019-04-30#</value>
                  <value>#2019-05-01#</value>
                  <value>#2019-05-02#</value>
                  <value>#2019-05-03#</value>
                  <value>#2019-05-04#</value>
                  <value>#2019-05-05#</value>
                  <value>#2019-05-06#</value>
                  <value>#2019-05-07#</value>
                  <value>#2019-05-08#</value>
                  <value>#2019-05-09#</value>
                  <value>#2019-05-10#</value>
                  <value>#2019-05-11#</value>
                  <value>#2019-05-12#</value>
                  <value>#2019-05-13#</value>
                  <value>#2019-05-14#</value>
                  <value>#2019-05-15#</value>
                  <value>#2019-05-16#</value>
                  <value>#2019-05-17#</value>
                  <value>#2019-05-18#</value>
                  <value>#2019-05-19#</value>
                  <value>#2019-05-20#</value>
                  <value>#2019-05-21#</value>
                  <value>#2019-05-22#</value>
                  <value>#2019-05-23#</value>
                  <value>#2019-05-24#</value>
                  <value>#2019-05-25#</value>
                  <value>#2019-05-26#</value>
                  <value>#2019-05-27#</value>
                  <value>#2019-05-28#</value>
                  <value>#2019-05-29#</value>
                  <value>#2019-05-30#</value>
                  <value>#2019-05-31#</value>
                  <value>#2019-06-01#</value>
                  <value>#2019-06-02#</value>
                  <value>#2019-06-03#</value>
                  <value>#2019-06-04#</value>
                  <value>#2019-06-05#</value>
                  <value>#2019-06-06#</value>
                  <value>#2019-06-07#</value>
                  <value>#2019-06-08#</value>
                  <value>#2019-06-09#</value>
                  <value>#2019-06-10#</value>
                  <value>#2019-06-11#</value>
                  <value>#2019-06-12#</value>
                  <value>#2019-06-13#</value>
                  <value>#2019-06-14#</value>
                  <value>#2019-06-15#</value>
                </bin>
                <bin default-name='false' value='&quot;Out of Market&quot;'>
                  <value>%null%</value>
                  <value>#2017-01-01#</value>
                  <value>#2017-01-02#</value>
                  <value>#2017-01-03#</value>
                  <value>#2017-01-04#</value>
                  <value>#2017-01-05#</value>
                  <value>#2017-01-06#</value>
                  <value>#2017-01-07#</value>
                  <value>#2017-01-08#</value>
                  <value>#2017-01-09#</value>
                  <value>#2017-01-10#</value>
                  <value>#2017-01-11#</value>
                  <value>#2017-01-12#</value>
                  <value>#2017-01-13#</value>
                  <value>#2017-01-14#</value>
                  <value>#2017-01-15#</value>
                  <value>#2017-01-16#</value>
                  <value>#2017-01-17#</value>
                  <value>#2017-01-18#</value>
                  <value>#2017-01-19#</value>
                  <value>#2017-01-20#</value>
                  <value>#2017-01-21#</value>
                  <value>#2017-01-22#</value>
                  <value>#2017-01-23#</value>
                  <value>#2017-01-24#</value>
                  <value>#2017-01-25#</value>
                  <value>#2017-01-26#</value>
                  <value>#2017-01-27#</value>
                  <value>#2017-01-28#</value>
                  <value>#2017-01-29#</value>
                  <value>#2017-01-30#</value>
                  <value>#2017-01-31#</value>
                  <value>#2017-02-01#</value>
                  <value>#2017-02-02#</value>
                  <value>#2017-02-03#</value>
                  <value>#2017-02-04#</value>
                  <value>#2017-02-05#</value>
                  <value>#2017-02-06#</value>
                  <value>#2017-02-07#</value>
                  <value>#2017-02-08#</value>
                  <value>#2017-02-10#</value>
                  <value>#2017-02-11#</value>
                  <value>#2017-02-12#</value>
                  <value>#2017-02-13#</value>
                  <value>#2017-02-14#</value>
                  <value>#2017-02-15#</value>
                  <value>#2017-02-16#</value>
                  <value>#2017-02-17#</value>
                  <value>#2017-02-19#</value>
                  <value>#2017-02-20#</value>
                  <value>#2017-02-21#</value>
                  <value>#2017-02-22#</value>
                  <value>#2017-02-23#</value>
                  <value>#2017-02-24#</value>
                  <value>#2017-02-25#</value>
                  <value>#2017-02-26#</value>
                  <value>#2017-02-27#</value>
                  <value>#2017-02-28#</value>
                  <value>#2018-01-01#</value>
                  <value>#2018-01-02#</value>
                  <value>#2018-01-03#</value>
                  <value>#2018-01-05#</value>
                  <value>#2018-01-06#</value>
                  <value>#2018-01-07#</value>
                  <value>#2018-01-08#</value>
                  <value>#2018-01-09#</value>
                  <value>#2018-01-10#</value>
                  <value>#2018-01-11#</value>
                  <value>#2018-01-12#</value>
                  <value>#2018-01-14#</value>
                  <value>#2018-01-15#</value>
                  <value>#2018-01-16#</value>
                  <value>#2018-01-17#</value>
                  <value>#2018-01-18#</value>
                  <value>#2018-01-19#</value>
                  <value>#2018-01-20#</value>
                  <value>#2018-01-21#</value>
                  <value>#2018-01-22#</value>
                  <value>#2018-01-23#</value>
                  <value>#2018-01-24#</value>
                  <value>#2018-01-25#</value>
                  <value>#2018-01-26#</value>
                  <value>#2018-01-27#</value>
                  <value>#2018-01-28#</value>
                  <value>#2018-01-29#</value>
                  <value>#2018-01-30#</value>
                  <value>#2018-01-31#</value>
                  <value>#2018-02-01#</value>
                  <value>#2018-02-02#</value>
                  <value>#2018-02-03#</value>
                  <value>#2018-02-04#</value>
                  <value>#2018-02-05#</value>
                  <value>#2018-02-06#</value>
                  <value>#2018-02-07#</value>
                  <value>#2018-02-08#</value>
                  <value>#2018-02-09#</value>
                  <value>#2018-02-10#</value>
                  <value>#2018-02-12#</value>
                  <value>#2018-02-13#</value>
                  <value>#2018-02-14#</value>
                  <value>#2018-02-15#</value>
                  <value>#2018-02-16#</value>
                  <value>#2018-02-17#</value>
                  <value>#2018-02-18#</value>
                  <value>#2018-02-20#</value>
                  <value>#2018-02-21#</value>
                  <value>#2018-02-22#</value>
                  <value>#2018-02-23#</value>
                  <value>#2018-02-24#</value>
                  <value>#2018-02-25#</value>
                  <value>#2018-02-26#</value>
                  <value>#2018-02-28#</value>
                  <value>#2019-01-01#</value>
                  <value>#2019-01-02#</value>
                  <value>#2019-01-03#</value>
                  <value>#2019-01-04#</value>
                  <value>#2019-01-05#</value>
                  <value>#2019-01-06#</value>
                  <value>#2019-01-07#</value>
                  <value>#2019-01-08#</value>
                  <value>#2019-01-09#</value>
                  <value>#2019-01-10#</value>
                  <value>#2019-01-11#</value>
                  <value>#2019-01-12#</value>
                  <value>#2019-01-13#</value>
                  <value>#2019-01-14#</value>
                  <value>#2019-01-15#</value>
                  <value>#2019-01-16#</value>
                  <value>#2019-01-17#</value>
                  <value>#2019-01-18#</value>
                  <value>#2019-01-19#</value>
                  <value>#2019-01-20#</value>
                  <value>#2019-01-21#</value>
                  <value>#2019-01-22#</value>
                  <value>#2019-01-23#</value>
                  <value>#2019-01-24#</value>
                  <value>#2019-01-25#</value>
                  <value>#2019-01-26#</value>
                  <value>#2019-01-27#</value>
                  <value>#2019-01-28#</value>
                  <value>#2019-01-29#</value>
                  <value>#2019-01-30#</value>
                  <value>#2019-01-31#</value>
                  <value>#2019-02-01#</value>
                  <value>#2019-02-02#</value>
                  <value>#2019-02-03#</value>
                  <value>#2019-02-04#</value>
                  <value>#2019-02-05#</value>
                  <value>#2019-02-06#</value>
                  <value>#2019-02-07#</value>
                  <value>#2019-02-08#</value>
                  <value>#2019-02-09#</value>
                  <value>#2019-02-10#</value>
                  <value>#2019-02-11#</value>
                  <value>#2019-02-12#</value>
                  <value>#2019-02-13#</value>
                  <value>#2019-02-14#</value>
                  <value>#2019-02-15#</value>
                  <value>#2019-02-16#</value>
                  <value>#2019-02-17#</value>
                  <value>#2019-02-18#</value>
                  <value>#2019-02-19#</value>
                  <value>#2019-02-20#</value>
                  <value>#2019-02-21#</value>
                  <value>#2019-02-22#</value>
                  <value>#2019-02-23#</value>
                  <value>#2019-02-24#</value>
                  <value>#2019-02-25#</value>
                  <value>#2019-02-26#</value>
                  <value>#2019-02-27#</value>
                  <value>#2019-02-28#</value>
                  <value>#2019-03-01#</value>
                  <value>#2019-03-02#</value>
                  <value>#2019-03-03#</value>
                  <value>#2019-03-04#</value>
                  <value>#2019-03-05#</value>
                  <value>#2019-03-06#</value>
                  <value>#2019-03-07#</value>
                  <value>#2019-03-08#</value>
                  <value>#2019-03-09#</value>
                  <value>#2019-03-10#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Student Stage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Student Type]' role='dimension' type='nominal' />
            <column caption='Target 2019' datatype='string' name='[Target]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Targeted&quot;'>
                  <value>&quot;Barnstable, MA&quot;</value>
                  <value>&quot;Berkshire, MA&quot;</value>
                  <value>&quot;Bristol, MA&quot;</value>
                  <value>&quot;Caledonia, VT&quot;</value>
                  <value>&quot;Carroll, NH&quot;</value>
                  <value>&quot;Cheshire, NH&quot;</value>
                  <value>&quot;Chittenden, VT&quot;</value>
                  <value>&quot;Essex, MA&quot;</value>
                  <value>&quot;Fairfield, CT&quot;</value>
                  <value>&quot;Grafton, NH&quot;</value>
                  <value>&quot;Hampden, MA&quot;</value>
                  <value>&quot;Hartford, CT&quot;</value>
                  <value>&quot;Hillsborough, NH&quot;</value>
                  <value>&quot;Litchfield, CT&quot;</value>
                  <value>&quot;Merrimack, NH&quot;</value>
                  <value>&quot;Middlesex, CT&quot;</value>
                  <value>&quot;Middlesex, MA&quot;</value>
                  <value>&quot;New Haven, CT&quot;</value>
                  <value>&quot;New London, CT&quot;</value>
                  <value>&quot;Norfold, MA&quot;</value>
                  <value>&quot;Norfolk, MA&quot;</value>
                  <value>&quot;Orange, VT&quot;</value>
                  <value>&quot;Plymouth, MA&quot;</value>
                  <value>&quot;Providence, RI&quot;</value>
                  <value>&quot;Rockingham, NH&quot;</value>
                  <value>&quot;Rutland, VT&quot;</value>
                  <value>&quot;Strafford, NH&quot;</value>
                  <value>&quot;Suffolk, MA&quot;</value>
                  <value>&quot;Washington, RI&quot;</value>
                  <value>&quot;Washington, VT&quot;</value>
                  <value>&quot;Windham, CT&quot;</value>
                  <value>&quot;Worcester, MA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Stage]' derivation='None' name='[none:Student Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Type]' derivation='None' name='[none:Student Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Initial Source Date]' derivation='Year' name='[yr:Initial Source Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]'>
            <groupfilter function='level-members' level='[Primary City &amp; Primary State/Province (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]'>
            <groupfilter function='member' level='[Run Time]' member='&quot;In Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Target]' member='&quot;Berkshire, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Bristol, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Carroll, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Cheshire, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Essex, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Fairfield, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Grafton, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Hampden, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Hartford, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Hillsborough, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Litchfield, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Merrimack, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Middlesex, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Middlesex, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;New Haven, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Norfold, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Norfolk, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Plymouth, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Providence, RI&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Rockingham, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Rutland, VT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Suffolk, MA&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Sullivan, NH&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Targeted&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Washington, RI&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Windham, CT&quot;' />
              <groupfilter function='member' level='[Target]' member='&quot;Worcester, MA&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Vermont&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Inquiry&quot;</bucket>
              <bucket>&quot;Applicant&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]'>
            <groupfilter function='member' level='[none:Student Type:nk]' member='&quot;First-Year Student&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Target] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols total='true'>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok])</cols>
      </table>
      <simple-id uuid='{277D6E04-1833-4F47-A6B0-01F7307AFBEA}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2019 Targeted Areas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='date' name='[Initial Source Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Run Time]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Initial Source Date]' new-bin='true'>
                <bin default-name='false' value='&quot;In Market&quot;'>
                  <value>#2017-03-01#</value>
                  <value>#2017-03-02#</value>
                  <value>#2017-03-03#</value>
                  <value>#2017-03-04#</value>
                  <value>#2017-03-05#</value>
                  <value>#2017-03-06#</value>
                  <value>#2017-03-07#</value>
                  <value>#2017-03-08#</value>
                  <value>#2017-03-09#</value>
                  <value>#2017-03-10#</value>
                  <value>#2017-03-11#</value>
                  <value>#2017-03-12#</value>
                  <value>#2017-03-13#</value>
                  <value>#2017-03-14#</value>
                  <value>#2017-03-15#</value>
                  <value>#2017-03-16#</value>
                  <value>#2017-03-17#</value>
                  <value>#2017-03-18#</value>
                  <value>#2017-03-19#</value>
                  <value>#2017-03-20#</value>
                  <value>#2017-03-21#</value>
                  <value>#2017-03-22#</value>
                  <value>#2017-03-23#</value>
                  <value>#2017-03-24#</value>
                  <value>#2017-03-25#</value>
                  <value>#2017-03-27#</value>
                  <value>#2017-03-28#</value>
                  <value>#2017-03-29#</value>
                  <value>#2017-03-30#</value>
                  <value>#2017-03-31#</value>
                  <value>#2017-04-01#</value>
                  <value>#2017-04-02#</value>
                  <value>#2017-04-03#</value>
                  <value>#2017-04-04#</value>
                  <value>#2017-04-05#</value>
                  <value>#2017-04-06#</value>
                  <value>#2017-04-07#</value>
                  <value>#2017-04-09#</value>
                  <value>#2017-04-10#</value>
                  <value>#2017-04-11#</value>
                  <value>#2017-04-12#</value>
                  <value>#2017-04-13#</value>
                  <value>#2017-04-14#</value>
                  <value>#2017-04-15#</value>
                  <value>#2017-04-16#</value>
                  <value>#2017-04-17#</value>
                  <value>#2017-04-18#</value>
                  <value>#2017-04-19#</value>
                  <value>#2017-04-20#</value>
                  <value>#2017-04-21#</value>
                  <value>#2017-04-22#</value>
                  <value>#2017-04-24#</value>
                  <value>#2017-04-25#</value>
                  <value>#2017-04-26#</value>
                  <value>#2017-04-27#</value>
                  <value>#2017-04-28#</value>
                  <value>#2017-04-30#</value>
                  <value>#2017-05-01#</value>
                  <value>#2017-05-02#</value>
                  <value>#2017-05-03#</value>
                  <value>#2017-05-04#</value>
                  <value>#2017-05-05#</value>
                  <value>#2017-05-06#</value>
                  <value>#2017-05-07#</value>
                  <value>#2017-05-08#</value>
                  <value>#2017-05-09#</value>
                  <value>#2017-05-10#</value>
                  <value>#2017-05-11#</value>
                  <value>#2017-05-15#</value>
                  <value>#2017-05-16#</value>
                  <value>#2017-05-17#</value>
                  <value>#2017-05-18#</value>
                  <value>#2017-05-19#</value>
                  <value>#2017-05-21#</value>
                  <value>#2017-05-22#</value>
                  <value>#2017-05-23#</value>
                  <value>#2017-05-24#</value>
                  <value>#2017-05-26#</value>
                  <value>#2017-05-27#</value>
                  <value>#2017-05-28#</value>
                  <value>#2017-05-30#</value>
                  <value>#2017-05-31#</value>
                  <value>#2017-06-02#</value>
                  <value>#2017-06-05#</value>
                  <value>#2017-06-06#</value>
                  <value>#2017-06-07#</value>
                  <value>#2017-06-08#</value>
                  <value>#2017-06-09#</value>
                  <value>#2017-06-10#</value>
                  <value>#2017-06-12#</value>
                  <value>#2017-06-13#</value>
                  <value>#2017-06-14#</value>
                  <value>#2017-06-15#</value>
                  <value>#2018-03-01#</value>
                  <value>#2018-03-02#</value>
                  <value>#2018-03-03#</value>
                  <value>#2018-03-04#</value>
                  <value>#2018-03-05#</value>
                  <value>#2018-03-06#</value>
                  <value>#2018-03-07#</value>
                  <value>#2018-03-08#</value>
                  <value>#2018-03-10#</value>
                  <value>#2018-03-11#</value>
                  <value>#2018-03-12#</value>
                  <value>#2018-03-13#</value>
                  <value>#2018-03-14#</value>
                  <value>#2018-03-15#</value>
                  <value>#2018-03-16#</value>
                  <value>#2018-03-17#</value>
                  <value>#2018-03-18#</value>
                  <value>#2018-03-19#</value>
                  <value>#2018-03-20#</value>
                  <value>#2018-03-21#</value>
                  <value>#2018-03-22#</value>
                  <value>#2018-03-23#</value>
                  <value>#2018-03-24#</value>
                  <value>#2018-03-25#</value>
                  <value>#2018-03-26#</value>
                  <value>#2018-03-27#</value>
                  <value>#2018-03-28#</value>
                  <value>#2018-03-29#</value>
                  <value>#2018-03-30#</value>
                  <value>#2018-03-31#</value>
                  <value>#2018-04-01#</value>
                  <value>#2018-04-02#</value>
                  <value>#2018-04-03#</value>
                  <value>#2018-04-04#</value>
                  <value>#2018-04-05#</value>
                  <value>#2018-04-06#</value>
                  <value>#2018-04-07#</value>
                  <value>#2018-04-08#</value>
                  <value>#2018-04-09#</value>
                  <value>#2018-04-10#</value>
                  <value>#2018-04-11#</value>
                  <value>#2018-04-12#</value>
                  <value>#2018-04-13#</value>
                  <value>#2018-04-14#</value>
                  <value>#2018-04-15#</value>
                  <value>#2018-04-16#</value>
                  <value>#2018-04-17#</value>
                  <value>#2018-04-18#</value>
                  <value>#2018-04-19#</value>
                  <value>#2018-04-20#</value>
                  <value>#2018-04-21#</value>
                  <value>#2018-04-22#</value>
                  <value>#2018-04-23#</value>
                  <value>#2018-04-24#</value>
                  <value>#2018-04-25#</value>
                  <value>#2018-04-26#</value>
                  <value>#2018-04-27#</value>
                  <value>#2018-04-28#</value>
                  <value>#2018-04-29#</value>
                  <value>#2018-04-30#</value>
                  <value>#2018-05-01#</value>
                  <value>#2018-05-02#</value>
                  <value>#2018-05-03#</value>
                  <value>#2018-05-04#</value>
                  <value>#2018-05-05#</value>
                  <value>#2018-05-07#</value>
                  <value>#2018-05-08#</value>
                  <value>#2018-05-09#</value>
                  <value>#2018-05-10#</value>
                  <value>#2018-05-11#</value>
                  <value>#2018-05-12#</value>
                  <value>#2018-05-14#</value>
                  <value>#2018-05-15#</value>
                  <value>#2018-05-16#</value>
                  <value>#2018-05-17#</value>
                  <value>#2018-05-18#</value>
                  <value>#2018-05-19#</value>
                  <value>#2018-05-20#</value>
                  <value>#2018-05-21#</value>
                  <value>#2018-05-22#</value>
                  <value>#2018-05-23#</value>
                  <value>#2018-05-24#</value>
                  <value>#2018-05-25#</value>
                  <value>#2018-05-27#</value>
                  <value>#2018-05-29#</value>
                  <value>#2018-05-30#</value>
                  <value>#2018-05-31#</value>
                  <value>#2018-06-01#</value>
                  <value>#2018-06-04#</value>
                  <value>#2018-06-05#</value>
                  <value>#2018-06-06#</value>
                  <value>#2018-06-07#</value>
                  <value>#2018-06-08#</value>
                  <value>#2018-06-10#</value>
                  <value>#2018-06-11#</value>
                  <value>#2018-06-12#</value>
                  <value>#2018-06-13#</value>
                  <value>#2018-06-14#</value>
                  <value>#2018-06-15#</value>
                  <value>#2019-03-11#</value>
                  <value>#2019-03-12#</value>
                  <value>#2019-03-13#</value>
                  <value>#2019-03-14#</value>
                  <value>#2019-03-15#</value>
                  <value>#2019-03-16#</value>
                  <value>#2019-03-17#</value>
                  <value>#2019-03-18#</value>
                  <value>#2019-03-19#</value>
                  <value>#2019-03-20#</value>
                  <value>#2019-03-21#</value>
                  <value>#2019-03-22#</value>
                  <value>#2019-03-23#</value>
                  <value>#2019-03-24#</value>
                  <value>#2019-03-25#</value>
                  <value>#2019-03-26#</value>
                  <value>#2019-03-27#</value>
                  <value>#2019-03-28#</value>
                  <value>#2019-03-29#</value>
                  <value>#2019-03-30#</value>
                  <value>#2019-03-31#</value>
                  <value>#2019-04-01#</value>
                  <value>#2019-04-02#</value>
                  <value>#2019-04-03#</value>
                  <value>#2019-04-04#</value>
                  <value>#2019-04-05#</value>
                  <value>#2019-04-06#</value>
                  <value>#2019-04-07#</value>
                  <value>#2019-04-08#</value>
                  <value>#2019-04-09#</value>
                  <value>#2019-04-10#</value>
                  <value>#2019-04-11#</value>
                  <value>#2019-04-12#</value>
                  <value>#2019-04-13#</value>
                  <value>#2019-04-14#</value>
                  <value>#2019-04-15#</value>
                  <value>#2019-04-16#</value>
                  <value>#2019-04-17#</value>
                  <value>#2019-04-18#</value>
                  <value>#2019-04-19#</value>
                  <value>#2019-04-20#</value>
                  <value>#2019-04-21#</value>
                  <value>#2019-04-22#</value>
                  <value>#2019-04-23#</value>
                  <value>#2019-04-24#</value>
                  <value>#2019-04-25#</value>
                  <value>#2019-04-26#</value>
                  <value>#2019-04-27#</value>
                  <value>#2019-04-28#</value>
                  <value>#2019-04-29#</value>
                  <value>#2019-04-30#</value>
                  <value>#2019-05-01#</value>
                  <value>#2019-05-02#</value>
                  <value>#2019-05-03#</value>
                  <value>#2019-05-04#</value>
                  <value>#2019-05-05#</value>
                  <value>#2019-05-06#</value>
                  <value>#2019-05-07#</value>
                  <value>#2019-05-08#</value>
                  <value>#2019-05-09#</value>
                  <value>#2019-05-10#</value>
                  <value>#2019-05-11#</value>
                  <value>#2019-05-12#</value>
                  <value>#2019-05-13#</value>
                  <value>#2019-05-14#</value>
                  <value>#2019-05-15#</value>
                  <value>#2019-05-16#</value>
                  <value>#2019-05-17#</value>
                  <value>#2019-05-18#</value>
                  <value>#2019-05-19#</value>
                  <value>#2019-05-20#</value>
                  <value>#2019-05-21#</value>
                  <value>#2019-05-22#</value>
                  <value>#2019-05-23#</value>
                  <value>#2019-05-24#</value>
                  <value>#2019-05-25#</value>
                  <value>#2019-05-26#</value>
                  <value>#2019-05-27#</value>
                  <value>#2019-05-28#</value>
                  <value>#2019-05-29#</value>
                  <value>#2019-05-30#</value>
                  <value>#2019-05-31#</value>
                  <value>#2019-06-01#</value>
                  <value>#2019-06-02#</value>
                  <value>#2019-06-03#</value>
                  <value>#2019-06-04#</value>
                  <value>#2019-06-05#</value>
                  <value>#2019-06-06#</value>
                  <value>#2019-06-07#</value>
                  <value>#2019-06-08#</value>
                  <value>#2019-06-09#</value>
                  <value>#2019-06-10#</value>
                  <value>#2019-06-11#</value>
                  <value>#2019-06-12#</value>
                  <value>#2019-06-13#</value>
                  <value>#2019-06-14#</value>
                  <value>#2019-06-15#</value>
                </bin>
                <bin default-name='false' value='&quot;Out of Market&quot;'>
                  <value>%null%</value>
                  <value>#2017-01-01#</value>
                  <value>#2017-01-02#</value>
                  <value>#2017-01-03#</value>
                  <value>#2017-01-04#</value>
                  <value>#2017-01-05#</value>
                  <value>#2017-01-06#</value>
                  <value>#2017-01-07#</value>
                  <value>#2017-01-08#</value>
                  <value>#2017-01-09#</value>
                  <value>#2017-01-10#</value>
                  <value>#2017-01-11#</value>
                  <value>#2017-01-12#</value>
                  <value>#2017-01-13#</value>
                  <value>#2017-01-14#</value>
                  <value>#2017-01-15#</value>
                  <value>#2017-01-16#</value>
                  <value>#2017-01-17#</value>
                  <value>#2017-01-18#</value>
                  <value>#2017-01-19#</value>
                  <value>#2017-01-20#</value>
                  <value>#2017-01-21#</value>
                  <value>#2017-01-22#</value>
                  <value>#2017-01-23#</value>
                  <value>#2017-01-24#</value>
                  <value>#2017-01-25#</value>
                  <value>#2017-01-26#</value>
                  <value>#2017-01-27#</value>
                  <value>#2017-01-28#</value>
                  <value>#2017-01-29#</value>
                  <value>#2017-01-30#</value>
                  <value>#2017-01-31#</value>
                  <value>#2017-02-01#</value>
                  <value>#2017-02-02#</value>
                  <value>#2017-02-03#</value>
                  <value>#2017-02-04#</value>
                  <value>#2017-02-05#</value>
                  <value>#2017-02-06#</value>
                  <value>#2017-02-07#</value>
                  <value>#2017-02-08#</value>
                  <value>#2017-02-10#</value>
                  <value>#2017-02-11#</value>
                  <value>#2017-02-12#</value>
                  <value>#2017-02-13#</value>
                  <value>#2017-02-14#</value>
                  <value>#2017-02-15#</value>
                  <value>#2017-02-16#</value>
                  <value>#2017-02-17#</value>
                  <value>#2017-02-19#</value>
                  <value>#2017-02-20#</value>
                  <value>#2017-02-21#</value>
                  <value>#2017-02-22#</value>
                  <value>#2017-02-23#</value>
                  <value>#2017-02-24#</value>
                  <value>#2017-02-25#</value>
                  <value>#2017-02-26#</value>
                  <value>#2017-02-27#</value>
                  <value>#2017-02-28#</value>
                  <value>#2018-01-01#</value>
                  <value>#2018-01-02#</value>
                  <value>#2018-01-03#</value>
                  <value>#2018-01-05#</value>
                  <value>#2018-01-06#</value>
                  <value>#2018-01-07#</value>
                  <value>#2018-01-08#</value>
                  <value>#2018-01-09#</value>
                  <value>#2018-01-10#</value>
                  <value>#2018-01-11#</value>
                  <value>#2018-01-12#</value>
                  <value>#2018-01-14#</value>
                  <value>#2018-01-15#</value>
                  <value>#2018-01-16#</value>
                  <value>#2018-01-17#</value>
                  <value>#2018-01-18#</value>
                  <value>#2018-01-19#</value>
                  <value>#2018-01-20#</value>
                  <value>#2018-01-21#</value>
                  <value>#2018-01-22#</value>
                  <value>#2018-01-23#</value>
                  <value>#2018-01-24#</value>
                  <value>#2018-01-25#</value>
                  <value>#2018-01-26#</value>
                  <value>#2018-01-27#</value>
                  <value>#2018-01-28#</value>
                  <value>#2018-01-29#</value>
                  <value>#2018-01-30#</value>
                  <value>#2018-01-31#</value>
                  <value>#2018-02-01#</value>
                  <value>#2018-02-02#</value>
                  <value>#2018-02-03#</value>
                  <value>#2018-02-04#</value>
                  <value>#2018-02-05#</value>
                  <value>#2018-02-06#</value>
                  <value>#2018-02-07#</value>
                  <value>#2018-02-08#</value>
                  <value>#2018-02-09#</value>
                  <value>#2018-02-10#</value>
                  <value>#2018-02-12#</value>
                  <value>#2018-02-13#</value>
                  <value>#2018-02-14#</value>
                  <value>#2018-02-15#</value>
                  <value>#2018-02-16#</value>
                  <value>#2018-02-17#</value>
                  <value>#2018-02-18#</value>
                  <value>#2018-02-20#</value>
                  <value>#2018-02-21#</value>
                  <value>#2018-02-22#</value>
                  <value>#2018-02-23#</value>
                  <value>#2018-02-24#</value>
                  <value>#2018-02-25#</value>
                  <value>#2018-02-26#</value>
                  <value>#2018-02-28#</value>
                  <value>#2019-01-01#</value>
                  <value>#2019-01-02#</value>
                  <value>#2019-01-03#</value>
                  <value>#2019-01-04#</value>
                  <value>#2019-01-05#</value>
                  <value>#2019-01-06#</value>
                  <value>#2019-01-07#</value>
                  <value>#2019-01-08#</value>
                  <value>#2019-01-09#</value>
                  <value>#2019-01-10#</value>
                  <value>#2019-01-11#</value>
                  <value>#2019-01-12#</value>
                  <value>#2019-01-13#</value>
                  <value>#2019-01-14#</value>
                  <value>#2019-01-15#</value>
                  <value>#2019-01-16#</value>
                  <value>#2019-01-17#</value>
                  <value>#2019-01-18#</value>
                  <value>#2019-01-19#</value>
                  <value>#2019-01-20#</value>
                  <value>#2019-01-21#</value>
                  <value>#2019-01-22#</value>
                  <value>#2019-01-23#</value>
                  <value>#2019-01-24#</value>
                  <value>#2019-01-25#</value>
                  <value>#2019-01-26#</value>
                  <value>#2019-01-27#</value>
                  <value>#2019-01-28#</value>
                  <value>#2019-01-29#</value>
                  <value>#2019-01-30#</value>
                  <value>#2019-01-31#</value>
                  <value>#2019-02-01#</value>
                  <value>#2019-02-02#</value>
                  <value>#2019-02-03#</value>
                  <value>#2019-02-04#</value>
                  <value>#2019-02-05#</value>
                  <value>#2019-02-06#</value>
                  <value>#2019-02-07#</value>
                  <value>#2019-02-08#</value>
                  <value>#2019-02-09#</value>
                  <value>#2019-02-10#</value>
                  <value>#2019-02-11#</value>
                  <value>#2019-02-12#</value>
                  <value>#2019-02-13#</value>
                  <value>#2019-02-14#</value>
                  <value>#2019-02-15#</value>
                  <value>#2019-02-16#</value>
                  <value>#2019-02-17#</value>
                  <value>#2019-02-18#</value>
                  <value>#2019-02-19#</value>
                  <value>#2019-02-20#</value>
                  <value>#2019-02-21#</value>
                  <value>#2019-02-22#</value>
                  <value>#2019-02-23#</value>
                  <value>#2019-02-24#</value>
                  <value>#2019-02-25#</value>
                  <value>#2019-02-26#</value>
                  <value>#2019-02-27#</value>
                  <value>#2019-02-28#</value>
                  <value>#2019-03-01#</value>
                  <value>#2019-03-02#</value>
                  <value>#2019-03-03#</value>
                  <value>#2019-03-04#</value>
                  <value>#2019-03-05#</value>
                  <value>#2019-03-06#</value>
                  <value>#2019-03-07#</value>
                  <value>#2019-03-08#</value>
                  <value>#2019-03-09#</value>
                  <value>#2019-03-10#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Student Stage]' role='dimension' type='nominal' />
            <column datatype='string' name='[Student Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Targets 2017 and 2018]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province (group)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Target 17 18&quot;'>
                  <value>&quot;Belknap, NH&quot;</value>
                  <value>&quot;Caledonia, VT&quot;</value>
                  <value>&quot;Chittenden, VT&quot;</value>
                  <value>&quot;Essex, MA&quot;</value>
                  <value>&quot;Fairfield, CT&quot;</value>
                  <value>&quot;Hartford, CT&quot;</value>
                  <value>&quot;Hillsborough, NH&quot;</value>
                  <value>&quot;Middlesex, MA&quot;</value>
                  <value>&quot;New Haven, CT&quot;</value>
                  <value>&quot;Providence, RI&quot;</value>
                  <value>&quot;Rockingham, NH&quot;</value>
                  <value>&quot;Rutland, VT&quot;</value>
                  <value>&quot;Strafford, NH&quot;</value>
                  <value>&quot;Washington, RI&quot;</value>
                  <value>&quot;Windham, VT&quot;</value>
                  <value>&quot;Windsor, VT&quot;</value>
                  <value>&quot;Worcester, MA&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Stage]' derivation='None' name='[none:Student Stage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Student Type]' derivation='None' name='[none:Student Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Initial Source Date]' derivation='Year' name='[yr:Initial Source Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]'>
            <groupfilter function='member' level='[Run Time]' member='&quot;In Market&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Targets 2017 and 2018]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[Targets 2017 and 2018]' member='&quot;Target 17 18&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:Primary State/Province:nk]' member='&quot;Vermont&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>&quot;Inquiry&quot;</bucket>
              <bucket>&quot;Applicant&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]'>
            <groupfilter function='member' level='[none:Student Type:nk]' member='&quot;First-Year Student&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Run Time]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Type:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]</column>
            <column>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018] / ([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]))</rows>
        <cols>([federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Student Stage:nk] / [federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok])</cols>
      </table>
      <simple-id uuid='{A220E146-5882-4EB7-B3E4-F7BE2518B795}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='InquiriesApps_Spring19Travel' name='federated.18lwnmp17902tw1ft5o7o0y4tiyt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18lwnmp17902tw1ft5o7o0y4tiyt'>
            <column datatype='string' name='[Primary City &amp; Primary State/Province (group)]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Primary City &amp; Primary State/Province]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Barnstable, MA&quot;'>
                  <value>(&quot;Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brewster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Buzzards Bay&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Centerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cotuit&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Eastham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyannis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marstons Mills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mashpee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Falmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Orleans&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Osterville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pocasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sagamore Beach&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Dennis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Harwich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Truro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellfleet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Barnstable&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Yarmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woods Hole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Yarmouth Port&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Belknap, NH&quot;'>
                  <value>(&quot;Alton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Alton Bay&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Barnstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Harbor&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Gilmanton Iron Works&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Laconia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meredith&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Berkshire, MA&quot;'>
                  <value>(&quot;Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dalton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lanesboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Adams&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peru&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sandisfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Williamstown&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Bristol, MA&quot;'>
                  <value>(&quot;Acushnet&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Attleboro Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Berkley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Freetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fall River&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mansfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;N Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;New Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Attleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dartmouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Dighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Raynham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rehoboth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Seekonk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Easton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swansea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Taunton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Caledonia, VT&quot;'>
                  <value>(&quot;Concord&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Greensboro Bend&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hardwick&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndon Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Lyndonville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Saint Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sheffield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Ryegate&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St Johnsbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Burke&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Carroll, NH&quot;'>
                  <value>(&quot;Brookfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Center Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Effingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Freedom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Intervale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Melvin Village&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mirror Lake&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Moultonborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Conway&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Ossipee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sanbornville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tamworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wolfeboro&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Cheshire, NH&quot;'>
                  <value>(&quot;Brattleboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Dublin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fitzwilliam&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hinsdale&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Jaffrey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Keene&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Spofford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stoddard&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Swanzey&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Chesterfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Westmoreland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Chittenden, VT&quot;'>
                  <value>(&quot;Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Charlotte&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Essex Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairfax&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hinesburg&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Huntington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jericho&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Richmond&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Shelburne&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Burlington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;St George&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Underhill&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Winooski&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Essex, MA&quot;'>
                  <value>(&quot;Amesbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Beverly&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Byfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Danvers&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Essex&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Georgetown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gloucester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groveland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ipswich&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lawrence&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lynnfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marblehead&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Merrimac&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Methuen&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newburyport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Andover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Peabody&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockport&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rowley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Salisbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Saugus&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Hamilton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Swampscott&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Topsfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wenham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newbury&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Fairfield, CT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bridgeport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cos Cob&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Darien&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Easton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Fairfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newtown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwalk&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Greenwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ridgefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sandy Hook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stamford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Stratford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Trumbull&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westport&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Grafton, NH&quot;'>
                  <value>(&quot;Bath&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bethlehem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Campton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Etna&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Haverhill&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lisbon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyman&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lyme&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Monroe&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Woodstock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Orford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pike&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rumney&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;West Lebanon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Woodsville&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hampden, MA&quot;'>
                  <value>(&quot;Agawam&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chicopee&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Feeding Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hampden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holyoke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Indian Orchard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Longmeadow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Monson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Palmer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Russell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southwick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wales&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Springfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilbraham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hartford, CT&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Berlin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bloomfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bristol&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Broad Brook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hartland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Enfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Britain&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plantsville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Rocky Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Glastonbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Suffield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Tariffville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Unionville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Vernon Rockville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Weatogue&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Granby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Simsbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wethersfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Windsor Locks&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Hillsborough, NH&quot;'>
                  <value>(&quot;Amherst&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Goffstown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hancock&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hillsborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hollis&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Manchester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Merrimack&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Mont Vernon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nashua&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Boston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Ipswich&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pelham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Peterborough&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Temple&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Weare&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilton&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Litchfield, CT&quot;'>
                  <value>(&quot;Barkhamsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canaan&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colebrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Falls Village&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Goshen&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Harwinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Litchfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Hartford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Preston Marble Dale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oakville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;South Kent&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Terryville&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thomaston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Torrington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Washington Depot&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Winsted&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbury&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Merrimack, NH&quot;'>
                  <value>(&quot;Boscawen&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Contoocook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epsom&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Henniker&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hooksett&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Loudon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Sutton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Suncook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Tilton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Warner&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Wilmot&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, CT&quot;'>
                  <value>(&quot;Chester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cromwell&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Deep River&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Haddam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Higganum&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Killingworth&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlefield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moodus&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Old Saybrook&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Portland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Westbrook&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Middlesex, MA&quot;'>
                  <value>(&quot;Acton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Arlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashby&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ashland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburndale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ayer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bedford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Belmont&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Burlington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cambridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carlisle&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Concord&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dracut&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Everett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Framingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanscom AFB&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holliston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hudson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lexington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Littleton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lowell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Malden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marlborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Maynard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Melrose&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Natick&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Highlands&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Lower Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newtonville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Billerica&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Chelmsford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pepperell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sherborn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shirley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Somerville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoneham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stow&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tewksbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Townsend&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Tyngsboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Waltham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Watertown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wayland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Newton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Woburn&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New Haven, CT&quot;'>
                  <value>(&quot;Ansonia&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Beacon Falls&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Bethany&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Cheshire&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Derby&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hamden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Madison&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Middlebury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Naugatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Branford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Northford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Orange&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Prospect&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Seymour&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Shelton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Southbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wallingford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;West Haven&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Wolcott&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodbridge&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;New London, CT&quot;'>
                  <value>(&quot;Baltic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Colchester&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;East Lyme&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Gales Ferry&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Griswold&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Groton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Jewett City&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Lebanon&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Ledyard&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Mystic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;New London&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Niantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Stonington&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pawcatuck&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Preston&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Quaker Hill&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Voluntown&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Waterford&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Norfolk, MA&quot;'>
                  <value>(&quot;Avon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bellingham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Canton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dedham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Foxboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Franklin&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Medway&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millis&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Needham Heights&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Newton Upper Falls&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norfolk&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plainville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Stoughton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Walpole&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wellesley Hills&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westwood&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Weymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wrentham&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Orange, VT&quot;'>
                  <value>(&quot;Bradford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Braintree&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Corinth&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Thetford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fairlee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Randolph Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Thetford Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Tunbridge&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Washington&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Topsham&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Plymouth, MA&quot;'>
                  <value>(&quot;Abington&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brockton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Carver&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Cohasset&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Duxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Halifax&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanover&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hanson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lakeville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marion&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Marshfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapoisett&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Middleboro&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Norwell&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Pembroke&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plymouth&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Plympton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rockland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Scituate&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Wareham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Bridgewater&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitman&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Providence, RI&quot;'>
                  <value>(&quot;Central Falls&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Chepachet&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cranston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Cumberland&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;East Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Forestdale&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Foster&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Greenville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Harrisville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Johnston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Lincoln&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Mapleville&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Scituate&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pascoag&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Pawtucket&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Providence&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Riverside&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Smithfield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Woonsocket&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rockingham, NH&quot;'>
                  <value>(&quot;Atkinson&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Brentwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Candia&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Danville&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Deerfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Derry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;East Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Epping&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Fremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Greenland&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Hampton Falls&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kensington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newfields&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newmarket&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Northwood&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Nottingham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plaistow&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Raymond&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rye&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Salem&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sandown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Seabrook&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Hampton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Stratham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Windham&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Rutland, VT&quot;'>
                  <value>(&quot;Belmont&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Benson&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bomoseen&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brandon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Castleton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Center Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chittenden&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cuttingsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Danby&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Fair Haven&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Middletown Springs&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Clarendon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pawlet&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Pittsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Poultney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sudbury&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Strafford, NH&quot;'>
                  <value>(&quot;Barrington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Dover&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Farmington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lee&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Madbury&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Milton&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;New Durham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newington&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rochester&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Rollinsford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Somersworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Strafford&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Union&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Suffolk, MA&quot;'>
                  <value>(&quot;Allston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brighton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chelsea&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Chestnut Hill&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dorchester Center&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;East Boston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hyde Park&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jamaica Plain&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mattapan&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Revere&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roslindale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Roxbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winthrop&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Sullivan, NH&quot;'>
                  <value>(&quot;Alstead&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Claremont&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Cornish&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Grantham&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Langdon&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Lempster&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Meriden&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;North Walpole&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;South Acworth&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;New Hampshire&quot;)</value>
                  <value>(&quot;Sunapee&quot;,&quot;New Hampshire&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, RI&quot;'>
                  <value>(&quot;Ashaway&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Bradford&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Carolina&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Charlestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Exeter&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hope Valley&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Hopkinton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Jamestown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Little Compton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Middletown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Narragansett&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Newport&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;North Kingstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Portsmouth&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Saunderstown&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Tiverton&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wakefield&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;West Kingston&quot;,&quot;Rhode Island&quot;)</value>
                  <value>(&quot;Wyoming&quot;,&quot;Rhode Island&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Washington, VT&quot;'>
                  <value>(&quot;Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Barre&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Calais&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Graniteville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Montpelier&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Moretown&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Northfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Roxbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waitsfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Warren&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Waterbury Center&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, CT&quot;'>
                  <value>(&quot;Ashford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Brooklyn&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Canterbury&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Chaplin&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Danielson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Eastford&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Hampton&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Moosup&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Grosvenordale&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;North Windham&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Plainfield&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Pomfret Center&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Putnam&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Scotland&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Thompson&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Willimantic&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Connecticut&quot;)</value>
                  <value>(&quot;Woodstock Valley&quot;,&quot;Connecticut&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windham, VT&quot;'>
                  <value>(&quot;Bellows Falls&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bondville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Brookline&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cambridgeport&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;East Dover&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Guilford&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Jamaica&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Londonderry&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Putney&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Rockingham&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Newfane&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Vernon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;West Wardsboro&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Williamsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Wilmington&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Windsor, VT&quot;'>
                  <value>(&quot;Bethel&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Bridgewater&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Cavendish&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Chester&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Hartland&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Ludlow&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;North Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Norwich&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Proctorsville&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Quechee&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Reading&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Sharon&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;South Royalton&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Springfield&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Weston&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;White River Junction&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Windsor&quot;,&quot;Vermont&quot;)</value>
                  <value>(&quot;Woodstock&quot;,&quot;Vermont&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Worcester, MA&quot;'>
                  <value>(&quot;Ashburnham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Athol&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Auburn&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Baldwinville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Barre&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Blackstone&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Bolton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Charlton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Clinton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Devens&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Douglas&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Dudley&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fiskdale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Fitchburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gardner&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Gilbertville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Harvard&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Holden&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hopedale&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Hubbardston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Jefferson&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lancaster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Leominster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Lunenburg&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Mendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Milford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Millville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;North Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Northbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Oxford&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Paxton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Petersham&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Princeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Royalston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Rutland&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Shrewsbury&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;South Grafton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Southbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Spencer&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sterling&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sturbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Sutton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Templeton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Upton&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Uxbridge&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Ware&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Webster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Boylston&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;West Brookfield&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westborough&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Westminster&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Whitinsville&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Winchendon&quot;,&quot;Massachusetts&quot;)</value>
                  <value>(&quot;Worcester&quot;,&quot;Massachusetts&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Primary City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Albion&quot;' value='&quot;Albion&quot;' />
                <semantic-value key='&quot;Barrington&quot;' value='&quot;Barrington&quot;' />
                <semantic-value key='&quot;Bomossen&quot;' value='&quot;Bomoseen&quot;' />
                <semantic-value key='&quot;Collinsville&quot;' value='&quot;Collinsville&quot;' />
                <semantic-value key='&quot;E. Dover&quot;' value='&quot;Dover&quot;' />
                <semantic-value key='&quot;East Woodstock&quot;' value='&quot;Woodstock&quot;' />
                <semantic-value key='&quot;Eliot&quot;' value='&quot;Eliot&quot;' />
                <semantic-value key='&quot;Forest Dale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Forstdale&quot;' value='&quot;Forestdale&quot;' />
                <semantic-value key='&quot;Haverill&quot;' value='&quot;Haverhill&quot;' />
                <semantic-value key='&quot;Hillsboro&quot;' value='&quot;Hillsborough&quot;' />
                <semantic-value key='&quot;Kensington&quot;' value='&quot;Kensington&quot;' />
                <semantic-value key='&quot;Lake Elmore&quot;' value='&quot;Elmore&quot;' />
                <semantic-value key='&quot;Moultonboro&quot;' value='&quot;Moultonborough&quot;' />
                <semantic-value key='&quot;N Gros&quot;' value='&quot;Gross&quot;' />
                <semantic-value key='&quot;N. Chelmsford&quot;' value='&quot;North Chelmsford&quot;' />
                <semantic-value key='&quot;North Marshfield&quot;' value='&quot;Marshfield&quot;' />
                <semantic-value key='&quot;North Swanzey&quot;' value='&quot;Swanzey&quot;' />
                <semantic-value key='&quot;Nowalk&quot;' value='&quot;Norwalk&quot;' />
                <semantic-value key='&quot;Perkinsville&quot;' value='&quot;Perkinsville&quot;' />
                <semantic-value key='&quot;South Barre&quot;' value='&quot;Barre&quot;' />
                <semantic-value key='&quot;Storrs&quot;' value='&quot;Storrs Mansfield&quot;' />
                <semantic-value key='&quot;W Greenwich&quot;' value='&quot;Greenwich&quot;' />
                <semantic-value key='&quot;W Hartford&quot;' value='&quot;West Hartford&quot;' />
                <semantic-value key='&quot;West Falmouth&quot;' value='&quot;Falmouth&quot;' />
                <semantic-value key='&quot;West Peterborough&quot;' value='&quot;Petersburgh&quot;' />
                <semantic-value key='&quot;Westminster&quot;' value='&quot;Westminster&quot;' />
                <semantic-value key='&quot;Widham&quot;' value='&quot;Windham&quot;' />
                <semantic-value key='&quot;Wilder&quot;' value='&quot;Wilder&quot;' />
                <semantic-value key='&quot;Wolfeboro Falls&quot;' value='&quot;Wolfeboro&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Primary State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Primary City]' derivation='None' name='[none:Primary City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Primary State/Province]' derivation='None' name='[none:Primary State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]' field-type='quantitative' max='-7836607.7654421236' min='-8123358.3974150326' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]' field-type='quantitative' max='5601950.8977571242' min='5387513.7181666363' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary City:nk]' />
              <lod column='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Latitude (generated)]</rows>
        <cols>[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE77527E-C962-40BF-9A0D-1B3F90BC7F75}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='76125' id='3' name='Sheet 2' w='44900' x='54100' y='4125' />
        <zone h='77500' id='4' name='Sheet 3' w='45200' x='2700' y='3500' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='9' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='10' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='77500' id='4' is-fixed='true' name='Sheet 3' w='45200' x='2700' y='3500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76125' id='3' is-fixed='true' name='Sheet 2' w='44900' x='54100' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6ABF4024-E1F2-49EB-B1C7-F496CC3D4B9D}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5C9100ED-3EF5-4680-8D94-4ADA5F1F0FAF}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:Calculation_7344245107383533568:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[tdy:DATE:ok]</field>
            <field>[federated.08g9a9x1aemi0u14e13gp1drqfsj].[twk:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBC1F472-BF09-4989-9ADA-77CE58925DDB}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.0ut04ph059wvwb105ih4j1khw9pv].[none:Town:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5359DFE9-659A-406E-830E-0487D82B91AB}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 2' />
        <viewpoint name='Sheet 3' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{610803FB-43D0-4072-B851-EC8ADFF12F8B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.08g9a9x1aemi0u14e13gp1drqfsj].[none:ST:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1EE4C55C-E72E-4EF2-A2D3-A38AB41E3D56}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B72AA71D-161F-4190-A67C-306636F21AED}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_RecruitingPeriod:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0339DF17-CA74-4ABB-A827-F7E7AD8915ED}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[none:Primary State/Province:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{90A651FD-92A5-453D-89AE-37EE5E632722}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1341B3A9-A877-4043-BB68-42F055D1A00F}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C99DF2BF-4597-4523-9744-96EAC668405E}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7BCDFA0E-0E35-4154-ADF3-E21B85B37183}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E7707FF3-608A-4634-BBF5-7268CF397978}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Targets 2017 and 2018]' type='filter' />
            <card param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[yr:Initial Source Date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{031A6622-FC1D-43C9-B698-D601029EE91D}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:City_State:nk]</field>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[none:County_State:nk]</field>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[twk:Date:ok]</field>
            <field>[federated.0vcsg5o1whb9541dxy5bo0rm52k9].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74DD62CD-4A3D-47C4-8CE4-F9AE3AD49ABB}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2088AA00-E2A7-436C-B24B-B930C0E0259A}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.18lwnmp17902tw1ft5o7o0y4tiyt].[Primary City &amp; Primary State/Province (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EB6CA79B-A0D1-4FAF-AA4F-7CDE8E9C0CA2}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='240'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='46'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0ld2lnz1ff4gt611odja404yg1lv].[none:Code_Vendor:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{67243915-55CB-423A-BEAD-ACD494EBFE69}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      3jx3gf8Hc0ovPCTQAaEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy953NcaX6o95zOOSNnMGdySE7endGmq9W19kplu1wqa+2/wl+uy1WSy5/8
      WSW7yv5w6yqVwl1pZV2tZnbiMpPDCIAIjQY659x9uk8+/gCSw9kFZ0gQILEcPFUsAuTp97zv
      6fN7wy8Kpmma7LHHtxBBEATLy+7EHnu8TPYEYI9vNXsCsMe3mj0B2ONbzZ4A7PGtZk8A9vhW
      sycAe3yr2ROAPb7V7AnAHt9q9gRgj281tsd/qdfr6Lr+svqyxx6/ga7rqKqKy+XakfaFPV+g
      PXYziqLQ6/UIhULb3vYTfYGkTo7/7T/+KTVR4dJ/+b/4Tx/ee3IrhsY//uM/oz76VeHqL/6K
      v/zg9pY7Vs8kSFVamIbCrdt3UVUVWdm4gylWqPY2ruu0aoi9FuVy55nvIbdrLKymAEjH5yg1
      JeRejeXVHM8zI2j9LvOLK5imSSm5QKoiYuoSCwsrGC9gqlm4eYGPP/6E+UT2qT/T79bp9p9t
      5a+m42SqHUxD5otb9zBNk0YxSabcftYu7xiJRIJsNoskSVQqlU2v2fwMYBpMRDysZfPIggsL
      GvPXP+fv/vbvyazN8//+1c9YWF7hH/7mr7lwa5l6fo1//ru/YD7XwWJz8Obr5zBNY8sdl9pd
      cuUi/U6TtUwBpdel2mzTKGW4ffM69b5JIRXn5t0FxH6HSlWkXkyxsJJEVXos3L1NqdGjVcky
      v5hAElt0ZI1mo/XoHkpXpljMoBoy6XSaVlumlstTbdfR9K2/qZqsUcynkHSVQiFNrdZHLCap
      9fq0+9qW231ajp09SyQ8xpGJKJ2ehNQT6TRqLC0tkMzX0KQOc3dvk620KGcSzK0k6XWqzN25
      S67aRpPa3L1zj6Yo025WWUtlaVdz3FtYRnnsucjtLtlykV6zzlq2gGmaZCttmuXMc00g20ky
      mSSTySBJEpcvX2ZhYQFN07h48SLFYhH4mkNwbHaW5K1rBCMjCJrM/eU1Krk1Utkcun+KMbLY
      93+Xt07txxMZ5XfO7iOeqW1LxwWrE7dNp1goERsZRldkOr0W65kq+6fHkBsVKrKVydHYxgeM
      Llcu32R17g7r2RS5qogmt7l69SZrK/fJtxXmr/6KriZ85T6TIz5WFtYIjI4BJulyg4DaptSV
      n6v/M+MhVpbTeCMDACxn6ox6DHKVxnO1+yxYrALra0nymRSdah7dP0Kzmmc9nmB4bIRCsUhy
      bRVV1TBNgaGJaSprcW4vLDE5PU58aZH78/fx+32sJIuMRFzE175cVQSbG6egUKrUGBgaxJAa
      tEUNqd2go2x98tsuOp0O/X6fUqmELMuMjIzQarX44IMPmJ6eJhAIAE8QAKvdw8T0EcZjLsYO
      HWN6NEYsEmJq/1EGBkc4OjtMcOY8tswVrs6tMTU9hdM3wHjUi6Z0+ehXX9DNLbE0/wUf3Yhv
      aQBjUQ8rFY2I62EXLcidKivrWSx2K81SllS+sjHbCFaCoRCjk5OE/GHclj6pXJVgMMjwyBhu
      JHyxIdrNBo1qGeXBau8OjVAoZBgK+tC7JWQ8OAIeCqnClvr8EFtwjHZ+mXAkClqXviag2xw0
      S8XnavdZEKwuYnaZkurE57ATiURwuezYrDqry6v0FJ1wJEw6sY6i66QTy4imjaDLytLiEoLd
      TWhwlFjIh6CJrCQyuDwuyuUvtxITUTfxqkHIKVCvVrHZbdhsVqr1l78NSiaTeL1e7HY75XKZ
      tbU1isUiIyMj3L59+9GWaEcPwbViHmd4EJ/T9s0XP4ZhGAiCgG4YCIDFImCaYBo6umFis9vR
      NRUTAbvN+uj/NN3Ebrehqio2ux0MA003sNmsCBYLpq6TTCaZ2bcfwTQwBQFTN7BYBQzDRBAs
      WCyg6wZWq3VLYzZNc+OPYWCxWjAMQACrxYKu61tu9xl6gK6bWFG5e/MW48dfJ+ISMAULmAaV
      zApz8SxjB05wYDSMgQW7VUBRNWw2OxYLKIqKze5AwMRiETB0HVU3sKpt0i0Ls6ORB98R6IaJ
      AAiCAIKAgIlpClgswjf29GnY6iFY13UsFsuj70NVVaxWKzabDUmSsNvt2O12YU8LtMeuZqe1
      QJtOzboqcumTz2jj43e+c4qLH32Gf/IoR4btXLx2h4HZU+wPSHx+a5Vz77zP1GDguTujKAqt
      VuubL9zjNzAMA03b+QP2y8AwDFRVRRTFHWl/0xVAV3s0Owa3PvgrFPcIsRNvkLrxMe99/wf4
      /R7+81/8LQG3nZ/83nv8/PN1/sc/fH9HOrfH06FpGoqivOxu7AiqqiJJEn6/f9vb9nq9m68A
      FouNhSs/x5x+h+F6Am/Ih8tmQdclfv73v+AHv/+HXP/kA7x+H/T7296xamqZ+XSZ8ekj7J94
      oOnRJLqaFZ/LDkApvUJJcjA7OojP53n02UwmzcTEJOgyxXqP4YEwAKausDR/j67pwW/tk87X
      CI/NcP74gW3tu2lorC3NU+kJhFw66VyFwPA0b546tK33eRLF9UUSxSaRoSkOz44iAKrUxbD7
      cFqhUa/gDURx2J7NC8YwNDTNxOGwP/q3XrPMwvI60YEYhVwODQtHTp1nMODc5lFtjXg8jsPh
      YHBwkE6nw+Dg4G9cs6kAdHNz/MuVVd5+w8v+g1N8/E9/j80XZeGTn1Psh0muppiJOfjPf/PP
      jB55Z9s7rvZNzrzzDgFMEvdv0zL8nJr2U5F8qGKDfKbASmKJ2RPnaTY7WA2RuaUUR06eoVat
      MhTxc/v2bQz/1CMBaFRyOKIznBn2Y7FYUdQFjm7zyw/Qa1dQ7DHOnx4Ciw1VucvhF/TyA+ia
      jdOvnyN+b5FOy0OjUccumHiGPRQT91nJ13n79TdYvz+P4h7g6GSYu3Nxpg8fo19ZJ19XOHXm
      OOX1JZq6l0PjIfKVOo16mVyhxRvfeZ+Y3wEYpNJFTpw9h9U0iXmc1HHvmpffNE3y+Twul4tQ
      KMTFixeZmZnh+PHjfP755xw5cgR4ggD4J8/yf/4fZx/9Pnvo9KOff/jopzO8tUOdV5UWNy5f
      Zv/MQcSeTKmYpuQ9SMPqpLS+zPG33sbqcXL44DjLSxnyK3E6po2V9SxWILGa5MTZc6Ryrcfa
      VPD4vNhsDmDn/J0UVcHjCWK12b/54h1A7tW5daNBODxAPZ/CiEziaqVplgvI3kEOz7hoF9Zx
      jh6hn4uzdC9Jt2+yksgQsOucPBhl/ot57NEIEUuHXKZKwRzjzOFDhAfUBy8/gI4pOHBYLVgE
      ge3fBzwfnU6HWq2GrutMT09z8OBBFEXhgw8+4N1338Xr9QK71BvU4Qzx+rvvMhHz0Gx3cLlc
      GKaJIEBkeByfw7qhdgMEwUIgHMRqcxIJBRAEAYdV44vrt2j3VaqFPIoB4eggq/eucPWLu8ga
      WITtUdP9OoFgjPzaHS5du4ko6zt2nychAKap0262we5lZCiMIAjY3E5Ka8vE0yVsLifrC7cp
      1EUCwSBYHUTDftrVPF/ciRMbH6ZbXCdRaOJ1exgbGcYqWEit3KXc6FCu1gEbIY/O5StXSWQr
      GyrQFzzWryOTyTAzM8PIyAjVapX5+XnS6TQzMzN8+umn5HI54JV3hjNZX08xPTPN7vlqtp9n
      PQTL7Qq3FlZxh4c5fXjm0b9ns1nGx8e/9rNSq0zL8DMUdm+5v8/CTh+CvyIAhmHwSsvDK4qu
      66+sFkjTNCRJwufzbXvbfr//q1qgdru9Fw+wx67iYTyALD+ff9aT2HQLZJoG/b6E2+1GU2UM
      bDgdT3BnME0UVcXucGxsM0wTRZZQDQGP28Uu2hbu8VvIS4kHkDs5/uR//d8pd2Uu/cP/zX/6
      5dfEA5g6/+VnP+ehHVKTm/zd3/wV//R3f8Fi4dn99AHKiQWWc1VMXeLzC5eRpT7t7kYQgNnO
      kX/QbKNWpN2pkc02n/ke/UaJG3NLACzfvUKm2kNqF7g1t/5c7ryq2ObazdsYpkl66ToruQ6G
      JnL9+l2ew8v6qcmt3OWzCxe4s5REFhv0Og3WCg3yqTXkTZw0W60mxtdtew2Nm9evIcoaYjXH
      1buLANy/fZXmM8YQvGjm5+dZXV2l1+uRz+c3veaJXmpHZgZZXU9jeCK47XDzs//K9YU033//
      LP/02RI/fu8UX1y7zb6T5xCrWf7xL/8fpt767zg3YcduNWn1dbyurakCdVmn1q/SdSvU2z00
      WaarGIjVNInl+wye/Q8kMnPE81XOnDlMq23FliySaZocPzjK/J15Rg6exCmVWC/3ObpvBEnw
      YEh9BgejAGh9HbFdpa/1qNRbDIZVytUqmgGKZuK0bW3p0lWDfquGqEo0mk10ZFpqCcNloyWq
      RHw7qx7VNStHT50gu5qm3wbD4aTZBW+/SWBAZGH+HrHpw3iMHqV6D5/fjsflYO7ePQIjM4iV
      FLp7gBOHZtjwZzOx6H3ytQ606uiShClXEVUX1UqF0OTwjo5nq5imSblcxuVyEYvF+NWvfsXU
      1BSnTp3is88+4/jx48DXqEFDk/vJ3blEKDaOoPZYTJZxCxLlWoPYvtNMOxsEj77PWyf3442N
      88O3jpOvtFD6NQz3NN89Mc56rr613lsc+BwmuXyVgZEBdEWiLTYoNw3ePHMEqV5B9Q1y8tDU
      xgD0Nl/cjtMspClUq/Q0Aa3X4ObdJdq1EnXFyvKNX6HZvqq5mBgPsXgnTnRsDDBYTaaQi2ly
      LWlr/X7A1FSMlfl1/NENK/ZiMoe1XWK9UH2udp8GVRZZX0tic7rot+r0H5v1c0t3KXRlEok1
      Msk0E7PTtBt1yplVwjOnGQ276Eky2dUF2o+dqd3RUaRKBhUXHoeV/Oo6otFnbT37QqLctkKz
      2SSdTrO0tES/3+fYsWM4nU4+/PBD3nnnHUZGRoAnCIDNGeDwkRMcObyf6aPHOXlwmsOz44wf
      PsPE5D7OHhzBN/s2Q+ICNxbTHD92FFd4nMNjQZy+EQ6OCCS6fg57y/zi6vIzd95iszExFCDf
      tRB12xEsFmxWJ1Iry435BC6fi/LaMotrBRCs2J1eYhEP7kAQj9MNep96R2Yg5Mfp9mGR2wzO
      HKZVK1PMpVF0sFiteIIjiN0GAyE/Qq9CeOo4x8+dplPcut++YLFg94+gdfKEY4PYEHGHJ9h/
      7ASW3s4HxAgWE7HTod3pY7HZsVqs2G0WbDY7wcEBHCaEw2FCsWF8Ljt2mx1fKMr6/DUSmRJ9
      WcHtcaN1KuTrG+Ytm82JxyJhD0Sx2220DTvHDhxmMGBFNV5+8Mtm5PN53nnnHc6cOUO9Xmdu
      bo5UKsWRI0f48MMPyWQywA7bAdqNOk5/COcz+p3sFKZpksvmGJsYf6XtAttBNZ/BMziOZ4tb
      we1ipw/Bu8YQ9tDtdY89HkfTNPr9/o4Ywlwu1+beoJrc5Jf/9WM6hp0ffO91PvnwU3wjBzk9
      4eDS7SW8wwc4GpC4sJDi9Fvf49jUwHN3xjAMJOn59t7fVnRdf2XjAR4a+Ywd2mptugIYuoos
      q3z8s78E9yATb75P4tK/8v6P/wNOvctf//wj3DaT/+EPvs/f/usCf/zf/2BHOrfH07EXD7A1
      vF7vE2qEmRof/8vPGDr77xjzCNjsNqwWAbGW4Wf/9XN+/w9+goAFm80GO2A5Lq3O8cmFC8yv
      Zp75s93CMlcWMpimxtUPP6Ku6YjFFNcX17e9n5uhdFtcvHodwzRZn7vE/XQLQ+tw6eJNtBew
      2RQbRa5eucLt+RWkRpZkbSsWVI1O55v8O1WuXbhKXzOQKmku3FnCNE3u3rpKu7c7VqN79+6x
      srKCKIpks5vnSdp0C9QrLnMv1eKoe4Fzp47yyS9+hjs2xdrty0iGj/m5VU7PDvAXf/9vHHrt
      /W3vuKaYTB04QMTjI7V8j5Jo4ei+Ie7OrTB79DRKZZVyz87+qQGwOpEVjeGByINPG4jtFr22
      G7GnoJkmhWobv2kiGSaubQrWfhKGZmJIHdpyn3avh25XqaeKOMMeml3lMXfinSGXq3Li9Cl6
      ooSgVRFVnfTKPCURDu0bRjF8GL0G/pCb+/MrDE/vp11MYnoHGfHqLKfKTE3GuH59mVPnz6K3
      CvQsfmZiHtLlOqPT+wm57YBBwG2QLrYxW208goapNjB1F+VGk4AntqPj/CZM06TZbD4KiLl6
      9SojIyMcP36cy5cvP7IDbCoAvvHT/Mf/5csYgP/pf34YOPIe7z123bEdCggwDZ1Ou43LYqMn
      9jEMO/1uD9U06UtV5u4k8Ie9aPunuHvhAue+/8PHPi0w4HOwli0QGRzG1ERSa+sIFnAP72N6
      wLsznX6MiakB4vOrxKIxGhosriUxEFizBYgdGtvRe2uGgWBqZNYTzIwHQapT1QMcHlZYyxXw
      +KYw6lWqHYH9x88g1OLcLndxuXTCoz5MdOz+KEePnmTYKfFptozLJRLBhzUyRfAx46YtOIbW
      XEdwRLDrTUrxZcqyQWk1yf6xlysAjUaDlZUVDMNgenqao0ePous6n3/+Od/73vce5RrdHfrJ
      X8NiE6iVSjTaInaHHanfR7fYsBoqkmxnaMiH0xdEajY48tpJyvkSa+vrDz7rZHhyhHpNYjTm
      QxFFDp95g/fffQNZ3Pl8NYLVitM/ikWuExkYxmXpE5k8zlvv/Q4erbvj9x8fDnPr1hyyYcXh
      cOL0BbF189xJVBmOxSgk7pCtdxiOhFi4c4OG6cVvN/H7fFjtdgxVQVYEOpU1iqJA0O3A4/Xh
      8vgYCAeQ2mVKjR4g4HA48FotuCIhXC4XbVuY918/z+yAF+Ul6xar1So/+clP+MEPfkCr1WJx
      cZFMJsOpU6f46KOPHm2Jdo0a9LnQ++SrEqND4Zfdk5fCizwENyslnOFB3C/IPvBC4wFeJrqu
      75jL66vOQ5fhVxFN05Bl+VEI43YSjUY3twO8LHaJLP7WYbFYcDp3RzD6dmO1WjFNc8fGt2sE
      wGq17oiU7/HbjaIomKa5Y+/GrjwEV5NJRKCaWaTSe7bPppLJb7zm+sf/SlU2kerr/OLzO5im
      xo0LF6j3nn8fLXeafHLhEoZpEr/9KXPJJoba5LNPr6G+gBUus3KPX124wEq6/Jv/aWgUy0/2
      SF24eYl4Jkup+GV8ha7IxBNrG78odZL5LxUJ5fVFvri/Bphc+Oj/o9LVqBWW+eJecptG83xc
      v36d+fl5ut0uySe8F7tmBXgcqdukkEigFLOMeie4dvcuntgEIy6ZpXQJu92Jajo4eWCYxeU4
      jsAIs4NO5paTCM4gbusqiVyTIyf2sXp7ma5g5923X8P2IDzNFwtRSuWo92v4A27Ufhdf2E0u
      Wydy8Pn8200dnIZEsy/SUw10SaOSLBAaCdFsywwEd6bUz0O6vT7RwTGmRsMs3r5BVdQ5dvIk
      5dR9rN5hHA4r6cQihVKF2PQJXL0CiWydsalhFtfznBqcxsSglFomUehw5MghJEmimFxmNZnA
      O/460w/upel2DLmF1MnTN3xoukG7piAYMgYvd3Y1TRNRFFEUBVVVuXz5Mqurq5w+fZpLly5x
      +vSGmn9XrgCCYMHpcuGw25G7LfqqTjy+giyrHH3tDbweD+MBJx1JZurwKbxmm9Vck9ffepuo
      12Bubgm536XebuAMTjAT8SI/NvlanSEsShXJ4sFjgXpmmaV0i9XEItsxSY9NDxOfixOKxgCT
      pbV1autLrOY2r1KynRw8dpqYz8Li8iqmI8T5Q8Pkq236upXZ8Qi1ZgtRMnjt9bMo9SJ1xcHp
      I9MYNj/HT55g/3iIdqvOvTvLKL0Wja4MmFTbMm+98Rpu21ezWw9GvNyZLzIzE8M0ZJbuL1CI
      3yfTernW4Eqlwvz8PDdv3qTX63Hq1CkGBgb41a9+xQ9+8INH2S925Qrg8ocIjY0hIyIJFiwW
      K9FIGKfHh8NmIxgM4DDBMGTmb14nPDTJaFDlypVrhCIDTI4PUWyruF0ebEEXLsFA7VTJSFYm
      hiJ4PD7sSoOubwSj20Q07Pz+771BZW2ZjmYSsG9dxWex2XD5R3CXlogM7kMuK/gOnuPg9CDL
      K8nte0hPIJ1YJFvpMDw1S2l5nmrNz9FTp5BdBlaLFZ/Xjctq2YgDCARplZPcyHQYPXIGr9sD
      WHF7AoxPDVLr6ridDvB60Ttlrt1cJDp1gkQiyczsNA63G3/QS6kmE/Z60cQKJ3/nD5gMKKzn
      KxAc2fHxPolWq8VPf/pTRFFEFEUWFxfxeDy88cYb/Nu//RuvvfYa8FtuBxDbTUyHB5/rm90L
      xFYN0xXC59zp/Py7BZ1yufkoBPRJ16zdn6fY1Tl58iQ+1zfPh7oq0+j2iYZDLySm4lsTD6Bp
      Gr3eM55493jl2Uk7QDAY3D12AIvFgsOxs45iryqvsiHMMIxHf3aCXSUADx2UxFYV3R7AZdXQ
      ceD+mhJLsihi8Xr5plwLoih+4yyiq33W11IEojHqpRI6AiNTs0R8z6K5MWlVC5RaGl67SrMj
      YfMEOTTz9SkHnwdN03ZVXs7tRBAEdF3fsclxV2qBGukkd1YTtBt5SvU+Uk+kJylomoZp6siy
      iq5pmEAzk0FkQ+3V73XpSQq6ptETu/RlFUPX6HbaJNNpNEWi0xUxDBOpL9Lp9r6i9VlZmMMV
      jGKxWBlyy9QMP54nJQR7AnK3wUq6RijgwuuP0K7ViUS3f//6JJqlFJcuXebWvSXUTSbNdruJ
      qn5zDIfSKXPhwkVuzq8wf/Nzfv5Pv2A1s/NarO3k6tWrzM3N0el0WF/fPB5k16wAj2O1+xiw
      apTbBi5rhZ9/cpW+Lcj7r03jtDtYKCmMek0OPfDpBpDbBW7MpbGhE4uFqHU23KhHgya1Huim
      yZ2bt0Aw8Y8eoBS/iU1wcvDd7xF7MLloFifjww/DO2v4rCFczygAYr/N8PA0gwMbzls+n59Q
      YPvzWj6JQqXDmVOHyZY6yNUcd/JVxoZipNdTeCJD9MoJdPsAs5MRkuk8g5MHMJsZaq0Oo4fO
      MxHdSB2TTJd5/Z13cVoARjBsVfZPPH/o64viYYx5t9tF0zSuX79OPB7n5MmTXL9+nVOnTgG7
      dAUAGJvdRz6xiiGLRKaO8u7ZY4TCIeZTNQ5FVbqGByuAqdNqNBB7It7wMCG3BRU3R0+eYjDo
      RFJMxifHcVp1DKubscEIiqoxOn2QY/tG0TQdWdnQWVsNmVypSr21dbdlr9tPqZSkUq0gbzYF
      7zAW08CwebDIHTpih/DEIcx6jZmzr2PpdxiaOcDpU8dp1uqcPnsGsVJCs3k4/+Yx+vUvlRAO
      i0Bf1X5rc8VWKhWWlpa4e/fuIzvAyMgIN27c+IodYNdogR5H6nax+Xx0qyVsvijt4jpd083+
      yUEq9S4hr4We7iLsd9FvVVhNFxkcm0ZrF9FdUYYCLiwuF0qvh82is5YuMTg8gtPoka31mJ2Z
      RJUlHBaTVqtKUw+wfyyCrvRJrK0THZ0l6tJp6U6C7mddJE2alTyllsbszCRSt4M3GNjRmeZx
      d+hes8zcUgKrM8DB8QhacASfUuXW3Aqe6BgzERuLySqToyGSqTwDkwfwWFRGRvwU8godscXB
      AzPocodbt+dxhEY4dXiIZLLN9PTQDo5ic7bqDp1MJolGo/R6PURRZGFhAb/fz9GjR7l27Ron
      T57k6NGju0cN+rIwdB3BYvmtPkRuVzyAoUh0FIPgYzXXXjYvpUjetwnLjheu3nkEQdiWAtxW
      t5fIi6l78dQYhoHFYtmxAuPfegF4FbBarS+gAv3LQRAENE3bsXiAXXsI3mOPF8HeCvCKsXLj
      c3qxQwxY29j9Ewx+Qy0vuV2mZ4sS9mysIPGVFQ4cPPiVa9qVNLcW1gkODEKzxFK+zpnzb3N4
      enemRn/I559/jtfr5cCBA5RKJQ7+2rhgTwBeOdz+AWr1AkrUjUXucPGza5iuMAdmw6TjObzR
      GGMjMVbjGaaHffRVE1vEw82rdxB8w6iNJJ9n8+w7fY7xyIb9olxpcP6d7+K1C6BMYMYLu/7l
      f1jvrt/vo+s6165dY3FxkTNnznD9+nXOnt0oA7wnAK8cFo4eHOLi5SWOjrWJHHwTb2WeYltm
      9ugpfFqVe6vrCA436VqPKZ9JudHAMzTNockR4nGNmaEw2ce0SjarQE9ScGLht+Wkkc/nWVpa
      QlVVpqamOHfuHIqicPPmTX784x/v7rxAe2wdbyiEyzfC9JCf0MRh+umbVIQAE9EwPrcDV2wY
      p83JsYkw7mAUlz/MwEAM2gXuLiUJhEJYnG78TisL95cwgbHJKVILN1lcL2BabETDgZc9zG9E
      13X++I//mD/6oz/CMAzi8TitVov33nuPjz/++BXLC7THtmMYfbqihYD/5Wab2Ol4gF2zBVIU
      hVar9bK7scevUXnJGesfpkffKXfvvRXgFWAvPfrWeHJ69JeMaWwEeBhPqMBmmuZTJNEyn/j5
      J2HoOqYJ5gMNgmGaYD5bO6Zpoj/8vGFutMXDNp+pO1vCMDaKZTzr2J+WzZ67aRgYD74T47Hv
      ZqeCWJ6Wh4E0X/e+7EoByM7f5OIXN7h4/R6bPcJyYY1md8ODs1R6UkE7mZWV9DPd98qn/0qq
      0mb1zl3ERoKVqg79LHdWak/dhtyq868f/BJN7XBnYY31lTgasLpwB/EFOFYm525y7dZNrt9Z
      3KTesU6ptLVKlaVSCYDV1dXf+L98/B5X51cx6qss5DusrqYAWJif29K9tosLFy5w69Yt2u32
      pv2GXaoGtTr8nDg4TXp+kVouwf3VLN7oOCEa5Bsa45MxWrkk3XCMbr2O3qsRT1VxRUYZtHXI
      lGuExg/Tya7ySWGdo6dPkbxzm54rwvFxFwvxIqqh4xCsvPbe+wQePIXI6BTNQgr3gzdn4eZl
      KvYmjrG3n6X37J8MEk9tCI3YLHDpQhmx1WXkyPY+p81wuIMcOzTB+uIKy3NfUGtJTB44RiU5
      j83jZ30ty6FjJ+iUk1hC4ww5ZTKFGrJpwW6xcHDfOIuradyBAYY8BrGJGdKJZRYi5xsAACAA
      SURBVNbXkozvP4neLnHlUo7Y9BkOjAUfDNlHxCnR6Apgg0pmlWq1QFe1cGLnh7wpuq5js9ke
      lVf64osvWFxc5Pjx49y9e5czZ84Au3QF0JUuVz/9GGt4hHKtxdk33kKQm7QVgXfePofT6JNI
      5fH5fciShGF1cvaNNwg6rIi6jbfPHUFRdKLj+zl/6ghGI09HcJHP5TAtdk6ffYPJ6WnO7B/m
      8WImgs3BRMRBqrRRiv7Y2bf5zltnvjHc8tfxRKehmaKnmXhDI7zzne9wcOrFuBKrUpvF+8tM
      7Z+lr3p4/fQBarUWnsgIJ04c5/ChwxycGSUYDKJ2OvQsLs6dO8XY+CxHpmNk0nWOn38Dq95D
      kSVUVaan2Zndf5Bjh6bwhod4650z8GtZ9MYmJsimN1bcgYn9vPXWWwyHdjYJ2NeRz+dZWVlh
      fn6eTqfD2bNnmZqa4v79+/zoRz96FA9g/ZM/+ZM/eWm9fAKCYOfAqVPYey3CAzHu37tHbHw/
      gz6BuwtrDE5Msn96kmajic/nwe/z4XR5sAhgkRvcml/CGZlkJOLD63FhcbgRGzWiw2OMDkZx
      ON1YLQJetwupXaUomkT8bgzDYGB4nF6nxeDIIBabB68dDMFJwPt0MammaSLYbMTCAWTdRjTk
      w+31gmHg9gXYiYqxhmE8ClyxWJ1M7duHz+nApre5v17jwP5p3E4HHreHfrNIqaMjKCKCO8Rg
      NIjH5QbBitvlIDwYIzF/j+DQJFGflZVEjsjgECGHRrLYJRoJ4PV4MDSVVKZALBbBNA1cgTBW
      XcETGsDrsOLxbDzP5z28GoaxJWc4URQ5f/48hw8fRlVVVlZWcDgcnDt3josXL+J2u/mzP/uz
      P33ltECVbIJsXebI0cO4nuJt6/dE7E4PNutePMCzoGsqimbgdu2sneBbUx9gzw6wdR5fAV41
      HqZ8eei6sJ2MjY3tHgHYY4/N+NZYgh9HVVXsdhuSJONyuR78vslR1NA3So+a5kbJ1qfE0FW6
      3T5Op4O+JIEg4PX5sVu3Y4Nuokh9JNXEZjFQVB2LzUHgBYUZqqqKzWZDlmWcTiearmN/4rMx
      0TT9qZ6daeoYhoD1156RIvWQVBOHFSRFxWK14/N52eFinE+FLMsIgoDNZsMwjE3HuSu1QCv3
      76NqbT764CKSLrIcz1Aqln/TkNQrs5qrs5p6lnrCBot3b5JIrlMqV5i/dpXbS6v0le3ZQmj9
      Drdu3yGZTlMq5Lnw6WekilvTvW+F5fv30bU6v/zwCrLaZjVR+JqrFVZXv6yfK7fbVNqbFxKU
      pArZbOcr/2aqba7fuM16Ikm5XuLTzz4jVyyzQza4Z+bixYvcvn2bTqdDIpHY9JpduQIMBmwk
      4iWmD4+QX0niHpqmmksjltZJd2QCkXG8SplStUpg5hyt1DKFZJzDJ89z/9ZlDM8Qx4ZsLBRa
      6JICgpPv/fA7OAQBdBHNMcSZ4zMAuJU+8sAoAfezKjs3p9OtMzp1nMnRDY/JbrvP4f2T29L2
      0xD2WllfLjBxeJTyWhp3bIorFz6nr1k4dGCU5ZUMNk+I/cNO4qkCuIaRr3xCWfYxFTRYKjY4
      feIEydU4gjPARMxJMt9g+uAEjUIFyYxwcHoMARALOUaPn2c2vKEhq1ZbHDkw88LG+nVomobD
      4UBRlEd5ge7du8exY8eYn5/n3LlzwC5dAXzRAVLZApMDQ8QzJUaDNlRNw+YM8vo77+KzSUj4
      eOvsSZw2gaGpQ7zx2kGaxSre2DBSp4ZpcfHaW+8xOzXBsalh1IezksWF1mugaCqSvP0OVi6H
      m0azhqrIaNqLdwXwBUIkyi0ORP3czzYZdnRxDMxybDJGPptj5vSbRASVsqhw7s03iPicDI5M
      4DP7uIdnOH76DHZdZOrQGQZ9JplqnzffeYuYz0atWsbh9D7KCu0KBagXSqj9/gupfvMsZLNZ
      lpaWuHfvHu12m3PnzjE9Pc3q6iq/+7u/y8TEBLBLBcDlCTE7M4kvGGB2dhqn1c7I6DChgQHs
      CMRiw4xGndyOFwkHvAxEwtjdYUYmBrHrOrMHDhKIDuCxQmxggOBADLmaYTVbBcHOkYNj3Lz+
      BR1ZwxuNEXyK9OpP3ffAADGXxO35FXQEhkdHXuhD9ocizE5P4nnwt8s/TExokBEtnDxzjnbi
      Ds7RKQ6NjTB3Zw5vMIBpqAj+MEPRAO1sEnt4nE5hBdM3yusn9nHn+nW6mpfz33kbhyGyMHeX
      vmZgC4wy4uzwxfyGm8HoyOgLHOnX43K5+OlPf8pPf/pTnE4nqVQKq9XKD3/4Qy5evEixuOFC
      863RAqlSD+xu7L/F+v5dgWnQ6yu4Pa5Xoj7AV84A9Xr9ldUnbyC+7A7sCE/nHbu9dDovxmbz
      0A6wUzWkvzUrwKvMXjzA1nhiPIAqNfiHv/8ZPcVg5YuPuTD3NW7Fhs6tW3d4uG6Yhs7qvUtc
      nkuB0ebnf/23/OO/fEJff/oDYTW1wlqpiWkoXL9xC1VR6EsbX7DZLVF+MJG3mlW6YpNicXPV
      3dcht6rcW94o/7m+dJtCo48sVri/nNnEjfjpUfsd7szfxzRNCol7rJdEDL3PvbuL6C9kqjFp
      t9tfGYNp6igPEgDrqoLydYdz0/zKbGsaGq1WBxOQex16sgbotNtbTyD8ohBF8VFWiCetIJsK
      gK50WZ9fIFurk1tLsJqvkZi7zoefXqbfqXJv/j6rmQpz1z7l+sIaczev8NFHH9OUNh5s0CkQ
      z1UxGjma/ln+8L/5Hu5nMDIp3T7FSoleu0GmUEHp96i3O9Ty61y7eoWmZJJdvc/1W/cQpS61
      eo9qLsHthVUUWeTOjWvka10axRS37i3R7zRoSSq1WuPLe4gKlUoexZDJ5fN0OgrVXJFmr4n2
      HG+qLutUSzn6ukqpnKfR6CPmk7Q0lU5/5ysnGkqX+evXKPW/fMk1VSRX2LBFiKU0+dbXl6JK
      p7+0q2iqyLUr15E0g+TdS8xnW6jNAtdvztPb5bvlGzdusLCwQLfbJZ3efBLf1BtUk9tUajUa
      LZWgB5qmH5tY4v7dm5hW+PB2he9OdLhaG+a7J8ZYXFnjzUNhLqUtHJkI4xV6zOUVjs8Mk03M
      8+GHFzl45tRTC0G33kSxGijtLobLy5DfRa3XpVbucnJ/jHLLRLZaGY+4sTkd9NoiC3MLiM0G
      Vo+Ncq1PNOTi9s07iN02rugoa7eu4BueIuDZ0PgonQ42t0Yh3cQd9mG1B8hlErg1CSM0QvAp
      CsZthiZJ2Ox9coU+/oAN2QxRLqWIOKGhORgKb3+tgMd9gZrVEp7BQeqFFv3yCpdux4kOR1i5
      e4/19QLhmA/N5mL99iWu3rpP0GXhyvwSqUwRv9Dj5twSHVVgamz4QdsK/WYH0+FE7rURvIPI
      7TpjoyFaPQsh/866PG/VG1RVVcrlMrquE4lEuHDhAisrK2iaxqVLl3C73fz5n//5nz7xjbQG
      JuglrxEamQFdZjGeJBAMYpomk/v244+OUV++zI2FJDaHC7fTgWmaaEqXj375KfNfXGExVUJA
      QLBY6DXyrOfqTz2AsZiX1ZpG2PlQ12Cl38xzaz6OxWmnmoyztJbfWOotdoJ+D/5oFL/Hjyk3
      SBUaBP0evP4wdq1LcGSCZq1CrVzgodHXFRqhXM4xEPSid0rgjhEZGaSUzj/Tw/6NZ+cfpVuM
      E45EQeugCW5cwQidaum52n0aCql1VlfT5EtZgsOTzAx6qLdlpg+d4PjUECpgqAp4I4zHXHR6
      OkdOnWdqOIQoyhw/d56o76tq4cDgAKXEfXyRYTBV8tkMq4kU2ULxubaLO0k2myUej7OwsECn
      0+G1115jYmKCXC7H97//fcbGxoAnHIJ34ly8evc6vn1nGPF/s859587lJslkiunpGXjCVycI
      YJpsOV36k/ouCMJGrMAOpGF//BBcb9QJh8KI7TqyLJFIVzh67BCmZmIzVAybgGF1UkuuIFk9
      DMei2HwBjH4Hl11gYSFOZHyKfinL1InTOE0FsafR6zSJxoI0ewY2CwT9PpqNBqFwhJ3MLL/V
      Q3C1Wt0I+nlQJWZhYYGhoSEOHjzIZ599xpEjRzh48OCeN+irwPZrgUxkWdmxjMzPwkupD2Ca
      Ovlkgr7Fz77JQdKrcVzRcaJegdXVdaLjs4SdOivreWb27cft+G1JmPdqshMlZh2Ol//yw5fp
      0XeqSuSmK4Aq1blzJ0kufoOh2cMURCu9WpHvnj9CQ4brN+cY82gMTIyTE4P8wffO7Ejn9thj
      py3Bmx6C7c4wo1ErPfsQSrnJ8ddfI2jX8Y5MI5fXGZ/dT0uxc/7sSbqFr3O33eNFI/d6fJ12
      stftbMlduVUr0VcNTF2jVK5gmNBtVOm9hEKAT0uz2aTT6aBpGr3e5qrfTQWg30jxL58v8qMf
      f5/JMQ/JeIq2rLN+7QOKlgneO3scJxLJVAbbDkjmHlunnE4jA2qvRbneZGlpBVmRWF1aoa+o
      pBJxFMNAliQ0XSexuoQoKRi6hiTJGKaJpipIkvyV+Iv1tWVS6RJiq8Dlq7fRTZ1UYoHV5O6t
      HXzz5k3u37+PKIqsrq4iyzKmadLr9dC0DZvMpmcAq9XFzGSE2zdvcu7N7zJ07wb7fud3cXTS
      1FMlbi/Y+L2f/Huu3lrh975//oUOao+nQ+l2qLdFlpdXMCwmqeUVZIcHC1BbX+DTa3eJjO3H
      KZXoKDYQy0iqgX9kP/W1W9gQGHv9x0w+OHu6/FF0qUWpqDIyFkMVWwihWcxuAYOhXedWrCgK
      LpfrUV7RxcVF4vE4ExMTlEqlR3WCNxUAR3CYH/3oywII4TffffBThIlDX173/ndjOzaAPbaG
      aeiIoohDN7G4guybnmJqcgqLJDE6MkCuU0bsihw6/QaxoB+l7WZ4coj4QouD+2Kk6jKDE/vY
      FzZJqgaqZmK3WUGw4XOqFDtW/DaVejHF+loTi9Zn7OAJYp7dpQhJpVLE43EkSWJ4eJj9+/cj
      iiKNRoPTp08TiUSAPWe4V45mKc1arsrY5D48Xidau0JdcRBzqZR7VoZCLtxuF6tLy3gHJ4m5
      NFIViclBN4lMjQOHDqBJPbwOqNZb1BUHh6cG6XQ6uKwGbd2BXZcQsOAOBjFkEc104NmmiLpf
      Z6uH4Eajgc/nQ9c3JoR4PE4sFmN6eprr16+zb98+hoeH9+wAezwZXdcQBCuWlxjh/q3MCrHH
      s6Hr+qND3Q60vkPtPh2qqu5oPMCeALwCmKb5ygYy6bq+o4m/dtvhfY/nRBab3F+4T1P8TdcI
      tdel3+/TU5/tZerUizREBTDJp9JogNSuU+++5PIx30C1WqXZbD7yB9qMPQF4xYgvxxkYHUGT
      eyiKiq5paLpBX+xQSCao1mqkSxW6PQlNVdBNHqkKe2IHSVbANFDUL7dU7Uae+FoBXSxz+9YK
      fSCbWieTL76Qoh9bZX5+nng8Tq/XY2lpiWaziWEYlMtl+v0+sLcFeuUYGxtieWmJkdlp8otV
      JiI2Wg4H1WQOqy4TC4RpVivU8zmGPRZCB8+QXV7EYUioziiCIjM5GaPeszE9GgVAsPmxGyLZ
      ssLoSBhMGcnix6F20U0T2066g24RWZZxu92oqoqmaZRKJSqVCqFQCE3TOHDgALC3ArxyaKaV
      mZlJmtUKqtylWKqg6io2hw+/1wVY8AVDuOxWBMGkVsrTFlVs3jDHDu3j8GyEG3fWiUZDG2kj
      HzASc5IsyvhddrrFNLlSkWImTb69O2ORU6kUa2trrKysUK/XiUQiuN1uFEVhcHAQt9sN7NkB
      Xgked4fuNquUah1GJ6foNwp0FQuDQzG61SKSYScWC1Eu5HGHBgm5IFuoE4yEcTusuFweqvkE
      mabJqf0DLCVbHDs0iSz1sNjs9HoyDgsYFgtOlwubqdJVLPh2yAYAW3eH7nQ6uN0bNQokSSKb
      zRIMBhkeHmZpaYnR0VHGx8f37ACvAtsZD6BrKoLFhiCYmAhYXvL25qXEA7wM9uoDbJ2XkRfo
      RfGwTvBOsbcC7LGreSnxAC+bVjnFxYuXSOSeJ624Qav5ZX6cWm3zttqVLMXGhq94Mr6EpIPU
      KpOvdTa9/pvQlR5ryQymCY1CkmJTwjQ01tfTLySAvJZLcPHiJVKl5nO1Yxo6idVVdBO69QKZ
      UgswWF9L7tpA+F8nn89TqVRQFIVmc/PnsSsFoFfvc+LtN2jlU0hyj0wmQ1dS6PdEqrU6YrtJ
      Lpulr+o0KkVK1QaJW5e4s15E7nfJpDOIskI2uU4uX0TVTdKZNJrcI5vNfyUxVLvXZm1lHaNf
      YWEuTleDXDpDLl/Yko5b7SnEV5dQDI1U8j75Ypd+ZY31fJWOtPPW2l5H5fRbr1NNr6FqMrls
      FlFS6fX6GLqKJCn0uh1qjSbNWoVsvoRu6NRKBWqtL1NHmoZJem2RpiiTW79PutRGaebI5QsU
      Ozuf32g7WFxcJJFI0Ov1uHv3Lvl8Hl3XWV1dpf2gDsKuOQM8jiq3uH7pCl5PBLVT5erFzwlM
      niFChdDEETLFdfxhP8l1leTiXcYOn8EDmJhIrQpXLl0mMnOcmFWh3yiR0Dbk/O7VT1lMVZg9
      +33ePraRHhvBgd8msparMzY+AKh0dCdeoYdsGLi2UDVmesjLWrKIKxihBySLPU7MhKk22wSG
      w9v2nDZDFqtcu1whEBxibXEeizdIdmEBu9XGkQMRUlmNSmaV2ZNHSS0m8NhsaEKXK7+8CO4Y
      f/Df/nvcD4Y8FAtTLlcwbG5cNoFcucX+A5M0SkWG/eMvJDnuVun3+7hcLmRZfuRLND8/z/Ly
      Mn6//9GWaleuABabk5GxMexKj3S5xvHXXsMtGPhjoxyYHMIdiDIzM4UdC4ePHKCYWccbCqEr
      OtVynaPn3sBl9rEIArqhY7FsDNPuDvHGu99l/0iITqfzaCkfHguxlm4S8jjolZLkKlWqpSxr
      xa0l03UNTFFZu0c0MgBGn1KpxPJainQyt01P6MlY7R5Gx8ag393IAaQbgIAutUkkUijA4Pgs
      Y4MhokPjTA3H0AWYPXyKt944hdFrIz2Y4O2BQXq5ebyRCQRDo5jLE48nyOULGLv86Li+vk46
      nWZtbY1qdWP7axgGdrsdwzAeKQ125SFYFltUGh08gTABl0Cl3sHnC2C3W3A5HUiSgtNpQ1E0
      xHYTw+Yh7HNQrrWIBL3UWyJ+vxdT6dNVYHAgiiJL2C0mpWqTQNBNOtPg6JFZVEXGarHSlxUc
      VgHDFLA5ndgEnb5k4HY/WzYCQ9fRDANVknB5nMiKgWCx4nba6ff7jwwwO0W/06DWEvGFogRc
      FkrlGsHoIKbUpqsYBP0BBMDpsiFLGlbBBLuNdq2CZnHTKKaZOnwCp8VEURR0RcHhdaPIOoIA
      bpcTqd/H4XK9EBXpVg/BvV4Pp9OJYRgoikKlUsHn8xGJREilUsRiMQKBwJ4dYI/dzbcmHmDP
      DrB1XuU6wQ9n8CdldXhe9laAV4C9+gBb44n1AV42uioxd+saS8niU12v9RpUO33KpSqPFJya
      zHJ8HcPUKZcqdJt1ZB3ajQo9Zedy2WiSSHw9janLlCpNmvU6OtColNjB2z6imk9R78p02w16
      0m+qK03DwDBN5Hab3mOrhmmoLN27xeLa8yUGfki7mqVQF1G6TVpdkUarA4ZGudr45g9vE5lM
      hmKxiCzLNBqb33fXbIEeJxtfIrrvJGEH1IoZ6j2TmekxxEaDviHgshjIpgOL0kQ03Yw4OpTl
      IGq5SHToQaYKTaKUTeAOR6nnigyF7Hi8Edq1Ik5bCI9jZ2Rfk1SyiXkiMT+5Yp2QXcMbiVAt
      5rCHh9ih2z6i32yQrctMBQRsfiftSgbDFSYacCK2WtQLWQqGm30+Fw1bibBvgJGBEPnECv7J
      w0RcFiSxSbbYYGJqErFept5VGB+JYlo99Np1wkEvPVWgVsjgCg/jdQh4vW56ooLXt3HI70k9
      EqkK7pkQDcGDJquEfTYKpSqDsZ1VBT9kbW0Nt9uN2+3m5s2b7Nu3j8nJSRYWFh5lh96VAtDR
      LBwJuLFikFpMc3c1j937Hsm79zn55nHuXLvP8TP7SOS6RB0FMr4wbJLKcnDmEPXMCrrpROk1
      mfv/23uv7ziyO8/zExHpPRKZCSQ8ARAETZFg+ZJUUo/UGk2PkXrOas7Mw27vP7Ev+zDn7J6d
      532fnXNmd0zP9BhJo26pu1yrVKJoihYkvE3vvYnMyLD7AJJFSiwVySJYaBY/LwTJPBH3JuLG
      vT/3/V28gCq3eHNk8VDHf2xxgfTWLpYzjNwscPFCGbnVJX7yUG8LgGj3EhdVCh0Y0RKU1QCO
      0g6d4QAD2UY84EcRAjjMLpbopFrMMRIJ0dZgIeBGEmBleZXo6AhbOzvoXZkhj4dSW0Tv5KkW
      aoRGIgQjQ6QSezR2CpyfiyCHhpFVkdm7CwDBxuy4n2SuSXDCQyG5STXnoC89n4e/1+thmibt
      dhtVVfF4PGSzWfb395mamsJuP8hgPZJHoHjIxdUbt9jeT9LsW8xMjqKrOvGpWYZ8bsam5xgK
      +NB6TRpdFYftM3fcQG7RHdzd2gUbk1Ev2UoHhyfEW998l3Mnpg99/ILNR8SjU+0M8IbifPPd
      d1mYHjn0+94jNnucanIXbE767Rpd1cTmcDM7M0ko5KVVq6HqEiOjI/jcDiwLxsMeri/fYTuZ
      Q8KkUqkh2R34QxEiQ0Gcbh+lXI7JEzMUijWcuozdP0LIbWf02BRrdzaIDIdpNJr34yu+yCRq
      M4dmQnxmkXfefoPhQ26ocY9kMomiKHQ6HarVKo1Gg06nQzAYJJ/PI8sHMZ4jaQRblonc6SDY
      XUiWhmYKuF0uLMvCZhPRdRObTULpddGx4XPZ0RGwDJNCao/IsQW8EmiGhU2E/kDDaZcQJDum
      cZDuKx2S1IdlmhiWhYjJQLOwSwKS3Y6hqYg2B4dx2weNYEPXEW0SqqJgczgZ9LpYkhOXQzqQ
      OBEsOl0Zp9OFZLdhGQaSdJD+3Ot2Dj5rg25/gM/nwzJNREHAEgR0VcXucKCqGk6HjW5XxuZw
      0qvnybTh7MIoe3sV5o9PYd6VVDG0AUh2BMAmiai6gcP++AePpzWCVVXFZrPdFwzodrs4HA48
      Hg+NRgOv18vw8PDLOMCLwEsv0NPxsh7gBeJFfY/dqwc4jM46cESPQC95yT2+lvUA7UoFBejU
      crQVHWWgUcjnaDcrtB/Qu2lUKnyZxNxK5felvTvlNPv5OvSq5BpdKpUmYJDPPWZMot9lfXsX
      y1DIFWvUKxUMoFrMMXgOwdri/ib5hoxlKFy9cecPflZVlMfrXTxoUWk/rMxmqj1WN7YxLY18
      rkKzUkEFGuUcfe3px/8s2dvbI5PJoCjKI3/XcETdoHKtBtEovUYJS/BS60O7XCI67AW3m1Ji
      DXt4Cr2cZC9fYGHhJHozR7ZpsDg3RadZom+6Qa7Qk4JMhV0YnhBqp4HfbWdjY4eh8VmaxRSF
      XI7pE6cJ3i3s7nY1CuVtxuzDlHpBPH2FaNRLuVRlbHz0C0YO+kCnmt2hMjJMqdIkZNfxR6M0
      KiVckfFHeWufKarcpTAo4dNspIoV3jAGbG9sERibxSNpNBst/MEg7VYLh2URiEXIpFLY3V56
      3T7HF4+T3VrF8sc5Ph5iY32LcNBF0x5H0mRC4SFEQcDUNJrFJLl4jGqpRsQDjmiUVr0E/nEO
      sU7+sUkmk3g8Hvx+PxcvXmR+fp7FxUUuXbp0tGVRtEGLTy9cYHkjAUaPxoPSG3qbRLaOYRgI
      NifHZsbY3VxmJ9tl3NVnPVliYy+NW+pRVxxI/QJ7m9vUBhbJVJLk7h4j08coFTIYhsXUeIjs
      Q53mBWZn4iTTB2/8UnKTCxcuUmw+fi7K9OIiua0tTLgbB7jAdurwW6QCCHYfNqNHtdkhFgmT
      31tjM5Hh9vIq2xt3cAYipHbWcPjCyPUm/VYB3T9Ko1RmOOSmXm9Qq9a4cfUGif0t/KMzhLwO
      Nm5coqFJD9UAxOcXqe5vYVqgdKtcvnCBtd3sc5nnF9HpdJBl+X4keHx8nHa7zfvvv8/c3BzB
      YBA4ogvA7gzy1rvvsnTy2O//p2An6BXZTaYxVJmNtU1s3jBWv8ZGqozP5WB8cgqfx0urkiZX
      kQkMedi8cZVMuYVNNNne3ERWTZxeP6GAF0mwqN5t+wPgHRpFbVcwTIuRmUXeffebjIY8jz8B
      0U0sKFBpK19JHGB62MFuXcDnEHB5vPj9QSbGR/GGRxgN+3AHo4xFAnfbm0oEQ0GCoSA+txtB
      b9NSJAIuB3aPm+T2OpVWj+OnztAsZmk3KnQHd3M6BDvjwx7yjQ4uX4R33n2X0/MTz22ef4hk
      MkkwGMTpdFIul9nd3aVYLBKPx7l+/fr9I9GRNIIt0wRRBNMEQbhbmmgdvH0EAf2udIeIiW5Y
      2Ow2MA0ME2w2CYuDlW0YOiYiNklE13QESaSe3WV1N8fY3CkWpmKIgoCuKqSLVY5NTYJ1956m
      CYIIWIiigGla9wtr/uDYLQsLELDuDR9BFLFME0EQD7WnLhxkTwrCwXgF4V6XRe2+zLkoipim
      ef9PQbj7zT7Qw9jQNRAkJElE13VEUUQQRbBM0vsJxufmsHGvn7J1917CoczzaY3ge9/DvZ/v
      zcNms92PEdhstpdxgJccbV7WA7zkC7n3hnsRuVcPcC914Vnzcgd4AXgZCX46jmw9QKuc5uLF
      i+znag/9e2Znlc1kkb21m6TKn+0W5VKedqdNtdb+nSvJXL1yB8OC8v4qW7kGliZzY3n90LRt
      tF6Hm7dXMS2L3M4t9opdTKPHrVtrj+dz/5IUExtcvHyZjf3cF8xRo1yuA9BtVWh0Bp+rof8g
      O2s3afYM1F6Tm8sbmFgk125THxy9fsHb29ukUin6/QNhgkdxJBdAJpVh9tQ54mE31UoDtS9T
      K2W4fGuNfiPPleUNMHXWbn7KTqZCp91AURS63R6lUvmBX/wAudGg1tXI0ZwNMAAAIABJREFU
      ZTP0BwrNahWh36TcP5yn0VANGtUifV2lUi3Raip0ckl6mLR7h39MMXSJs2+8xqBdo9Nskkru
      02hUuXHtOrWOQquS5fqtFfqaRqvVpVqpIMsteopOo16nXs5z6/o1Ku0+5cwuy+t7DzXWVjWV
      SrlMo5ylKatYmkxPgOJzcvM+LpZlUSgUKBaLqKrKxYsXuXnzJqqq8tFHH5HLHSh0HMkFcHLp
      NaqJNTYSabKZIkqnSUN1cPbcEktLS5w6c4pAP4tt4hUG+QQygGWw8ukFFMn7kK86Eh2hWdpB
      cEWxAflMEsHjILmdOrTxz04PsbWewD8cBWAzVSKgt0mVvozS3eMx6DW4ffM2NpePeiGF4Rki
      m0pz6twZktur7OcanJodYS+ZJbO1TFk2ke56S5rNBsVyhZMnZ6mUyizfXqOV331ICMvhDWEq
      Hap9iPlsNCsl2j2olJJP1YH+sGi321SrVVKpFIqisLCwAMAHH3zA66+/TiwWA47oAsgld2jK
      AyxLQOsWuHZrDdUS7rshRUHEHQqTWblKWRVwCSKCIHHq/KvUMkkqxSI93QAEnP4Q1f008WNj
      Bym/lp1YZARBax3OkUQQkPxj9KtJhoYjCEYXXEOExyYYNA5/AQiCgGnotNtdBLuXeGyIIa+d
      m9duILqHcJgyN1e28fj8TB4/jdEso5ogcODGdLi9uBw2HHYHwYAXZ2AYt9Gh1Dg4HgmiDa+t
      i2UPI4oizUaHkdEYkYCDZv/oGOK5XI75+XkmJiaoVqusrq6SyWSYnZ3l448/vr8DvIBGsEkm
      lWFscurQcv6PGodtBDcrBQTfMMEn1Eh6Fhy2EfzQAnhRpTVedF5kL5Cu6yiKgs/ne+bXDgQC
      D8cBOp0Opnn0rPmXfH3RdR3DMNC0w0kxfeQRyLIMerKC2+vBUBUMwY7L8TkxM8tioKo4nE4E
      DqxvVemhGgI+r5t+r4sl2vG4nIdW1PCSF5evpB5g0Mnzf/7Lf0WlM+DiT/81/+7DP5BXbhn8
      9Gd/eT8v39QVLv3mb/nFT/6c5c1dPv7kAv/+//tPtJ6gN215f52PL1zg2soOj7sfaX35d/Lt
      D3L4763uRGL/0fdKr7GRqAIGVz/5mLYGzdwOq8nyY4/3QVS5zZXrtzAti/TGVbZzHUy9y9VP
      l59LHCCzvsx+pYWldfno11ce+RlFaVCrPaHSmqlx9dNP6asG3XKGK3e2AFi9cZmWcjRPDSsr
      K+zu7tLr9e4bvb/L56ZCnDoWZTeZxnKHcdvh+se/4NPVNN//7uv87Neb/Ml3znL902Xmz76O
      XM3ys//4/zD1zj/jrdkQ77zzDj//+S+JjE5xLGyjVG7jeIxEsnvoA4uFs69Q2k3Rb1e4vbrN
      1MJZHFqDcktlyGWSLVSZPXWeRmodxRFikFml4pnim4ujrG3uM3PyDKX0DqlsjjPnztJsNZEb
      Re5sZTj5yjlC3gODTrXsNCs5BqE+zZ6OakKlLqOjYVrRJxaANTUTpV1DVhUarSaGMKCllrDc
      dpqyxrDvkBPlLYtyucKQbqOjKKi9FrdvrzI8vYhHq7JfUTk5P8TG8hqe+BgzURf7u0kiMycJ
      23us7+Y5vXSOanKTluXjlRPHDpwJlond6JOtdzFqDayBiqlUkDU31WqN4ET0cOf1hFiWRaVS
      weVyEYlEuHDhAlNTU5w7d45PPvmEM2fOAH/ADRqcmie7/FuCkQkErcdmqorPplKuNYjNLXHM
      2SR48o945+wc3sgE33/nFQqVFqba5Sc/+Su+/U/+OTEK/Pf3bvDjf/FjPLbHXwCG3iedTCHa
      HHS7HUxdYWNjn0w6y/T0FPVWn7NLi9SLBRrtPpgWx+ZP8Npr5zH6Mrqps7G+hSsQZWkhTip/
      kPp6++Z11H6TZP6BCLMgEvWIrGY7TI0GweiQSObJJxK0tad7s03PRNhe28c/fCDStZ7MIjSL
      JAuPrkp6pkhunJZCpSUTHQ4y6Muomsbm2hb1ZgMRC90yiU0t4LcUSo02p5ZepVFMs3zzJorS
      YmtllZW9LKV8CvmBbdUdnUApJTAlLy6bSHZrlz599vYzR65hdrPZJJVKsbGxQb/f5/Tp07hc
      Lj788EO+9a1vEY/Hgc9ZADZngMVTZzl9coFjp85w7sQxTs6NM3HiPFPT87x2Io5v9hvE++tc
      28jwypnTuMKTLE6EMMwBHqebK7/+iL1cE7/b4m//5m9Zuflrrm09XrRQlATkdptWR6bf72OJ
      BzZIMDKC323H4/PjsDtw2m24HCLVWg3sAsvXb9HpyJiiE7dTYtAuc/X2DqFgALvdTiwSxbK7
      CXrtZDJZLECSbAyPxZDbffxeN91Sidml13n79XnyhSdvkySIInbfGEanwFAkhp0enuEZFs6e
      Q+wdfrKfZLczG/eS79oJuh2oah/NFPC4nbicLlrVGqol4fe5cbmcoPW4/ukVLGeAkdgwiG6i
      ozFCHic+fwhLrlBs9kEQsNucuIQBrtAwDruNruDh7ImTRH0C+hFrnFQoFHj33Xd57bXXqNfr
      rKyskEqlOHXqFO+//z6ZTAZ4jnGAVq2KNxzBdgTsYEOXKZYVxu92Qv86UywWiEZHkD6nE041
      n8Ebm8D9Ff3iDtsIPjKBMNM0D83V9ZK/uxxmIMzlcj26HkAfNPngFx/RMe388ffe5Ffv/xpf
      fIGlKTuXbm7hGZ3nVEDht+spzr39Pc7MfHkD6F5H75c8OS/yy+OeLtBhxaceHQcwNAYDjY9+
      +ufgijD5je+yd/Gv+aM/+RFOvc1//stf4ZJM/sU//WP+4per/M//7I8PZXAveTxe5EjwV6IM
      Z1k6H/7VT4i//gOkxC1sNglRgG41xS8vrvJPfvRDPvrFXyJJEhxC+kQtncY1NcUgt401tMDw
      79SjK4qMKLqwmV2u3Fjj5Pk3GfI8YiqDKummh6mRgwtocpXL19fxRcaQ5AypQp+Fc6+yOPPF
      ciePi2WorNy6QcdwMuSGvUSWyMwJ3jl34pnd4w9RzWbxT0zQyu7hjs3h/530nV5PxuFwI2hN
      rt5J8MrSEj6n9HvXMfoVyr0A8eEDIZd+q8SttT0Cw6OYnSy5ssri+Vc5Fg8/j2k9Fbdv38bt
      djM+Pk6j0WBi4vcL9h+5AHrFLVYzHQzPKq8vnebjv/kp7sg0ieUrDEwvKys7LM3F+A//7T0W
      X/t7z3zgSrdJo2BHyRcYdo9x9fZtfLEZxv2QzFdpdYooipfJYZFSp89ELc/GrSxTC2dALtJS
      JIZcOonEDv5j32bq7nV393K8+a1v4RBAFEcwb5ae6cMP0GmW8cbmeWXywAVq6CKLz+nhB+h1
      mshFG61SiQlflKu31hkenyPsUMmX6pRrBRzOYYZsMo2Bk1Y5y1q+zMyJU6j1LLLlJiD2SGVS
      RI5/+/51U5kKr7/9DjYsRHEYbjeP9MNvWRatVot+v08sFuPy5cvE43FeeeUVLl26dD8O8MgF
      4JtY4n//35bu//1/+V/n7/70Hb7zwOdOv31IgzcNZFlGHaiovQ59zSC/vYlvJkxocoFRfQiH
      I4rXbOKadNPJ7HHujfNsrexhmh1OL73J7sYab7+1xE71M++FaYEkioei0Hx/7JaFKEpfWdqH
      Zer0ej0UVWcgt1ENi52dHU6MeIhMLxIc8jM8PI7QLuB3R6nvbXP+/CLrm3kstcWpc3PsbW/z
      2vmTZB8oELMAURCeS2fIZ0Gj0WBrawvTNJmZmeHMmTPous4nn3zC9773PVyuA5n2I1kP4PSG
      mJ+f59jUBKJlYgkifr8Pty/EcNCLRxK4ffsWfWw4bDaGh9xcu/QpjlCYSHQUt11EUNt8emMT
      QdRJJLNYFhw/NsJvf/1rbq7vAeITt0B9HAKhGPXsOhc/vYE8MHC5Xc+1obTbH+bY7CxTYyNg
      GliCiM/nwRMIE/S68EkWyytrqKIduygx5Je4dvU2vvAQw7FRHDYJvVfn1moCSVRJ3RUImxob
      4vLFi6ztZQERl+v5p0Y/CdVqlT/90z/lBz/4Aa1Wi/X1dTKZDEtLS3z44YfPPw7wVaErPeo9
      jWg4eKQ7m38ZDssI1uQ2bUNiOOB95td+7DE8z3qArxLDMF66QZ+Sw0wX/qoxDIPBYIDH8wTK
      fI9JJBI5OrpAL3nJ5+FwOO6f2Z81R2YHeMnT86LHASzL+nr1B6gkDpQequkNKm2ZYqXD1uYG
      5WKSSuOzY1I+keDL/NoTycTv3zu1ybX1BFYrzUahTiJRADQ2N3Yf65qDToOPf3sZU+uysZMh
      m0iiA+mdDZ6DKgo3/+a/8JutLGa/zL/6v//NF35+bW0Z9Q+EcgrFL+6LcPs3P+c3N5K0d3/D
      nUyV5c0c0OLib1afYOTPnqtXr7K6ukqn0yGZTD7yM0fyCDSQm+R3d1GLWSZ8oww0CaXfR/eI
      IMh8+ttrBCeOI9YL7BbyzMydQqskKLQNzpw+SSG9id0fp1fNoIg+5kf8WJEpusUUQx6Jlc0k
      wfgMeiPLpUyaqVNvMHE32qYbDqRBlWbXT1930S1kMYwW5VqPx2muahkCIceARKlNX1FBq9E1
      dKr5MuFjh98n1e0Lk8xlyJp2XH4f/WaBX/z1B4ye/CYBNcvmToKFt/8RQnGZ7YrFkKfH8s3b
      LLz5xwR6e9zcrvCd73yDS7/6kPGFs3zy3s84+cafcHbaxuVb+7zz7nfJbV3EOfIqb5yZBKBn
      H8Uor1LHpBfSSN6+Sa/uIFX28c1Dn/GjMU3zwJWuqoyPj3Pp0iV2dnZYWlri4sWLLC0duPmP
      5A4giBIerxe30wFGn3rrQeP4oOtfT5axe0K8/vp56vktGnqQN+aH2M3VUSUPMb+Fc2iG8SGB
      bCqPrFvU6jVK5Rbn33wDrdfE4R3izdcW6bT7D91/amaadDKNBdjsTrxeL7bPyZZ8FOGp43Rz
      u2gWiDY7Xq8X5xN0RvxSiB6CksJ+RWYyHqbVqNBTVK5cvEpdgX/6z/8BrUSSoubjf/rh9/D5
      Q/zwR/8Qpd3mg/d+idwskC53MAQRWZd497s/4Id//y1+9f4v6XWq7KUL9G0hXjv9cFT1/Cvz
      LK8e7JJuX4BwOPRERVDPmntSKDdu3KDX67G0tEQsFuPChQt8//vfZ3LyYPEeyQXg8oUYi8cZ
      G4vjsDvwee34fD4cLg8O24HEtYWFyIDrn14nOHoct1HmykaJ6dEQsWgUrz9Mu7xDsqQwdXyc
      3WuXaPYtvG64evlT2oqJzx/AZnPidQns7SYwLHC4Xbh9YQI+F16HneGRUeLxOLHh4GONXbTZ
      cDncTE+PYpjgD0WIx+PER6NIz8EP6wkGee3MGPVBiKlYGFGSECUXx6bGCEeiOOxuIqOjBPUq
      /+3nH+IKRnE5nQwFfZw79yo2b5iw147NMjFMAb/V4RcfXeWVc68iuQPEQgGOzcxgKW2u3tnE
      AgKBAIGxBQIOGwG3g7mFBRYXTzIVfz5NsR9Fq9Xiz/7sz/jxj3+MLMusr6+Tz+d56623eO+9
      90in08DX0Aiu5ffZSBSZP3mW0fCB1Iapq9TbMsPhob+TsYKvwgjuyzXaPQcj0Wfvn3+QwzaC
      j8wCeCmP/vS8yPLohmFgmuahuEHj8fjRWQAveXpedDfo104eXW5WafVU1IFMT3nEm80yyaf2
      aMqfRT+7rTaDfp/B76Rn6wOZQrmOBTTLOdqKgan3KJabhzJ2QxuQL5axLOjWi9S7KpZlUCiW
      nkvVbLvTxrJMypUKlmXRfWaNJUxk+TMpFVNXKZYqWBbIjTIN+WCeD6tzf7XU63VarRaapn1u
      g40juQAamRS3d/doNwqUG336che5r2CaBoN+j24ty26xiySYdNptVN0gvbdPq1ymMVBQNe2+
      SkFf7nD79iqWqbF/+zL71QH11D6bqQzaIcgZa3KP5ZVldNNgb/M6+9k2aj3F6maKrnr4+jnF
      dAZVKbO8vE9PqZMvyQyUHnJPwTQ02u02qiqztrZFr6+gGwaaOsAwrYOdROnRlftYlkWv26E/
      0LBMg26nRTJd+GyevT4r6ytopkFyZ5lkroPWzLC+k3ku83wc7ty5w/b2Nr1ej52dHbrdLpZl
      0Wg0GAwO+h4fyTiAZPcSlXTKbROnWOLqXh1JHzC+ECe7VWF81IncG5DcXqWvC1iCE68AoLFx
      Z5nZmZNMjdzLVReYCNhIFqp4wlEUIN81mQvbaXYHRAPP+mwpMBPxkMyVsPuHMYBErsMrx6PU
      Gx38I4/nTXpaAj4be1s1Zk7EKO7m8E1O8av336OpO3jteIzNosxbS4vk8wX8AQ891UKpJRmZ
      nKHR0pHbVQQgPOSl2NRB15mM+6g0+6jmg12OBaaG3WQKFWy+ELoAqXyX0/NRGs0O/tjhzvOL
      GAwGuFwuNE1D13XS6TS5XI5IJIIsy5w8eRCTOZI7AMD47Bz5vV1MTcEZiBJy29Gws3jmLLNT
      4xw7vojXIRAdjSOZ90Q5bAz53aiqgaYq9/Xqw9PTJFdWiESGMZUGuVyO/UTyYX2gZ4h3dJri
      9h2GhyNgDcjnc2zv7pFM5Q/lfg/i9wfJttpMB71sV7vE7Bre2DRvv3qW4bFpZqNOKl2IxyIM
      DUcRenlcoUmSW0lGxkKITj+RoBelJ+MfHsEjQV/ViY6O4nJId3eLg3u5Y5OU99YIDUXAHFAs
      FtjdS5B+YKf4qkin0+zv77O1tUWj0WB0dBS/30+/32d6evq+2O6RNIIHsozk9SLXSth8w3TK
      aQaSn3jED9hxSDqyJuISdRKJNMPjM9jNAXa7HRw2+m2ZTCrJ4tklBGOAbor0Om2CASftvoDT
      ZcfjlGi3+wQCz1Z12NA0VNNk0O3gC3qRewaizYbf46LdbhMIBJ7p/eBhI9gyVCrNHrEhL+Va
      h1h0iFoxQ6MvEI/4yBVqTMzMMGiW6As+gnYdwRNCbjWIRIZpVQvU+wLTEzEK6QQ2f4yoTyKZ
      KeAPj9AsJJhaPIvD0hkYBqos4w166PUMBMmG3+Ok02nj9z+beT6tEdxut/F4PBiGQb/fJ51O
      EwqFGB8fZ2VlhcnJSaampl5UL5CFYZgHNctfA56nF8gwjOf6vX4lRfFfBS/jAE+PZVkvrKz9
      vVqHw3pPv6A7wEteFL4SefSvGrXX5Ob165QaD/tuG6U0u5ky5cwu2epnup2ddvOgS6T8uxVl
      A/b2MlhAt5ajUJfBVEmlD88YNdQ+yXQOy4JWKU25NcCydFLp7HPxj9cLCa58+imZ8pfbTY1+
      k0S+BliUUgnaAw1z0CFdOBzHwWFQLBapVquoqkq7/bstdA84kgtge32TyeMnkCyVfn+AoWso
      vS53Nnbx2Axub+7jddmoV4o0u33KpdzdPsEter3eAw+azP7qDk3FZH/9Dvl6m26tTGp/j5Z+
      OI+j1huwub2Oauok91bIFDoo1QS7qRKd59BLV24qLC6do5zaQ9NVioUifVWn26pTqjao7q9x
      YyuJoqpUS0U6vQFqX6ZcLtLtf2ZHWJ0Cqzt5VF1j9dYdWv0B+WyBbCbJIX11z5y1tbX7/QHu
      3LlDuVzGNE1SqRSdzsEL9MjYAA8yMzvNysoyQxPTZJNFZicCFDsDTARMXccwTbqFHXKyHaub
      Ijjiw28ZbN25hb70BnMP1I8OxyI0ankM0YtThFqjyeLJKbKpKsG5w9G0n4l5SKRKOIIHcYBk
      ocfZuTC1RpvA6LPfyh9k0KuxfbWKPxgjsbGK4fSSypdQqkkc0RPMeFWUgURuf4euLiKncsTs
      Jj1vEL3Y5NWzd6seBIGhgItKMYMrGEfAoN1TmYm4KLZUJkJHWxVCURTcbjeapqFpGp1Ohxs3
      buDxeHA6nbjdbuCI7gA9RWNscgK51UBX2qQzWXSbl3h8jPGJcUZGRwh5nUg2O6IgHLzxBZHJ
      iTG67Q6KLKPdNQo9oWHKa3cIzcwCJulUkq2tJKVi5tD62rpjM5T3bjM8HAWzT7FQYHM3QSr5
      6C4lzxKbw8vUzDRiX2ZgWQeuYQTmT5ykX0ohhcLYJRtgYbPbEQC7y8/cwgJeJw91i4/Fwqys
      pJmcHEJXumQzSXaSRQr5L+pC/9WTSCTY399ne3ubarWK0+lEkg70mu79DEfUCFa6TUq1NtHR
      MYxeg7ZiER4eAtPA5XTS6/fwuN1UCjkkbxivU0SSbJgm6GqfdCrNscVTuGwm/b6FpvXwedwo
      OmDqeDxu+nIfp8fzzEWyTF1Hsyy0Xg+3z42iGAiShMfloNeT8XgOV2Kk16pRbnQIhGOEPBK5
      fJlwbBStW0M27IxFgxQLJUKRKM1KCXcogkcCye1G67XY2itw7pVFLK3PQHAxkDt4nA4METAl
      XE4Jua/i8TwfvaOnNYJlWcblct0X1y0Wi/j9fiKRCHt7e4yMjBAKhV7EOIB1kAckCH8nc/u/
      UiyLg6/u6Hxzh+0FOjI2wMs4wNNjmuYLHwfo9/tf/OGn4AXcAb5+vKwHeDqObD1AuVLBwmRv
      L4GFRa32CN+zZdJo3MvpP0h9eDSPGyXVWbl2iSs3VlENk2aj8VRGsj7ocf3yb1he38O4m3r7
      PKlWq1iWQTKZwjIf/I4e5PO/E0vrUm0+SqHPIr2zypVrN2n1VORmk6OuRZfL5SiXywwGA5rN
      R9d/HJkj0IN0igXcbp3EXo7hUR+FmoGlZpANOxOjQ6RTGYZGxsimEzQaQ4xPjZBPN4kNOyjX
      20RGJxDVFsVqi+Gwlxs3dzlz/hwOvU3XcDAW9VMqVDDsbiZHI3fvquPwj3M8ZrCxX8drVfGH
      nryoW++rRI8tYFca5Mtd5FaJoaHnVxzeLJfwOBX2ElXCw04qLSeiUaRr2ImFXGRzZYaH/dxa
      3mbxzGncKLQ1idEhL51eH9Fokq958bhEHIKFKUk4bDbARMPNa2enWNtJMeIEfyjEITd9/VLs
      7Ozg8Xg4ceIEt27dYm5ujvHxcba2tu53iTySC2A44mJjvcrcqTiZlRThM6fJ3r7MWqbKN5YW
      WU7UeDsUZaAM8Pk7ZPI2Os0BvUYK91CEbCGHUqsQcipk7CfweLzY1Ba7hTpeQSenuciUbYhW
      9YEFANm9FfI5N8fPfwOlWn3K0Rts3b6GzTXEq6/PIz9nsybgd7C91WBuIUJ+p8DQ3BS/+fgy
      PdPGublR0i2DQDiIx+PBYQ24eOkCsmHj9ZPHyQzsvDrtAMEksZ8i6IZA/BiOu09Ju5LlSjFP
      bGoB1EdHVo8KvV4PSZKQZRlN07DZbCQSifseoHuG/pE8AnkCUSq1IqOhCMlGnZio0hXcHJsa
      AVeYiZBIIl3CNxRhbDyGdPf44/aGGIuPYrcJGNqATkdGcnqwmQp91UBXFWRFRZIkRscmGfJ7
      GcgdeupB2eXE7EmmJ+KI5pfZ3CVOnDlLPBzENJ9995wvwu8LUOx0mAh42Gv0iDhEhkcnOP/K
      aSLxccK2Hvm6igMNeaARjo3zyitn8TttHJufx223gegk6lLJtMFrN2l3DkohA9EJjh+bwCFx
      5OMAqVSKZrNJtVqlWq0iywctd71eL81m835F2JE0gi3LpNdT8Hhcd/90I7eb6IINr8tBu93B
      GwghYmG3i+i6hWlaiIKFzWZDN0zWrv6KZKnPOz/4R/hNGVNyIRoKA0si6HNimBKWqVNMJxia
      nMPvFFFVA4ddoj/QsIkCNruDJ/UImoaBYVlIgoVmCAiYOByHGzV9qB7ANOgpGl63A7k/wOtx
      0eu2UXQBn9tBp9sjEAphKDKaYMdmqfRVi4DPDZIdCQPVMEisLOOfOUtAK9Oyx5gIu9A0HZvN
      hjpQDxqNOOyH/gZ9WiN4MDioD7mnmNFqtXC5XPj9fiqVCn6/n2g0+iLGAb5+vPQCPR2/Vw9Q
      r9cxDqHp3UsOlxf5HXYvkntYwbmXO8BLjjRfST3AoJvn//iX/xd1WeXSz/41//7Dlc+/iqnz
      P37+i/s+YUPr8/7P/4J/9//+W27dvsF/+I9/wX/66d+gGY+/zjJ3PuXabhZT7fKT//EL+nKH
      auPA62DWd9m761ovFZLUGgW2t8uPfe17yKUMH1y8ioXFtU9+wU6uQ6eyx8eXVr9UktygXee9
      v/0Yw7LYuPoeN3frGEqVDz64iHpY2XcPYhlsrq0/lLLcreTpaCaDwecY95aJpj/Ozq9wZ3kT
      04J2McFOtoZlDFjb2MY8gu/RRCJBLpdDURSqn+PVe3SfYNNgLOBkP5dHMR1gaaxd/YS1ZIVv
      vHGKD69s8+Zrp9i6eYPo/FlquT3+6r/+OYvf+hEn4x6+/w9/xF//5D/TrtewHF4auzuU1O8x
      8ZhN6WwOH4bSptnQsXuCmKpGXzXYvH2FSiFH7Pw4N6/eotSSefXVk2i6xf76MoWWwcmFUVZX
      95lePAOtHNm6wsm5cdoDEVGwmBo/aItqGhIBm0ZLbqJKPizDpFiSCQcEBrqJ2/505p1lioQc
      JvVuB1Vwgm5SShUYm4nSaCuMhNxPdd3HRZMbKN0KiYrCuFuj2W6iVAu4fWGUQoOQH/LlOpOz
      C5idEplSm5GIi2u3E5x//XUEuYws+DkW87CfKSG6gsxNxu5efUCzkKc8N08lkWAQnqXXUumW
      C1Rm5hlxH50cIoD9/X08Hg9er5fLly8zPz/P8ePHuXbtGrOzs8AfcING5mZJ3rxGYDiOoA9Y
      305Qze6TzGQYeMYZt7JIc+/yzrl5PENx/ujVY2ylq1iGys//618w+40f8u63v8uPvv8NAkEn
      zieSypYIuSUSuSajI0EMXUXuN9GEYd4+f5J+o0Vwcp6zC9MHCW96izvrKbR+h54mIAkW3XqJ
      lc09tH4PxeYlu3UTm/thpYLRyRHWb2wxOh4FS2VnZ5vS/hb75e4jR/W4xGfG2b2zQTgSAUy2
      EwkqyW12M6Uvdd3HoVIu4AhPUk1uU07t0NAknDYJ0Gg2u2RTOcKhIKVyir1UgxAyHdHL2MQU
      Hr1DqQdGp0AxvUfdCtKqPdwgY2hkjFZxF9MWxCFAJZ9haHKE5HZAVrNdAAAB70lEQVT60Of2
      JHS7XQaDAZVKhcFgQDQapVar8eGHHzI2NnZfFuWRT6VodzMxfZL4kMT4wimm48MMhQJMzp0g
      Ehnl1OwYwWOvI6QvceXOPlNTkzj8EcbCHrRBg2ZbY+vmZdK5HBcvfMLI6bfQ07e5tfN4D4DL
      72dyLILgDDI6FMTudOH3DCFpFW7ulomOBGimdkiWOjgcbgLhGAuzI9hdXpw2CUEUcPhCnDg2
      js3pQui3mD/3Nkqnzt7WBgMDbG43gUAMf9BNNBzBY/U4880f8Pf/8T/GrXa+eJCfg2S34/GP
      MuSzEY7FCbkNpk+/zd/7/p8Qfw7NFkvlBqamoA+6DEQvszNjSA/kfLt9QYaCIWyigNark8qV
      Ee0uerUCjb5Ot1ai3OjhcNgYjsTwuJ3Izcb9WInd46eVThGaHDu4X6OLrpgMumWe4JR76CST
      yfvu53K5TCaToVqtEo1GWVtbo16vA8/RCC6mUwTHp3A/D5H8z8GyLJrNJqGhv5sy6I/DPdkS
      w9ABAVGSsAwdRAnTMBEEEEUR09JZuXKRYtvine9+G7elIUh2MDQMJJx2ERMJLJ1cKklsahaX
      TcAwLCzLQBSl+94nSZIwdB1Rsj1x3OSLeFojWNd1JEm6r5gxGAyQJAmn04ksyzidThwOh/D/
      A1qQNpp1zB97AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      ljbf+CihYSD6iygdZ05vfFVVksUf36Mf6jD1OyhRg0AZxWr8NYRNQCCUHT1UzNnU272EgiV5
      NkgFcmOzy5WVVe47Po7d/5iCQNVULtxs8plnr/PgqSkeOjlOtVpF1zSOP/IWTj36owN4qkgI
      Zk6eYeXSWSYOn+Rbn/sI69cvkq+OcfSeRzAMIzF90omk6vgU97/tfQM4oFeSWAm2221s204I
      0QqaxtmzZ7l48SIguT7jtfdPJQkWSLADU4gnqVwuc+3aNTzPk3xBjsPx48fRGYQgwN6gNCBV
      LqnsGb7cL5QZsxQbCmz2PMZLWaJI2sluENJ1PBqdLlMjFZY3a1SKeWrNDrmMhecHFHM2s2NV
      er0enewpZu/+JRQh8GZeT+AFicbKWgYT5QL1do/26ASjH/gAiqbhI+sUwoVFRKPPeVks0uz0
      0FQFXVPZqLcABU2FjGVRKRXoOR5BGLGyVZc+R6fHVLWEpio4voIQJVQ1xIok2pHIBxEQhhFB
      FNHqOvtSpTu+4Pc//jytrseV5Tq/9JZTAzQlH3nqEovrLa6vNrn/SIkLn/9LwsDjnrf/LEZ2
      h04xPjnu/bGfxun10A2TS1//IgCB5xJTJObz+V3P9NWGIOPnGK8dOX3FvjMeySo41xm49n7h
      7e+laL/+P/z6B+Lmb3t94dTUFOVyGcuyyOVy3Lhxg0ZtG8MwyGR27Pu9NkCr63Bzs4601yMc
      LyASEbWWjJLIvr6y8V4aY5+2n1UFAgGFjEy5m7rGSDFHq+sw2ieMqhTyaKpkT64WZVbQNg0s
      05AUg5qBmLyLYOxOQiE3XTrSZehan3dIYbPjECKSps6bikbB91DHx+g89DBXN+s02j1GSnkW
      VrdkR8dml6oC+sc+irF4A+fAPBvNNuV8lqxlJv2E062klMwxdKtKWPhhNnoVep5HGApK+UwS
      TUrPZyhU/o+PfZO1mtw4R6fLnDk8OuCHtJyAqysNXndsnFlli8vP/gNOu0m+MkphbLBCLN4E
      Arnwxg8ex8oVOP3oWxmZmL5l9d4rSazx46CFYRgDdPTfvniVja0atmlgWjaFQp7x8QnMbIHQ
      d7l06RKmaf6TmEPKjaUlsQNBiO8AFFVN+IGEkBQo8WT3uj02NjY40q/4SUdk0hthZatO1rZY
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='124' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      JykT1bDbPgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      ShsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      AyT8/4B3P7D+U1s6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8 (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9549c2Zmn+VwT3mX4SO9IFk3RqJoqlaRuqR3U0wPs9mCABfbLYIH923ax
      PTtAY4Ee06NuqVWWKkNv0tvIyAzv43qzH7IypVJVkRk3kmR2Kh+AIMjMe+JExD33nNf9XsF1
      XZcLLvgjRBAEQXzbk7jggrfJxQK44I+aiwVwwSvpdbo45/SgLL/tCVzgHaNf5x//6SPevXOL
      RrXNnfdu4pNEBFyeffYZiRt3GJMFQkE/mqbT2F7DN3ONlL7Hf/tihx/enKHSFLl9bRLLFQnK
      MNAswkEZwxaIRUK4rs2zF0t88MGPuPfxPzN39X1CfpFet0W7vM/4O++gd03CYQnJ7rNUMUho
      ZXY6Nj/68U9x9QGxaBgQsBwby3IQXRskH4amEk2Mce9f/jsDx2Hi8p8wPRbA5zd5vtTkzq05
      dAvi0fBr+wwvFsC/YeRQnJnxFJXyPrvbNVTXJB/zs19uwEBl/eN/oXzQJjWeIR0QsHoqE2Oz
      TE5Mkw9vcbC/x241gN1e4/ONBrdmk3QHLqZWRZFy/J//+9+hdaoEx/IIAji2zW9+dZ+ov4cc
      CyN2m4QnUmw9LLFXeUomf5X07BwT84tsfvo59z/9CFnS6epwZabA+u4BoewcammTuYkx/uW3
      j/nzf/cfQQ7z8w9u8Kt/fci99WdM3LyF2hAobXxO20rwn/7Tf8T3uj7D1zTuBW8A29QwLIGx
      3ASy5RCJBNhv9JmdKLBdrHB1JkcqrRJNRJhIBLFMk9qgj9Z3EHxB8jMLGPouvnCCm1dThO0O
      mwct7r57A8efBGBzY4eFmz8CIFuYJBCPkAxp9G2Xsekcig6ZXBwxdoOxcJp4Mk6/1yMYjjI9
      O8XW5i5XFyfZ2dllcmqGyfkrbOk15Fia69euk0/H8A+ifPb5c+7cuoJfgvHZyzTYIRG7hiVH
      X+s5Xbhwg15wRO2giCGGmcynj/9vr1hkanr6Lc7q9SEIgnCxAF4z3W6XeDz+tqdxwXdwEQd4
      A5z+88Wh0+me8phvAdfi4KD6rf+2DBVFM9/YNC5sgH9z6Hzy4SfMzU8QGiuAUseUY2SSia9v
      qjKJqJ+eBrMTGQwpSjLif9uT/hbd0hr/+b894P/43/6Gjc1tZmdn2dneJhMTaRhBQoE4Zr9C
      Opej2laZSAbZq3cZ7D0jtPhT3r82cyrzuNgB/i1iKuy1DNae3GN1v0tx9Rkrq1u8eLFErVrl
      y4fPSAUM/r//8TG+wOvyn4zG0+erpPw9PvrNVwQSIX7zT/8TOZzgwcPHuOaAZ199iRsfZ393
      iw8//YSl5TX6zTqBVJqZ6alTm8eFDfCa6XQ6JBKJUxzRYndrFykUB1ujXauwulvj8nSWQDJH
      xC/hAlGfxUcPtvlf/uZnp/jap0epVCKfTfLFr/+VuhTlWj7Ek+0uf/rBu4iiiGHAwd4W8USC
      et9gbjyDKAgEAnDQNLl+afQd4MIIfgOc/gK44LS4MIIv+KPnwgh+yxhqn42tXaZmZ9nb2WVu
      cYFauUqhkGRldYtYMsfcVP6lY7iOxdb6OtHMOGqrQiQ9gd1vEcsVaB8UsXxRZiZyr5iJS3lv
      B8UNEPfZDGwf6aiMasvItkJjYLM4N4XwijEOitvoQoiIZKC6IZJhAd31Y/Tq1FoDrr57k4D0
      8pl0m1VK9R5T+SSlWof5yRy19oBcIsj69j7zly4R8r/81jW1AeubO9/8XA+qTEwX2FxbJz89
      D1wYwW8dUfKTS0bY3dihMJNn/6CFYNsQiHJpdoJAMHiCUQSyuRydRgUhEKddr+AXJFRLp9Fq
      02q1TzSXsXQWU+vTHZhYSg85GEUbdKlUKjSKG3SMV4+RzOTQ1R5dxcEcdPCFYmj9DhMzCyTi
      UXwnuOMCkThh2aZYbpKOSnQUB8fUabdaGJpKT9FfOYYg+sglo19/rgX2D5oIjoUxaFLvaWxt
      7QAXC+Cto7RrlPsumbEg9WoD2SejDHoMFI1qo0Mu/eogmmPpbO6UyGbSDHptbFdA1xW63R5I
      Plz71TcMuGysrZPKZDENFdW0sE2dbqfL5MwCsUSS4CvPCy7rK2tksjksQ0GzbGxDo9Ptonab
      yJEk4su3EAAqxS0IjhEQbNrdAZIE3U6b3kAlHg+jaq9+P2qnRrlvk/3G59pHlyIsTmaJhA8T
      7C6M4NfMq4xgXR3QbHdJJNOogx5j8RjVeoNwNE4o4MPvf7UP37FNatU6gUgM0TEIROL02g0c
      0U9YBkcKnCCj0qVZq2EKMomwH9OVwFTpayaxSAgLibFY5FUzoVGtYUt+4kEZU/DhGgMUzWIs
      mcTv9yEKr14BvU6LvmqQTiXoDQwiAZFWp0dibIx+r086k0F6xUoy1AGN3/9cEzGqtQbhaAxD
      VUlmMvgk8XdeoMFggGVZr5zcBcMxGAyIRF5141zwNhgbGxOON7WLL+n1ceEGPbt8ywb47J/+
      C3//Xz+i3+syUHU0VUHTdNqtNqZp0m53KK48Z+OggWOq/D//13+mp/X47MN/4r/81w+xtS7/
      99//A/3GJn////4DH91fOh57e32J58vr6LqGqhmYhs5A0b7+W8UyDRRNxzJ0BoMeuzt7dNpt
      DMs8/LllY5kmxeIOpmWf6A2+eHyfvXLj8B+2SU/RAGhU9tjdO0DVD/NO1GaFju6A2aPROTxj
      qt0GT548ZXt7i88++y1d5QRW4Ii4rsuTJ08ol8t8/PHHVKvfzpc5yRgPHjxgY2ODL774gocP
      H3qai2mafPTRR2xubvLhhx9i2yf7zL+LYrHI+vq65+sBarUaH374Ie32yYz678K2be7du4dp
      Hn7v3zJr3rl6g7CZ5t6//nc2uj7SssbERAHTMKnU+1SqZSayeQrvBlkcTzM9kUMOxghLEj/5
      sx8jBf1M5ZI4joMgid9YYY4Y4MbVBV48e4zpiMgi2LaI3+9imi7KoEVXlRjPxUilU1SrNSxN
      Q68eEI/HUHsurjOg1++Syk7gk1/hTwNUVWFMsPn4X/4nudkFgvEEa89eoJl9CpOzdKol/uXR
      U96Zn8OXdNiqbJKYuEM6EaBc7/DuzZuIgoVlCsTDrz+nRlEUut0ujuPQ6XTQNG3oMUzTZG9v
      j0AgwGAwOJEd8V2sra3h9/tJpVKsrq56GuOI6elplpeXRxojmUximuZIC1GSJPL5PI7jAN+x
      AAKRBEk7iJLIcjUbJ5OIkAnBbz77gtzMddK5HJdmCxx0DUy1S6vTYnurhBvJMpnwo3XrNNst
      9hs5Uok46eTvvBixkMzz5XWioSADSyaXSSLjYgIBEZqtIAlbJizbWK6PWFgiGI0Rlgy6ioWj
      9XACEVKJOKblnOgNj08vkI8H2AzFMNQecjhCYWoWF41kLEKtUiGZyRH0+zFMA0QZ19LoKzJj
      ET9Pnj7h0pV3kKQ34zA7WgCSJBEKhWg0GszMDBf2l2WZVCpFrVbDtm0MY/idy3VdNE1ja2uL
      cDiM67qYpokkvfqh811sbGzw4sULFhYWPC/IarWKIAioqurpejh8ODx58uTY3j2RF0hXumwV
      q1y6vIh8Ej/Wv3G0fheCUYLy6Df9RSrE2eVc5wIZhvEacvGHp9frEYvF3vY0LvgOgsGgcG5T
      Ic6KS9e27ZHOrBe8Xs7tAjiiXC4jOjqR9BR+yUUSRRxHp9XSkewOTTPIXCGFKEm4rosA7JfL
      TE1OguuwvrIEgRj9WhExMcGtd+Zf63xVVeXevXvcunWLFy9e8MEHHwx9ZrZtm08++YRIJIKi
      KBQKBa5cuTL0XPr9Ph999BGXL1/mxYsX/O3f/q3n8/vq6irLy8v87d/+LT6ftxqFjY0N9vf3
      effdd0kmk57GME2TL7/88vhYev4XQHELzXLJDlRerO5w+dIsgYBEpdwnFRMwXR/P+3WChskg
      kCDiKvQN93ABOCZyJMXc9Dj1oIg/8aqEstHpdrtcvnzZk/F7hOM4xONxTNPkxo0blMvlocdw
      XZfPP/+cTqdDoVDAdV3PNz/AzMwMgiB4vvkBUqkUoVCIfr/veQEIgsDNmzdZW1sD/ghygWYW
      rvDO5QVkX4C5mQniY1nm5+YZiwbIjk8zOzeFYDlEx1IsLswS9MsEAkGqlQqu6Eey+mzslPAH
      gshvwBOUzWZpNpskk0lKpRKlUmnoMWRZJhAIkM/nqdVqnoKcgiDwV3/1V/ziF7/AdV3m5uaG
      HuP30XWd+fnRdk9JkqhWq0xMTHgew7ZtlpaWmP5a6eLcGsGKooxwtYuuGwQCgZHn0e/3L4zg
      M0o4HD6/RnDwRGnEL7s+dCrzMAyDUOh0xrrg9Dm3RyBRFBFFEV3XcRwbEI7/7/f/OI6D69i4
      fPtn3/XHNnW6/QHtVoNWp/fK3xdOkP34+xwZsDs7O3zyySdDpQ84jsPKygqmabK0tESpVOL5
      8+eeI7B7e3s8evSIZrPJgwcPRnIrF4tFvvzyy+MIrBfa7Ta//e1vPUXHj7Asi9/+9rfUajXg
      HC+AIx59cY/iwT7dbo+t7T0URaXXaaMoKg5QPjigVd6m3u6yvrXLQFGwjMPfKe5X6bbqbBf3
      DwdzHTY2ttA0nVZln2bXe0Ty+1AUhWazSS6X49q1a0PvZK7roqoqjuNQLpfZ2dlhbGzM01yS
      ySSWZfHw4UNkebTDwvb2NolEAlH0fssFg0F0XafX63keQxRFAoEA9Xod+CPwAk3OzlDcKdLw
      lTER0TUF21LRXT8/uHmN2kERzdDJTPipFtcxTRtBcBm0K1hOACUTRxa//phcBykQIptO4nM0
      hLC3G+tlSJLE1atXWVpawufzcePGjaGuVxSFXq9Hr3e4O12/fp2lpSUKhcLQc1leXiabzQKH
      tkyv1/Oscre4uMjq6iozMzOej6eqqpJIJEay7wzDIB6P02w2gXNsBB/R63bp9doEA0EOam0W
      pnN0dAdbt5icyNHrdpEFm4FmUms0mZmbpdXsE5YNqh2DQiGD6EKn3WJyeoZmZY+2BpPZBIIc
      Ihh4+TNk2FQIx3HY29ujUChg2/ZQ9oPjOOzs7BAOh5FlmWAwyGAwIBAIeErHqFQqKIrC+Pg4
      zWaT8fHxoY90R3S7XVRVJZ9/eX3zy1AUhVqtxtTUlOecJNu2KRaL5PN5wuHwm0mFsCxrpLPf
      WcB1XU9ffrfbHfn4cMHrIZlMvhkv0NtIBxjFUDpNdF0nHH59DR4uGI03sgCO/Omby88pXLrO
      6rMn3Llz+5XXNRoN0un09/58MBgQDPgwbQgGvjtKub2+jBhOnUAW5DBtIp/PcXBQJZ+O01Jt
      MmOj+fCPCi9OSq/X48mTJ6RSKSqVClevXj3x+d22bR48eMDNmzd58eIFfr8fXdeJxWJDpUKs
      r68TiUSwLAvbtnFdl3K5zAcffOD5CLSyskKz2eT9998f+vhSqVRYW1tjfHycYrE41Gfyh6iq
      ysOHD49tmTe6Nwsi1HY3aPRNyjurPFirMp8NICUmaO2tM3vtFisPPqMwe5WBohLwu+zu7hJJ
      pCjEfezX2/QMibDVoDyQCAka6XSalgJ+q0129jrThdQ3XnOgqGTGJDZXV0hkctSrFQrj45TL
      NbL5NK4rkBpLIAgC5b1tJMFht9JBdE26mjXyAhiWWCzG1NQUkUiE7e3toa49KvZwXZdEIkGr
      1WIwGBCNRocaZ2ZmhlKpxPz8PKurq1iWRaFQQFEUz6Wzg8EAVVU9uVKTySS6rpPL5TBN86UP
      xVcRCoWYm5s7fii/UTdoIJKg0WwxmU/SGygEBPBHIjTqDcIhP9XyHkIgyqDdwUEgEI6zMDeO
      MeixvL6FPxih26ijOwLpVIpMKkkilSXoE4mEQ9QajW+9pj8QPOyRpQ5ot9sM+m1Wl1doNGuo
      ik6pXD+2T1LpFNulGtl4gGr5gHqljGq9WR+B67ooikIsFiORSBz7q0/CUZh/fX2dZrOJpmlD
      jwGHiWurq6usr6+zvLyMpmlsbm6OFFw82k28HIWPCmH6/f7I+USu69Jut0mlDh+U59YLdOQq
      q+zv4vqjiKZKOJGi3WyQzWWoVuqkMhlEXJrNJpOTkxiGjmlaX1d/SfhksJHxj1AYc1EPcHaJ
      RCLntyBG108iBvX66fV6ngNRF7xefD7f+c0FOo1EttNA07QLN+gZ5tynQiwvL+FaCs+WN45D
      6M1W8+u/W1SrVU6yBVZ2NmgqBmsrS2i6ydrq2qk2jx4MBnz00Ufous4//uM/UiqV+OSTT3j2
      7NmJx7Btmw8//JDBYMCvf/1rvvjiC37zm994zgX64osv+NWvfsVXX33FP//zPw/t0fp9nj59
      yv379z0Zwa7r8g//8A9Uq1U+++wzz3OAQ6/cL3/5SyqVCvBHkAqhdxpsl8JopkGv26FS2qGl
      unRqZSo9g0w8RquyS1MPEBYGZKcW2HzxjOz0PD7BJTsxRSzkxxUE6uV96o0GmXQKRdHoqSaJ
      8Ol0YIlEIuRyOVzX5U//9E85ODigUCgM5e6TJIm5uTls2yaRSGAYBjdv3mR/f9/TnFzXJR6P
      o+s66XQay7I8G6BH3hsvnqT79+/TbrdxXffYePWKoijMz88fp0Kc+x0gmS9QKddJhPyoqoKi
      qIiSiKIoiKKEIECv10eSRSQcKuUSfc1CwKXX66INeqiGDYIPe9Agmsyxv3+A4+oclIfzrryM
      TqdDuVymVquxurpKKpWiVCrR+A7P1vdh2zZ7e3uUSiX8fj+FQoFKpeLZdVkoFPD7/czOzgKj
      HStnZmZotVqeUsPv3r3Lf/gP/+HQVV0uD/WZ/CHxeBxFUc6/F+i06LZbhGIJfB6rwdrt9kWb
      1DOKJEnn1wj2Igb1XQTDEVzbwvCYyWFZ1plJy7jg25zbBXCWZFGGodfr8ezZMyYmJuj3++Tz
      eTKZzImudV2X9fV15ufn2dzcJBaLYZomlmWxsLAw9NwbjQb7+/tMTU2haRrj4+NDj3HE6uoq
      9Xqd999/f2ivmKIoVKtVkskkq6ur3Lx503NQ7qi+4ag++VzbAK6tUCo3ePr4CbXyAfoJElI7
      nc53/8Dscf/xCv1mlacrG9T21tmtfM/vjkAsFmNxcRHDMNjZ2RnqZnFdF8dxUFUVy7I4ODjg
      2bNnng3XJ0+e4Pf7CQQCdLujNee+cuUKiUTCUxqzIAhomkYgEMAwDPr9vud5HBXEHNkR53YH
      ABCkEHp/B0mSqHVVBv0lmm2FQDRMLCBRbZtEfQZLm/vMT+awfFHsQZNCLsP9x8+5fOkqcjzG
      1blpBBwE26bSVQnK0OgZOEIZ8qcre+i6LrVa7dhoXF9f5+7duye+Xtd1+v0+g8EAQRBIp9Ps
      7OwcqyAMQzweP05I7HQ62LbtOQ+/3W4Ti8U8J9N1Op3jgpxRCmJM0yQWi9FqtYBzvgBAQLId
      JmenKZWbBAJBZL9DMpVhPBmm098hGI5z5Z0oqUiAclsll88i+4MsXnmHdHyM9Mw49VqNbDLM
      xGSWbl8lEpBRbBtcEYfT30YXFxcJBALMzMwMXcgSi8UQRZGFhQWCweBxDo4Xrl+/frwjZjKZ
      kWqCg8GgZ2eAaZpkMhkkSSIejzM5Oel5HrIsIwgC165dA86xF2g0WZTfw7VRNZtQyJsoVLfb
      HakO9oLXRz6ffzNeoLfRfuk0K9BE0XtukeM4nnPXL3j9vJEFcBSIqVUqpDJjDDSIR74dVFEG
      A4J+EcWWiQZfbrjpgwFSJIL4taTJ9zVN01QFQfIR8B+Od3gcEE6g9+9imjaiKHz9+wK27Qx9
      Bvb69DdNk88//5yJiYmhPTiu6/Lw4UMuX77M1tYWwWDQkzboEZubm+zt7fHTn/50pFrcTz/9
      lJ/97Gee59Htdnn8+DF37971rLXkui5ra2vH9+QbtQE6jQMUrYdmRzjQ2yRTaeSvuxgG5CCV
      0jZYOsLYNMVWlcmpPBs7FQJ+SKVyNGsHZAqT1MsVYkEfNVVnbiJN3/RhqQMCog3BBJP53xVM
      rC49xxSCXLs8w8CAdrNGKBAknUmjDbq4vgiu3kMOj2GpHcRAjGQ8Agz49OPnzM2nsIUQi3M5
      tjcPWLw8+0Y+K1mWmZ+f93TuFgSByclJdF1nZ2dnZEnCVCp1rKXplbW1tZGTAtfW1hAEAdM0
      PS8A0zSp1+vHc3mjh9NgLI01aNKt7bF9UKevKmzulNlZXkIM+vH5Q6RTY1iDFtVame2dHcay
      4yRyk3Tq+yRSGeq1CkqvwcCQmC8kafUVmu0uuUya5dV1ms1v9o8yDA2/38+zp49ZW9vEAap7
      G9Q6KpV6g2ajRqm4zbOlFRqtNuXS3nFy3NR4hr1yA0vr8/TpCxTzzdU1DwYDPvvsM08GrOM4
      vHjxgrW1NVKplKc+Y79PpVLBtm3PyXBHWkXb29sjBQVzuRyGYRx7cLwwGAzo9XocHBwAb9gI
      1nUd0bXQHYl2rUwqP4FlGuA6x0lXPknAsB3qlSrJdArJF0QUQe00KFXaLF6ap3xQJp/LIcsi
      pm1juyLhgJ9Oo4Iphcilfuc5WX3+GDeQIBZw6RsiybEofklE0y2CwUPDtlEp4QYStCvbZCYv
      IToW09NZOh2bRn2PRCpHOhml0eiRTg+X23/RIebscq47xHh5W0d+bsdxTs1z0+l0LrRBzyjn
      ukPMKI3UThNd10fS1b/g9XJuF8ARmqoCDrI/jKUrmC7EvvYAaKpK8KRPZ9tAtSVC/kMviKUr
      DEwBWXAQRQmfJGALEgHfaB+pruv8+te/5s6dOywtLXHz5s1jecKTYts2Dx8+pNvtHufg//jH
      Px56LkdFOvPz8wwGA957772hI7m7u7uoqoosy2xvb/Pzn/98aGO42WyytbVFKpVid3eX69ev
      D/2ZHNHtdnn48OFxZPzcL4Dd7U1sx8IfzRJEo20KTCXDtFQXs1dDiqSI+116pkQiKGA6Ip12
      i2wmgz8SwdI1auUDxuJhtqoD5mdnyIxFURWFzWKFeCyEYNuIjkMwO0EhOVoBvGEYx+Ktuq7T
      breH/rIlSTr+gvv9vqcYhuu63Lt3j1arRTAYJBAIoGna0Me5mZkZVldXicViyLLsKT6TSqWo
      1w/VO1zXHUlkze/347rucZHQuV8AgigiugKqrhP+OvRgGAbdrkoqNoamKTRUF1GEliER90sk
      shmKGxukZueo7+1RmJmmWz8gPz6LpvRh7FBnZzwbZ32vwWQqiiSKcAodZAOBALFY7PgG9mpA
      y7JMMpmkUql40tERBIG//uu/pl6vI4oiu7u7ngpi1tfXaTQaCILA2NiYJ1dotVqlUqkwPz9P
      JBIZyang8/mIRqN/PKkQmqYhuA6GAz4RTAcEU6GlOIQlE0MME5UteqZEKh4mGPCxvbXD+NQk
      pWKJdDrBvU/vcf0HPySXSWOrHTq6SC4ZAVGi2+kcitGK330EuugQc3Z5Y+K4bwNd189En+B+
      v3/ifP4L3iyCIJxfL9BZkUXxcv4ulUpEo1F2d3cZHx8fegHZts1XX31FMBgkmUximiaLi4tD
      z2NnZ4d6vc7CwgKqqo7UnK7ZbKLruqeimkajwcbGBteuXaNarXp6L0dYlsX9+/ePxzj3aYor
      zx+xvv0HnRZtnXZXxbEMVO0PSyd12u2Xu1CtQZPtgxaNep12p41j9ml0TkeIy7IslpaWKBaL
      bG9vezozS5LED37wA2RZ5vHjx54LYnZ2dkilUvj9/u8vFDohgUDA8xjBYBBFURgMBiOXl4qi
      SDAYPI6On9sd4AjJF8RU++xurdFVHaJBAUGW6fVMcpkxBMni+bMq+UKeVr1CLDvGwUaVycUZ
      WqVt0lPT1PZrIAlk8hPMTORwjQEHFQ0tBK7ZZ1cfEC7cJp0Yfdcpl8v0+31qtRqZTIaVlRV+
      9KMfDT3O9vY2c3NztNtttra2PPUcXlhYYHV1lWQyOXJBjOu6dDodT0HGI4VrTdPo9Xrouu55
      hzcMg1gs9sdREQag9tu4gTT9gYJluXRtkUx6DKXfRA0HEGWd/Mwidr2IJUoMBirT85dBrVBt
      97B8ZfLj8yDaYKkMFBU/MDmRZX1pmcuLk0ykJ9lpns58p6amjhWe6/W6Z1nFqakpwuEw169f
      9+w2jEajXL9+HcMwSKVSOM7w2bBHDAaD4zGGXQA+n49UKnWsEm2apucF4PP5cF33uPXUuTWC
      j3AcB1z30H/sgiSA7brIkozr2AiiAIhgaTx++pzxuSvkkjEO06HN4woiANtU6GkCyXgIFxHH
      tr7uBAmuK3ydOv1N2u320PLkF7wZfD7f+fUCmaZ5JrxA3W73okPMGSUSiZxfL9AoOpanybDH
      D03TePDgAePj4xwcHDA5OXmszDYMjUaDcrmMZVkIgsCtW7eGHqNYLB4feyqViqdUiCNs2+a3
      v/0tP/3pT4e+ttlsUi6XKRQKPHv2jLt373p+qLiuy8bGxvH159sL5JosPXtG8aD2Hb1lXTZX
      linubnNQ+3Z+eb1WO64LePLoEc16lcreARqwv1/61u+fFkfF8KFQiHA47Engy3EcDg4OME2T
      sbExz4mB09PT6LrO5uYmjuOMVGa6sbHhuSAmlUohyzKVSoXbt28P3fDj9zkqiDlyT5/bHeAQ
      EVkWMHWFp5srTI0XUIQg7d0XyIkJ1F4XUbLJZzUe7e8RDkooZoCIpNLRIJXNIgDRkMxuscxY
      OMD+ixaiKzKCS/yltFot7t+/z40bNzwX9luWRbfbpV6vY9u25wWwsbHB8vIyc3Nz1Go1NE3z
      pDN6VBCzs7PD7du3hxa1qlarPH/+nMXFRb766ivu3Lkz9ByOUBTlG7pC59YGUBQFHJO1tQ3w
      R3DUFrFEhlS+wNqzh/giSVKJ6OFTMupnY6dMNB4hk5uhuruM6viZyKdJp9NUqxVq+yWSqTzJ
      mUkapT2mJqdONI+LDjFnl3PdIeY0ZFEGg4FnZeUjut3uSD2tLnh9ZDKZ8yuLchp9iSVJGjny
      6DjOSF0NL3i9vFFZlOr+Ln3Lx0R2DH8o9A0L3DYMbEnC/3WgRVXV49zz73sSq8z1W1MAACAA
      SURBVF8XtLzML+E6DgjCS70XR5vgqzwc7tfxhKPfO4lHZNjwf61W49mzZ8zOzrKxscHt27fJ
      5V7d4xh+Jz1y9+5dvvjiC6LRKKIoMjk5ST6fH2oeAF9++SW9Xo/p6Wk2Nzf5y7/8S8+7maqq
      /PKXv+Tv/u7vPF0PhzGVpaUlT8U9RxzJzRwFGN+oEWzYApLZp1TsoVgOs5M59g7qzE7mWXm2
      TP7yPP1ml8XFBer1BiEfKI4fXe0S8Ym4gQSO0sSSo0REg+1yhx/+ycvdew+++AyCY9x4Zx4H
      EVXViEcjSJJAt9MlGI1T2dsglp4FRycaDtAb6IzFw3R6KkGfAHKQcNCPYxrcf/AloUSBZCzA
      1NTwepuvIhAIYFkWKysr2LZNq9U68QKQJInZ2VksyyKbzaLrOvPz856l4o/amkajUc/FLHD4
      4Pj4449pt9tomuZZ2XlsbIxkMunp2iNEUWRqaurYLnujC6DXrFAfuCxO5kjE/Kzs7jGfjvFk
      dZfLszOsbawiCmEG5uFxSdc0uppGwAfNZoOG0mB2IovkWnQUg1zqJFqTLuFIhNWVZSLBMGJI
      ZG/XJRAUCfoEtEYLn+CwvfaCRqdDIVcgKDnsV/1kUwme3H9MJDvDD29fPZyTqhDPB+FEncWG
      JxgMEovFuHXrFqurq0OlQti2TbFYRFVVRFEkn8+ztbWF4ziedoBCoXCciDY2Nub56S8IAr/4
      xS+oVqsj9RpuNBocHByQzWY9HytN02R7e/tYK+mNGsGqqiLjopgO4YAPyzHZ268zO5lle+eA
      qZk8uztlFi4vYhs6Wr/NwPGTjAbpNmsIoQSJyOEHqHSbDGwf0xO5lx6BWq0WyWSSVquFX7BY
      39ln8coVKuU6mXgA1TSp1ppkkinq3R75TIZYUKKrarS6Gj57gBxJ4pdlCtk0vUEfRdEJBv0n
      ehpddIg5u0iSdH69QKeJ6zjYjuMpkNNqtc5MbcIF3+Rcp0KoqnrquUBeztLDZi7ats3W1hZz
      c3M8e/aMqampoQtiXNdldXWVYDCIbdsEAgFPkuLNZhPLOkz4q1arXLt2zXMqxGmg6zr7+/sj
      ST0epUKc+w4xruvi2iaqYdHtdbF0Dcv5xi94VnzWlS5b20Us20F/xaIYdhG6X8/LcRwmJiaO
      23kOSz6fp9VqoSiK59SBQCBAu91mf3//uEvL28R13ZHn4LouhmEcu8nP7Q4AgOhS2T2gUS+T
      yhZIJkI0eyaJIOgE6VR2iGWnkV0LbA1TDBORLdqqTbNSYmbhMt1Wk8JEgYPSAfmpOeJhP51m
      l2TSR3G/QUC2mRg/PflzQRCO2wBtbm56SmJzXZeVlRUuX77M5ubmSPPp9XqIoohhGJ5rAU4L
      URQZDAYYhjGS2JhlWceB0nO7AwAIgh9LrZNM5WkPNHrtNhubm6iKQq/XIxxP4Zoaiqqi2wLY
      Gu2+jmNq5Mcn8RkdoukUO5ubRFMpOq0BAK6t8+z5Jsnk6ef527Z9nASXTCY9R7Sz2exxU2iv
      0uhHLYkuX77M9PT0W1e4O6oMG6UDqOu6BIPB4zHOrRF8dOO063UiyQSd9gAfOrWeRSosoBFk
      LHroUfr9KqX1Z1/RdGL84PIEBn66rQbjk+NIko9Bs44dTBLzu8gBP4qiIcsS4ZeIRV10iDm7
      5PP5N+MF0jTtVFIThn3Ns4CmaSP1tLrg9fHGZFF8Pt8bPz++7e36iGG9JoZh8PDhQ9577z0+
      /fRTrly54lmOxHVd7t+/j8/n4/bt257GgMNj2Weffcaf/dmfeR7jNHBdl88//5w7d+6MFFD7
      fd7IApAkCUmSKJVKxAIyQixNLHCCl3Zduv0+8RHSict7W2iEmJs6NFRbrSbJZOr4591u91uB
      KlVTCQV/d6wxlA6mFEPrVSntlggm81yZP1k69LAL3+/3k0qlaDQaXL16lWq1OtIC6PV6Iz8M
      NjY23qr784harXbcA/m0eKNeIFvXqeo6Qm2f//aixJ0b84SCfg7KbVzBJZmMMegoRJNp+o0S
      gXCcWrPDj3/yY4I+DzuIo9LTfSzOZ1hfekogOYHeb1AtFYlkxulWD3D9IcTtTSKZSfq1HYLJ
      SYKyzX63gxzPMTuRRZQk6rUDbNMmm00Sy3nvmP4qNE3j8ePH3Lhxg62trZF93qZpjlTJ5bou
      iqKws7PDn/zJn7zVXge9Xo96vU6r1To1oYE3mwrRrbK+r5AKmjQVh7GxGNPZGOWWDYKNo3eo
      lNvE0lnikQCOY1OrlLl8/Za3BeBavHi2TDqXYvn5C+RYnnzCZeXFFgvXFjCMEGG/Sl+VCIT8
      xMMBEEBTuhzsl3FDSd6/fYNg0M+TL+8xcfU9zPY+sdws0cDJ5nPRIebscq47xBxhaAqGI4Bl
      IAfDSAIYmoroD2LrKnIw/PXfESTh8KNwXRddUxFFgYFmk02PoesaPn8A17YRJAnxhEeCdrt9
      oQpxRgkEAud3AZwVVYhut3vRIumMcq5zgc7KAvBqsHW7XR49esTMzAxzc3NDXes4Do8fP8ay
      LAKBAIqi8MEHHww9h2KxyGAwwLZtKpUKP//5zz1780qlEp1Oh+vXr3u6Hg5lI58+fcqNGzdG
      Eur9fc7tAjjEZXt9BYIxYqEI6fTYsSJASALDHyX0Hd9no9H4znxzU+3QNfyYSpPqQQlfPM+1
      S6+nb7DP58NxHPb394deAIIgHBfRSJLkOXI6PT3N6uoqtm0zMzPjWRUCYHJyksFg4OnaI/L5
      PI1Gg0Lh9FJPzvcCcFTwp5ibSvLwy0c02nlCssHubpl8IkQ3lEHbW0FMjhN1HeRoBAwNA5Hl
      J/eRE+OEJRt/NMk7i7PIgTC9yh4IfgoT44Tip/dF/CF+v59IJHLcyWQYHMehWCySSCTo9/ue
      j2AbGxvUajXm5+dpNpsj2TJbW1tUq1Xm5uY8u2Vt22ZiYuJUI+vn1gZQFAVch9Wl5/jjSYJy
      EAEL3dTRel0yqSTFnoXQb5LI5QhIYXD61BttJH8QU+mTyOYI+EPgmASDQcbGEqw9f0Jm7iq2
      0iQUzRAJvbxK6qJDzNnlXHeIOQ1ZlCNcx6avaMSiw2//g8HAc0fDC14v575DzGmu7UDQ2zFi
      2JoD27bZ3NxkcXGRx48fs7i4OHRJpeu6bG9vMz4+TqlUIhAIMDV1ssj1d7G/v8/e3h537959
      q4l9nU6H5eVl7ty547nK7qhDzKVLl4BzbAO87dz1I4a9YY5kBBuNBolEgq2tLU95PI7j0O/3
      GQwGtNvtkRbAzs4OuVzurWe1+v1+LMui0+mcWCnjDxEEgXA4TKVSAc55PQDAg88/5eGTJSzb
      xrYt9kt7DFoVdistBv0+tn1YHGHZDqrSZqd4+MHU94t0VY215SV+9at/YadUeSPzFQQB0zQx
      TZNOpzNSDo6iKKeSiTs7O3usNvE2OeruMso8LMsiGo0eH5HP7Q5whG0ZSILI9uY2fhxq/Q5y
      Povjmnz8r18xPTNFjwipgIDquoT8h2kL6VyKpaU1kuNzzMh+ZieHlxXxNF/bJhgMIssy6XTa
      s8vvqKH0/Pz8yMlwkUiExcXFtx7QkySJYDA40m4myzKGYRzHI86tEXxEo17DMEx0tU+ra5DL
      RcGV8AV87JcqJONhorkZXKXN3kGZVDqDzxdiPJ9idWmJhatXqVerFDzo6sBFh5izzLnuEOMV
      xzKwRR++72h35IULWZSzy7lOhRhNFsXitBIpvDZ0MwyDL774gtnZWaanvUkwuq7Lw4cPiUaj
      nuuC4dALpGkaCwsLnsc4DRqNBsvLy7z77rueM2xN0+Srr7467ld8bo1g13VxHQvdtFEUBds0
      sP9gPdiWiWaYvGqdGIaBY5m0Ww329/dRjZPn93hdhEfKBaOmD5xGTfLExMQbV/f+LlKpFLlc
      biTHgCzLzM/PH4ucndsFcIjNQWn/sE3SfplGtUKr3WBzq4iu9Hj25CFbu3tsbm7R77bZ2N5j
      0GuxvrnF1vYOjnN48+7v79OolrFFiUa9hXRKx6OXYRgGgiCM7HkZGxujVBqtpdPOzg4vXrzw
      rKN0WqysrLC7uztSfEdVVT799NPjIqFzawMcubnWlx4hyAn6pkk6KKOJAnGfTG1gMJ7wUe45
      FMb81Jsqzeoe8cIcSdnB9PlJ5/JEfDKN/V3KfZvrV2bY2txjYeHkCXAXHWLOLufaBjgimSoQ
      S6dotfpE/DKuLOETwB9SqDW7jOcKRAICrisjSlOksxmCIjiiQLeyj1SYZiyXw/IpCAhk0qlX
      v+jvIQjCRYeYM8y53QE0TTsTfYL7/f5FLtAZ5VznAp2WbMaoDJuLbxjGsQTJgwcPyGQyngvj
      Hcfhk08+we/3eyqIOWJzc5P19XX+4i/+wvNutr6+zs7ODj/72c88j7G3t8fa2hrvv/++57oE
      27b5+OOP+clPfgKc80iwa+t0VRel1yIZi2L7AoT8fo5sWEPt4/qjfF99e6fbIRGLsr9bpNJs
      MTGzSD79erX+/X4/k5OTaJp2KvlMhmGMpAoBEIvFME1zJG9SNpvFNE3PvYKBY4ULXdc9LwBJ
      kpiZmTk+HZzrBSCIEvXyDq1mjW4qz1jIT8s1aXc0CtnDRLPM+Cy24xJEQ3H8RGQTOZIhn05g
      dJuUlT5iIkfUsl77zQ+HR7e9vT0CgQDXr18fyfMiCAKFQmFkG6Tb7ZLP50dyPxaLRfr9PrZt
      e14EyWSSSCQyUkqGaZrf8CSdWxvgiKVH9wgnZyi3OoxH/FgBPwlZoNxTicoWphCkXG2TigVw
      XYFgNMT8zAyOA9gqn99/wY8++CFbWxtcXrw09OtfqEKcXc61KsQR6mCAPxxEUwx8sogrCEgC
      2LZFu6sQiwQY6A4RHxiuTDjkwxx0MH0JxsI++gOFaDSCruueIrqtVutMGOMXfJt0Ov27BfA2
      evm+Ts7KTXfUYO6k2LbNkydPmJubY3d3l6mpqaEbwrmuS7FYJJvNsrS0hCRJnmoKWq3W8T1x
      cHDAzZs336pEYrfbZXV1lVu3bp2K9us34gCjdkQ/a5xmSeQoDHuGdxyH8fFxqtUq4+Pj1Ot1
      Tx0RLctC13Vu377N6urq0NfDoTJFrVZjYmLiWGbxbYoO+3y+44KY03Itf8saufev/5NOX2Xy
      yjUEN0S9tMEPf/Jj/CJYrnConibK+H3DGzI768v0LZnLCzO4HI5l2i4+ScS0HfyyiGm7yCKY
      lkmz0SUWDROKRrAsC7/PB65LuVImX5hAll7tlWg1m8RjYTTbQXR9hEI+MBWamkgq5mdjZZXk
      +CSp+GG0tlKtks/laDebxFMpRKC0s4FuiwzadeTkBFfnJ1/amXIUTNOkVCpx+fJlVlZWePfd
      dz2NI4oiiqLQbrc9y7NLkoSiKBSLRTKZzEgenNPANE2i0eipSt9/6x31dIG/+vEN/v7Xj4lE
      xvHpTX75P36F3t9DlQuExT5/8Tf/K7nk8OF9W/Rz4+oCL54+wnBEZBFsWyQQcNF1B11p01Il
      JvMxxpJJSntVMmNjGOI+kWgEYyDgOgM63TaJVI5o6NVPI1VVCcsC5WaZeg0yicMYQanWIZkI
      U6m2CY6lWC+uUerCVD6J3luh2tb5QSoFOJiuj4WFGZp7LmLu9d38cHjjhkIhFEUhEonQ6/U8
      eT2Oji65XM6z16TVahEMBolGo8eeoLdZFimKIn6//9REseA7vEBrz+6zfdDmzp/c4vmzDdJj
      MWQB+oMmUjiLLNncunHD04tV93eodU0iss3Alsink8gCmEBAhEazie7IhGQLIRBDaVaJjeUQ
      JZOeamMPurj+KGFJZ6ywwFj0+43SoyPQ4/ufk0xmkBMRqrstggGLWDSKEM2C3gbXD4JFu7qP
      KceJRfzYSo+BKTI3P8VYPM7a0jOkcIqkbCDm5kkM4VXs9/sX4rhnlGAweH69QKdhA5yGsvOF
      LMrZ5VynQpyGsXYaN+6w59WjDjE3b97kq6++4p133iE/ZDnmUSHMlStXWFtbOw6qeWVlZYWd
      nR3+/M///K0awbVajaWlJW7fvu35wWTbNl9++SV3794FznEk+Mhg6/d6RKMRen2VWOzQ02Wa
      Jj6f7+vQuos/4H/lud51LGr1JrIkoOkmmdw4fvnV1oDXDjFHnVDW1taGXgCCIBynUwQCgZHd
      21euXEHX9bfediqZTGKa5kjvR5IkcrncH0mfYODxgwfcunWNh6sl3pkdxyfYbBy0uDyVYWWn
      QjoeJZuK0rdkJLOHHM2gtSvEklkknw9JlAgF/eztbCNHEvglm3K5Sy7/errEaJrGo0ePeO+9
      9/D5fJ52IcdxeP78OcFg8FRu3FqtdiaOcdVqFcdxUBTFk2sYDh9+R8rZ8EeQCrG18phaXyQa
      CxEQbRxXxueXMHUTX8CPZVg0qnv4ohnCskUw6GNtu8ncwgzN/SK3P/gJQUlga2Odydk5ZFFn
      c6PDpcsn80RcdIg5u/xRdIjp97oMFI1AMICAS7/dwBDDhNDoO36yiSi60qFnSgRcFV8sTb9+
      QDiRJhwO0a7XSE3MEnA1NrZLLFyeR+ubJMZOFji8yAU6u5zrXKBRU4BPi06ncyGLckY51yWR
      Z6VRtmEYQy0ATdO4f/8+6XSag4MD3n333aHP347j8OjRIxzHYWpqis3NzeMCkGEoFosoisLc
      3By/+tWv+Pf//t8PPcYRpVKJbrfrqd/BEZ1Oh9XVVX74wx96HsO2be7du8f7778PnHtViMMk
      LlXpY1jfvSO8THbk+37mug67m+vsl0o8efKESqNzKnOFQ1XrbDaLz+fDMAxardbQY4iiSCKR
      wHEc1tfXPXtNpqenEQSBp0+fHgvTemVycnLkAp9EIjGyPSVJ0jekFc/tDnBEvbRNV8mTjMVo
      tjukUykcU0H0RUhnknTabQI+kfX1TVK5Ao3KAancJN3GAbboQ7QNEplx2rUS8cwU47kkavMA
      OTlJPu5HM3Ty6dMzchVF4eDggMXFRaanpz194Y7joKoq2WwWQRA8awttbGxQrVaZnZ3F7/eP
      lGF7Gh1ims0mBwcHZDIZUqnhxAmOME2TYrF4/gtijiLBpb0ixd1t/LKfgSUwU0gzMA00A967
      eY2tjXWiIZm+HUDpNshPzNKt7yDISXSlihzKYGoKyWwK29DJ5Qs4SpPdls1ELkmlvM/C/Pcr
      pvX7/Qtt0DNKJBI5v0bw0QIwDQPLMpFliXqzSy4zhm65uLZDJBKiWSsjBCJYmkIimUYUBFzn
      MOU2HI2j9rtEEikkEWxTpdM3yWeStJp1ApEEkuC+9Ix/kQpxdjnXblDDMM5EUUy/3x8qaOM4
      Dpubm8zNzfH48WPeeeedoXcQ13XZ3d0ln89Tr9fRdZ3FxcVhp06r1cI0TWzbplgsjtQhpt1u
      o2naSB0eVVXl6dOn3L5927Nn7aiF7PT0NNls9vx6gd522P6IYb1RjuMwGAyo1+t0u12ePn3K
      j3/846Ff1zRNBoMBT5484c6dO0NfD4cGY6VSod1uUygURkqFliSJVqs10gJwHIdsNjvSOI7j
      MDExQbVaBc65F8i1FKqNLmsrq3QbdVq93jcEctVug1K18Upx3Hq5yLPlNTZWnvH5V4+x7NcX
      YxBFEdd1icVizMzMeH7SSZKEpmnEYjHPFWF+vx9VVZmammJ7e3sknVKfz4eqqiPFZzqdDrqu
      k8lkPI/hOA7b29vHWkvndgcAEOQg3eYqg/6AoiCRCQXYru7T7WpkMgnK+/sEYimqpR1ymTTP
      lja4cnmWerWB4Avw7q13CcoSXcXk3auXMbUeck05USWaVyzLQhRFut0upmly69YtT+Pouo7j
      OFy7ds1zi6RarYbP5yMYDDI3NzeSHEmj0cDv92PbtuedJBQKUa/XUVXVs96qIAiEQiE6nUPX
      9bm1AY5YenCP5PQldko1JmNBrICfuAyVTh+11yGUnmQq6WNrq0yzVSU/d42MD0y/TDDgJxJN
      Ut5ZoWdKXJotUG2ozEydvEHbRYeYs8tFh5hX0Gm1iI0lGUUN/aJDzNnlXKdCnIYXKBgOYxqj
      aeIPe/zQNI0HDx4wPT3Nzs4Oly5dGtrgO/J0HNUC+P1+rl69OtQYwHHAyLIsms0m7733nufj
      S6lUwjRN5ubmPF0PhzZAsVj0LBTwXZxbI9iyLGzbPhN/hiEQCDA3N0er1eLy5cvU6/Wh37sg
      CMzPzx8XkY+SCqFpGq1Wa+Q0hsnJyaGFgv+QRCJx6t69c7sAAHAdVp4/4cnT5zQaTUxXo1w+
      VGr7wz9nhVarxeeff04kEuHRo0eepEgcx+E3v/kNjuNQrVbp9Xqe5rKxscGLFy+IxWJUKhVM
      03vntK2tLV68eDHSImg2mzx9+pRms+l5jD/k3NoAiqKAPWC7pBAPmmxuFEnNjtPeqxOKh9nb
      XCM5MYtg2Vy7dYuw//V0lr/oEHN2Odc2AABSGEfb5WAgcWlxhqZpM7NwCVwFrDni6TSBYOy1
      3fxwGJU9Kyp1F3yb870DnAEucoHOLm9MFuVtCO+elYqwYd+3YRjcu3ePW7du8ejRI+bm5obu
      EOM4Dg8ePMBxHPx+P4qieCqI2d3dZTAYIAgCvV6Pu3fvvlVx3EqlwsrKCj/84Q89B+Vs2+aT
      Tz45Ti95IwvgSHi3sr9HqjDJQWmPmRM0f+4P+kQj3x9EsiwLSRRxXJC+Jzrb73YQfAEioZO2
      THKxLAdZlrAs6xtGqOtYGJaLTwTTFRBdG9EXQHrJPXEUcTwpR9J/Pp8PURQpFotDL4CjxhiO
      4+Dz+TxXx83MzLC8vEy5XEYQhKGr206bo3avXuUi4TBFZHp6+u10iOm2ajiSj+W1XeIhHwct
      lUTAxfZF0bt1kvkpGvs7pAtTHJT2EWUX2xHJZLMkQjLtnkpfs0iGBDqaQ7W0TTqdpqVAIeEj
      lCx8qzhlZ3sTw/UxP51DtWXGwjJ9zUTrdUkXJqgelHGNLk6sQNgZEE6m2F7eZP7qVarlIolI
      mGA8QywcwBjUuL/aZTJmo8gRfFqTQGqe6cLJ5c9fhaZpFItFfD4f0WiUy5cvDz2G67psbW2R
      SqXodDqeI9Hr6+v/f3tn+pzGtabxXy90s+9CaMHGi2TJsRJfe1KZTOXmU/7vW1OumcRL4iVy
      LEUSklgkBAY1NEtDb/MBw9i5ybVp4ljD6KmiSgL16dOoT5/zvud53oezszM2Nzc5PT39pHVB
      ATY2NtjZ2ZmpyMAndYgpF484O6kixZKE6fNq/4yNjRU6hoTPaiOHIlTLZWTRT3btNqKlkwgr
      HJXPifltbDlMvaZhDV7jiyyxGA+wkE7QaA0ZtKvYaoLba/l3zvnkhweokQwB2aR42iaTjpBZ
      TGKZArqmo2nnLC5liGVXOP75J4Y+P6lwAss1Eew+J9U6C6s3+Gwtz7BzxstCm4DioigupeMT
      /NE0X93f+sNr1jTtsizKBYUoin8tFWI4HL4he0k4poFu2AR8LragYhs6gWiSTqtJJJZE1xqE
      40lUn4Q5GKB1ekRDAfS+SdQvog9cwgo4kp9+t4MsusiBKNHQu0udvV9e4PrjhH02bUMgu5jE
      r0gIgky33aZaq7G8kqWpD3G656jROL1mg/jSFXyCSbNewx+JIwg+sqkg7c4A0xERrC7+2AJm
      v0MimfzDynKXVIiLi7lWhP2ZlzWZLj0EgJqmeRoAjuOwvb3N6uqqZ/0rjB46tVrtHSH4h0LT
      NEzTRJIk6vU66+vrnzQI/rMx1/sAs3DX/0x4DRwdxyGbzVKr1TwPANd1OTg4QNd1TwNAkiRq
      tRqGYSDLMoZhzESJvoiYbyoEcHywS7la5+35wBz2Md8qkzLeM/gj3k63fY7eH9Jq1OgNHV7X
      323vY8BxHE8ZoLdh2zaVSoVyuezpeEVRMAxj4s37qYPgj4G5nQHG6PUNXFMjKNu0+y4ByaQ3
      NFGVCKoCWtfENTRsOUQ4oBDwiRi2SF/XyKzmiQQUOloLXehh1Q+JXAvTKh9DIE46PJv/7vvg
      8/lmkv/Jssx3333nuSxKvV5HFEXy+Ty6rs9lLDO3McD4qb63+wrHkdC0M9RQmnBEJR328cvh
      ObeuJDk8a7GYjCJJAl1jiE8QSEYkfvylwtqtDZYX4rw+PUHvt3BMG0sOvtEJpPlsPf/eflw6
      xFxc/L9wiDkpHiIG4kRUOO+apJMxZFHAsS26/QFdw2IhOXKAtx0HSRRRFJlKqYSqqkjBBGFF
      wLYtRElkaLmEggEGH7gevqRCXFzMdVmUae1JPxZ0XZ9KxO26Ljs7O6TTaba3t9nY2GBpaXov
      gnEVNRgtpdbX16duw7ZtHj16xOLiIicnJ3z99dcz6wJmQbPZZHt7m/v373u29R0Ohzx69Ihc
      Lkc+n5/fLNBFWa9OS0MYDAbU63VUVUXXdc96gFKpxGAw4OzsjJs3b07dBsCvv/6K67rkcjk6
      nc4n1000Gg1EUZwpGPf5fIRCocn/Zf7C+t9gZ/spr/aOcAHbNOgZI0HGoN/nf/NADvV6Y/Sj
      1WX3oIzRblIon3JeLVLX/7rZpNVq0Wq1OD09JZFIUCwWp27Dsiw0TaNYLBKPxz1lgVzXpdPp
      UCgU+Mc//oGmaZ98AMRiMfr9Po1Gw3Mb/X4fXddpt9vAHAfBYzz54QG+cIZEUMB2ffj9AoUT
      jZho4ktncfRz5FAU0XK5sXYNBg3+61mV5UyQoWmiyBIOEjeu5z2d/9Ih5uJirl0ixxAFkaHR
      x44kyUb9nHV6tBs1Vq5fY4hNb2AhCz3CSgC90yHig3QiyHnXJiwZVOsdbEnh2vW8p+nSdd2Z
      tbCX+HiY+xnAsW0QhHe28B3HmVRgA0afY9Fs9kglo7+/ySUInhziL7lAFxdzTYUwTfNfrll/
      b9c3EgkwnEH4/aHn+VcYZym+/PJLfvrpJ5LJJLdu3Zr6vJVKhUqlgmVZ+Hw+T64q+/v7VCoV
      kskkhmFw//59zwHowcEBpVKJb775xlNgD6Mg+OXLl2xubnpOLY8dYr763rY0vQAACexJREFU
      6itgjneCZ6lg8Gdi2gGgKApLS0vIskwmk/EUP1iWxfHx8aSmj1csLCxgWRaO4zAcDiczpxck
      k0kODw9nItPFYjHS6fRMlfbGDjHjh+PcZ4HqtRqNszLGe+6D3uvXdP5ARrn/8hntgc3Dh49w
      rR7Pft75CD0dwTAMyuUyh4eHlEolz6S+8eBZXFwkk/nwUo5vo1gsTsq7R6PRmW7eTqfjuR9j
      1Go1zs/PZ4qpxoKYsbpsbmOA8U7ws8ffY1guiwspXuwcsbGeR29qOJLCYjqCdn6OP5amU60R
      XAzz6kWBzTvr9Npdbn/xBQGfROloH8u0qGhDNlbinNY18ptbRJT33xCXDjEXF3OtBxgPgHq9
      jugO0dp9Ot0OicwKURlMoNNu0u4OiMdjaLVz4ksJOi2DWDJBTJEYODbh+AL6eZ3zxmuUUAzZ
      NrAAJZhkOZN4bz8uqRAXF3NNhfiQsij9Xg81GPzDdWC/18MfCDKLBmTaAeC6Ltvb2+RyOWzb
      RpIk4vHpNMe2bfPkyROCwSDhcBhVVVle/jBn+7dxfHxMt9tldXWVXq83k7mF67oUCgVPTjVj
      dLtdfv31Vz7//HPPlAzbtvnxxx9ZW1sjmUzObxboQ1KP7/ubPyN9OS0nqV6vU6/XyefzPH36
      lKtXr049ACRJ4t69e+zs7NBut7Esy9MACAaDFAoFlpeXZ3Z3KZVKHBwczDQA9vb26PV6FIvF
      mXQSkUhkEgPMbRAsSdLkKSEIAqIoTt6TJAlcB0EYvSe82ScQJ5+P9ghGewUgigIgvHP8h76m
      zZoIgkAoFOLBgwdomsbJyYmn6z8+Piafz2OapucaSa7rIkkSiqJMskBe2zk6Opqoy7zi1q1b
      +P1+fD7vOgzLsggEApMH09zOAGP88OA/yd28QTSaZmD0icejGN0OPz//kZt3vkQSodtoIPgV
      MgsL+FU/guDw8L+/52/3t/j+x1f87WaWki7wxa38R+9vOp2m1WqxtbU1U2XnbDZLOBxmdXXV
      c0Vl0zTJ5XI0m00cx5mUWp8WgiDw7bff0ul08Ps/tD7TP8O2baLRKCsrK57bkCQJXdcneytz
      GwOMcVzYpVJtEgpFSIRVanqP1eVVzhtnuI6LaLu4fj+i3WMohLhz6waCYFN49ZLWQEIKKNit
      Olrf5e9//w/kKd0yLh1iLi58Pt/8xgBjxJKLIEgEg2FOa01WV3JkF0alUSxD5/TcYDkRR/Sl
      MQ2DUrlMbnWZ5NJVpJY24p2nEtyURUzbQRanC74uuUAXG3M7A3i9rHHm5c/CtGVRXNdlb2+P
      aDRKoVAgl8uR+4Aykm/Dtm2ePn2K67r4/X4URfFEpxhnTBYWFmg0GjM5xDiOw+PHjycUBC9o
      NBrs7OywtbVFNBr11IZpmjx58oSVlRU2Nzfndwb4v1oWZTAYUKvVCIVC7wg3poEkSdy+fZty
      uYzjOJ5pIfv7+7iuS7PZ9MzfGePg4GBmPUEymWRxcXGmdmRZ5saNG5MgeG6zQGOUDveoNdtT
      lUs3DYO3GTydVpOB5dBqvsZ0RgzPj4V2u42u6xweHtLtdj27uxSLRa5everZIWYsiDk6OiIc
      DlOtVj0PpLfbmiULtLu7y9HRkefjYfRgfPDgweT3uV0CjW/4SrlMr9dDkCUWFxYBl8ZZBQuZ
      UCyJ09OQQ3ECPgXH7vPq1S7ZdIYOsH7zJqokUjzcQ1Bj1A+2ufZv/07h51ds3LtHSH5/QOzF
      IWb8L3Fdd5KinRbjY2epavfbvsxaF2jcp1mOn+U7+W0b4XB4fpdAY9SrJVIrNzENncZZGSGQ
      QPKHEGwHu/uanhOE5gldMYZp9Vi5coWQADG/j5ZhkwmJSEoQo3WKP5amcXqKhUmlUmf96vvJ
      XYIgzJS3vsTHxdzPAP1+n0AgQLfb4bRcZCm/juha8Oay9fM6UijFoF1HCsSRrA6CGiUaUmk2
      XxOIL+JzTWxziCRJmK5AOBSk3+sTCr2/TPclF+jiYq65QIPB4JOLuGHEBp2mLIphGDx+/JhU
      KkWz2SSVSrG5uTn1ecvlMuVyGdM0URTFU/Zlb2+PUqnE0tISnU5nJoeYUqmEruvcvn3b0/Ew
      cposFovcvXvXs856LDhKpVLcvn17fpdAF0WGOC0XSFVVMpkMCwsLKIoykyDGtu2ZBDGZTAbT
      NKlWq0iSNJNDTC6XY2dnNh2FLMuYpsnZ2ZnnAeDz+QgEApOBPLcDAADXobC3iy+SJrc0Woac
      lA6R1RCGJXBleQGsLtWmSTQSJBgYbfPXT8uo0QX02jHx1XXq5UOuXrvmSRM8LQaDAdlsduKC
      4rUydCqVot/vk8lkplalvd2Xzc1NEokEsizPPKNOMxP+HpaWllBV1XNRLBjtA9y5c4d6vQ7M
      cQwAgDPk6U8/s3z9KgxFXKvLXuEAVYZI5iqDTptsJkxNk/BLQ1by1wmpMsXDAxxJpVl6xepn
      X1EtHLC8fsdTMdxLh5iLC1EU53cJNIJAMpXg7PQEq2cjKAr56zdR3D6i7KMy9KO3O+BG0c41
      FpYMZMGPIKuYWpVgMsvZySkD1+bs9JT02pWpe+C67oXZlLvEP2O+ZwDXpd/vISl+HHOAKCtI
      4pvyJqKI0e+hqv43lGdoNRv4Y2kUcZwrBtcVkCQRx3E8USSmLYtimibPnz9nY2ODSqVCOp0m
      lUpNdc6xMYbf72c4HKIoiieDjFqtRqPRIJvNUq/XWVtb8xwEVyoVWq0Wm5ubntvo9Xq8ePGC
      ra0tz8sg13U5Pj4ml8sRjUbndwYY71rKPgVcB0n2AS6O82a8Ow4+nzLhuNs2hGMJwGZMex89
      Gka2qaNDpufDT3vMWA+wu7uLpmmehCwwih3GPr+yLHsaAKqqYhgGR0dHqKrKYDDwTGf2+/0U
      CgVs2/ZMqyiXyyQSiZlcalzXRdf1SVw0t1QI0zQvxGvaLMxYsDEcDgmFQp4yJ67rUiqVuHHj
      BqIoes4EVatVcrkcgiBgmubMu7iyLHsOyGEU2A8GA0qlkuc2BEFAVdXJdzK3M8AILge7rzAc
      idzyMqGYyvlrg3TaG5Pwr4Aoiui6zt27d6lWq54zJ2N/r1kEMYqicHJywvXr1z2b/Y0xHA7J
      ZDKe+wIjw3Wvs9kYtm3T7XZpNpvAHMcAvV4P7C5HlR5Rv8nBQZHklSVa5deEUzHK+7tEsjl8
      jsPaZ1uE1I9T977dbs+lt9Y8YHFxcX5jAACkAMNOgXJb4trVVVquy0r+Bjg6xtIqqUwK2Rf+
      aDc/jJ7El1SIi4v5ngEuAKblAg2HQ54/f87du3d5+vQp9+7dmzpodF2XZ8+esb6+zv7+Poqi
      eKJTjHF4eEilUpnJIcZxHB4+fMjXX3/tuR+aplEqldja2vLchmmaPHz4kNXVVa5duyb8D3+E
      NDJbr3ClAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
